select count ( * ) from head where age > 56
select name , born_state , age from head order by age
select creation , name , budget_in_billions from department
select max ( budget_in_billions ) , min ( budget_in_billions ) from department
select avg ( num_employees ) from department where ranking between 10 and 15
select name from head where born_state ! = 'california '
select distinct t1.creation from department as t1 join management as t2 on t1.department_id = t2.department_id join head as t3 on t2.head_id = t3.head_id where t3.born_state = 'alabama '
select born_state from head group by born_state having count ( * ) > = 3
select creation from department group by creation order by count ( * ) desc limit 1
select t1.name , t1.num_employees from department as t1 join management as t2 on t1.department_id = t2.department_id where t2.temporary_acting = 'yes '
select count ( distinct temporary_acting ) from management
select count ( * ) from department where department_id not in ( select department_id from management ) ;
select distinct t1.age from management as t2 join head as t1 on t1.head_id = t2.head_id where t2.temporary_acting = 'yes '
select t3.born_state from department as t1 join management as t2 on t1.department_id = t2.department_id join head as t3 on t2.head_id = t3.head_id where t1.name = 'treasury ' intersect select t3.born_state from department as t1 join management as t2 on t1.department_id = t2.department_id join head as t3 on t2.head_id = t3.head_id where t1.name = 'homeland security '
select t1.department_id , t1.name , count ( * ) from management as t2 join department as t1 on t1.department_id = t2.department_id group by t1.department_id having count ( * ) > 1
select head_id , name from head where name like ' % ha % '
select count ( * ) from farm
select count ( * ) from farm
select total_horses from farm order by total_horses asc
select total_horses from farm order by total_horses asc
select hosts from farm_competition where theme ! = 'aliens '
select hosts from farm_competition where theme ! = 'aliens '
select theme from farm_competition order by year asc
select theme from farm_competition order by year asc
select avg ( working_horses ) from farm where total_horses > 5000
select avg ( working_horses ) from farm where total_horses > 5000
select max ( cows ) , min ( cows ) from farm
select max ( cows ) , min ( cows ) from farm
select count ( distinct status ) from city
select count ( distinct status ) from city
select official_name from city order by population desc
select official_name from city order by population desc
select official_name , status from city order by population desc limit 1
select official_name , status from city order by population desc limit 1
select t2.year , t1.official_name from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id
select t2.year , t1.official_name from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id
select t1.official_name from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t2.host_city_id having count ( * ) > 1
select t1.official_name from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t2.host_city_id having count ( * ) > 1
select t1.status from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t2.host_city_id order by count ( * ) desc limit 1
select t1.status from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t2.host_city_id order by count ( * ) desc limit 1
select t2.theme from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id where t1.population > 1000
select t2.theme from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id where t1.population > 1000
select status , avg ( population ) from city group by status
select status , avg ( population ) from city group by status
select status from city group by status order by count ( * ) asc
select status from city group by status order by count ( * ) asc
select status from city group by status order by count ( * ) desc limit 1
select status from city group by status order by count ( * ) desc limit 1
select official_name from city where city_id not in ( select host_city_id from farm_competition )
select official_name from city where city_id not in ( select host_city_id from farm_competition )
select status from city where population > 1500 intersect select status from city where population < 500
select status from city where population > 1500 intersect select status from city where population < 500
select official_name from city where population > 1500 or population < 500
select official_name from city where population > 1500 or population < 500
select census_ranking from city where status ! = `` village ''
select census_ranking from city where status ! = `` village ''
select t1.course_name from courses as t1 join student_course_registrations as t2 on t1.course_id = t2.course_id group by t1.course_id order by count ( * ) desc limit 1
select t1.course_name from courses as t1 join student_course_registrations as t2 on t1.course_id = t2.course_id group by t1.course_id order by count ( * ) desc limit 1
select student_id from student_course_registrations group by student_id order by count ( * ) limit 1
select student_id from student_course_registrations group by student_id order by count ( * ) limit 1
select t2.first_name , t2.last_name from candidates as t1 join people as t2 on t1.candidate_id = t2.person_id
select t2.first_name , t2.last_name from candidates as t1 join people as t2 on t1.candidate_id = t2.person_id
select student_id from students where student_id not in ( select student_id from student_course_attendance )
select student_id from students where student_id not in ( select student_id from student_course_attendance )
select student_id from student_course_attendance
select student_id from student_course_attendance
select t1.student_id , t2.course_name from student_course_registrations as t1 join courses as t2 on t1.course_id = t2.course_id
select t2.student_details from student_course_registrations as t1 join students as t2 on t1.student_id = t2.student_id order by t1.registration_date desc limit 1
select t2.student_details from student_course_registrations as t1 join students as t2 on t1.student_id = t2.student_id order by t1.registration_date desc limit 1
select count ( * ) from courses as t1 join student_course_attendance as t2 on t1.course_id = t2.course_id where t1.course_name = `` english ''
select count ( * ) from courses as t1 join student_course_attendance as t2 on t1.course_id = t2.course_id where t1.course_name = `` english ''
select count ( * ) from courses as t1 join student_course_attendance as t2 on t1.course_id = t2.course_id where t2.student_id = 171
select count ( * ) from courses as t1 join student_course_attendance as t2 on t1.course_id = t2.course_id where t2.student_id = 171
select t2.candidate_id from people as t1 join candidates as t2 on t1.person_id = t2.candidate_id where t1.email_address = `` stanley.monahan @ example.org ''
select t2.candidate_id from people as t1 join candidates as t2 on t1.person_id = t2.candidate_id where t1.email_address = `` stanley.monahan @ example.org ''
select candidate_id from candidate_assessments order by assessment_date desc limit 1
select candidate_id from candidate_assessments order by assessment_date desc limit 1
select t1.student_details from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id group by t1.student_id order by count ( * ) desc limit 1
select t1.student_details from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id group by t1.student_id order by count ( * ) desc limit 1
select t1.student_id , count ( * ) from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id group by t1.student_id
select t1.student_id , count ( * ) from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id group by t1.student_id
select t3.course_name , count ( * ) from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id join courses as t3 on t2.course_id = t3.course_id group by t2.course_id
select t3.course_name , count ( * ) from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id join courses as t3 on t2.course_id = t3.course_id group by t2.course_id
select candidate_id from candidate_assessments where asessment_outcome_code = `` pass ''
select candidate_id from candidate_assessments where asessment_outcome_code = `` pass ''
select t3.cell_mobile_number from candidates as t1 join candidate_assessments as t2 on t1.candidate_id = t2.candidate_id join people as t3 on t1.candidate_id = t3.person_id where t2.asessment_outcome_code = `` fail ''
select t3.cell_mobile_number from candidates as t1 join candidate_assessments as t2 on t1.candidate_id = t2.candidate_id join people as t3 on t1.candidate_id = t3.person_id where t2.asessment_outcome_code = `` fail ''
select student_id from student_course_attendance where course_id = 301
select student_id from student_course_attendance where course_id = 301
select student_id from student_course_attendance where course_id = 301 order by date_of_attendance desc limit 1
select student_id from student_course_attendance where course_id = 301 order by date_of_attendance desc limit 1
select distinct t1.city from addresses as t1 join people_addresses as t2 on t1.address_id = t2.address_id
select distinct t1.city from addresses as t1 join people_addresses as t2 on t1.address_id = t2.address_id
select distinct t1.city from addresses as t1 join people_addresses as t2 on t1.address_id = t2.address_id join students as t3 on t2.person_id = t3.student_id
select distinct t1.city from addresses as t1 join people_addresses as t2 on t1.address_id = t2.address_id join students as t3 on t2.person_id = t3.student_id
select course_name from courses order by course_name
select course_name from courses order by course_name
select first_name from people order by first_name
select first_name from people order by first_name
select student_id from student_course_registrations union select student_id from student_course_attendance
select student_id from student_course_registrations union select student_id from student_course_attendance
select course_id from student_course_registrations where student_id = 121 union select course_id from student_course_attendance where student_id = 121
select course_id from student_course_registrations where student_id = 121 union select course_id from student_course_attendance where student_id = 121
select * from student_course_registrations where student_id not in ( select student_id from student_course_attendance )
select * from student_course_registrations where student_id not in ( select student_id from student_course_attendance )
select t2.student_id from courses as t1 join student_course_registrations as t2 on t1.course_id = t2.course_id where t1.course_name = `` statistics '' order by t2.registration_date
select t2.student_id from courses as t1 join student_course_registrations as t2 on t1.course_id = t2.course_id where t1.course_name = `` statistics '' order by t2.registration_date
select t2.student_id from courses as t1 join student_course_attendance as t2 on t1.course_id = t2.course_id where t1.course_name = `` statistics '' order by t2.date_of_attendance
select t2.student_id from courses as t1 join student_course_attendance as t2 on t1.course_id = t2.course_id where t1.course_name = `` statistics '' order by t2.date_of_attendance
select date from weather where max_temperature_f > 85
select date from weather where max_temperature_f > 85
select name from station where lat < 37.5
select name from station where lat < 37.5
select city , max ( lat ) from station group by city
select city , max ( lat ) from station group by city
select start_station_name , end_station_name from trip order by id limit 3
select start_station_name , end_station_name from trip order by id limit 3
select avg ( lat ) , avg ( long ) from station where city = `` san jose ''
select avg ( lat ) , avg ( long ) from station where city = `` san jose ''
select id from trip order by duration limit 1
select id from trip order by duration limit 1
select sum ( duration ) , max ( duration ) from trip where bike_id = 636
select sum ( duration ) , max ( duration ) from trip where bike_id = 636
select zip_code , avg ( mean_temperature_f ) from weather where date like `` 8/ % '' group by zip_code
select zip_code , avg ( mean_temperature_f ) from weather where date like `` 8/ % '' group by zip_code
select count ( distinct bike_id ) from trip
select count ( distinct bike_id ) from trip
select count ( distinct city ) from station
select count ( distinct city ) from station
select count ( * ) from station where city = `` mountain view ''
select count ( * ) from station where city = `` mountain view ''
select distinct t1.name from station as t1 join status as t2 on t1.id = t2.station_id where t2.bikes_available = 7
select distinct t1.name from station as t1 join status as t2 on t1.id = t2.station_id where t2.bikes_available = 7
select start_station_name , start_station_id from trip where start_date like `` 8/ % '' group by start_station_name order by count ( * ) desc limit 1
select start_station_name , start_station_id from trip where start_date like `` 8/ % '' group by start_station_name order by count ( * ) desc limit 1
select bike_id from trip where zip_code = 94002 group by bike_id order by count ( * ) desc limit 1
select bike_id from trip where zip_code = 94002 group by bike_id order by count ( * ) desc limit 1
select count ( * ) from weather where mean_humidity > 50 and mean_visibility_miles > 8
select count ( * ) from weather where mean_humidity > 50 and mean_visibility_miles > 8
select t1.lat , t1.long , t1.city from station as t1 join trip as t2 on t1.id = t2.start_station_id order by t2.duration limit 1
select t1.lat , t1.long , t1.city from station as t1 join trip as t2 on t1.id = t2.start_station_id order by t2.duration limit 1
select id from station where city = `` san francisco '' intersect select station_id from status group by station_id having avg ( bikes_available ) > 10
select id from station where city = `` san francisco '' intersect select station_id from status group by station_id having avg ( bikes_available ) > 10
select t1.name , t1.id from station as t1 join status as t2 on t1.id = t2.station_id group by t2.station_id having avg ( t2.bikes_available ) > 14 union select name , id from station where installation_date like `` 12/ % ''
select t1.name , t1.id from station as t1 join status as t2 on t1.id = t2.station_id group by t2.station_id having avg ( t2.bikes_available ) > 14 union select name , id from station where installation_date like `` 12/ % ''
select cloud_cover from weather where zip_code = 94107 group by cloud_cover order by count ( * ) desc limit 3
select cloud_cover from weather where zip_code = 94107 group by cloud_cover order by count ( * ) desc limit 3
select zip_code from weather group by zip_code order by avg ( mean_sea_level_pressure_inches ) limit 1
select zip_code from weather group by zip_code order by avg ( mean_sea_level_pressure_inches ) limit 1
select avg ( bikes_available ) from status where station_id not in ( select id from station where city = `` palo alto '' )
select avg ( bikes_available ) from status where station_id not in ( select id from station where city = `` palo alto '' )
select avg ( long ) from station where id not in ( select station_id from status group by station_id having max ( bikes_available ) > 10 )
select avg ( long ) from station where id not in ( select station_id from status group by station_id having max ( bikes_available ) > 10 )
select date , zip_code from weather where max_temperature_f > = 80
select date , zip_code from weather where max_temperature_f > = 80
select t1.id from trip as t1 join weather as t2 on t1.zip_code = t2.zip_code group by t2.zip_code having avg ( t2.mean_temperature_f ) > 60
select t1.id from trip as t1 join weather as t2 on t1.zip_code = t2.zip_code group by t2.zip_code having avg ( t2.mean_temperature_f ) > 60
select zip_code , count ( * ) from weather where max_wind_speed_mph > = 25 group by zip_code
select zip_code , count ( * ) from weather where max_wind_speed_mph > = 25 group by zip_code
select date , zip_code from weather where min_dew_point_f < ( select min ( min_dew_point_f ) from weather where zip_code = 94107 )
select date , zip_code from weather where min_dew_point_f < ( select min ( min_dew_point_f ) from weather where zip_code = 94107 )
select t1.id , t2.installation_date from trip as t1 join station as t2 on t1.end_station_id = t2.id
select t1.id , t2.installation_date from trip as t1 join station as t2 on t1.end_station_id = t2.id
select t1.id from trip as t1 join station as t2 on t1.start_station_id = t2.id order by t2.dock_count desc limit 1
select t1.id from trip as t1 join station as t2 on t1.start_station_id = t2.id order by t2.dock_count desc limit 1
select count ( * ) from trip as t1 join station as t2 on t1.end_station_id = t2.id where t2.city ! = `` san francisco ''
select count ( * ) from trip as t1 join station as t2 on t1.end_station_id = t2.id where t2.city ! = `` san francisco ''
select date from weather where zip_code = 94107 and events ! = `` fog '' and events ! = `` rain ''
select date from weather where zip_code = 94107 and events ! = `` fog '' and events ! = `` rain ''
select id from station where lat > 37.4 except select station_id from status group by station_id having min ( bikes_available ) < 7
select id from station where lat > 37.4 except select station_id from status group by station_id having min ( bikes_available ) < 7
select t1.name from station as t1 join status as t2 on t1.id = t2.station_id group by t2.station_id having avg ( bikes_available ) > 10 except select name from station where city = `` san jose ''
select t1.name from station as t1 join status as t2 on t1.id = t2.station_id group by t2.station_id having avg ( bikes_available ) > 10 except select name from station where city = `` san jose ''
select name , lat , city from station order by lat limit 1
select name , lat , city from station order by lat limit 1
select date , mean_temperature_f , mean_humidity from weather order by max_gust_speed_mph desc limit 3
select date , mean_temperature_f , mean_humidity from weather order by max_gust_speed_mph desc limit 3
select city , count ( * ) from station group by city having count ( * ) > = 15
select city , count ( * ) from station group by city having count ( * ) > = 15
select start_station_id , start_station_name from trip group by start_station_name having count ( * ) > = 200
select start_station_id , start_station_name from trip group by start_station_name having count ( * ) > = 200
select zip_code from weather group by zip_code having avg ( mean_visibility_miles ) < 10
select zip_code from weather group by zip_code having avg ( mean_visibility_miles ) < 10
select city from station group by city order by max ( lat ) desc
select city from station group by city order by max ( lat ) desc
select date , cloud_cover from weather order by cloud_cover desc limit 5
select date , cloud_cover from weather order by cloud_cover desc limit 5
select id , duration from trip order by duration desc limit 3
select id , duration from trip order by duration desc limit 3
select t1.name , t1.long , avg ( t2.duration ) from station as t1 join trip as t2 on t1.id = t2.start_station_id group by t2.start_station_id
select t1.name , t1.long , avg ( t2.duration ) from station as t1 join trip as t2 on t1.id = t2.start_station_id group by t2.start_station_id
select t1.name , t1.lat , min ( t2.duration ) from station as t1 join trip as t2 on t1.id = t2.end_station_id group by t2.end_station_id
select t1.name , t1.lat , min ( t2.duration ) from station as t1 join trip as t2 on t1.id = t2.end_station_id group by t2.end_station_id
select distinct start_station_name from trip where duration < 100
select distinct start_station_name from trip where duration < 100
select distinct zip_code from weather except select distinct zip_code from weather where max_dew_point_f > = 70
select distinct zip_code from weather except select distinct zip_code from weather where max_dew_point_f > = 70
select id from trip where duration > = ( select avg ( duration ) from trip where zip_code = 94103 )
select id from trip where duration > = ( select avg ( duration ) from trip where zip_code = 94103 )
select date from weather where mean_sea_level_pressure_inches between 30.3 and 31
select date from weather where mean_sea_level_pressure_inches between 30.3 and 31
select date , max_temperature_f - min_temperature_f from weather order by max_temperature_f - min_temperature_f limit 1
select date , max_temperature_f - min_temperature_f from weather order by max_temperature_f - min_temperature_f limit 1
select distinct t1.id , t1.name from station as t1 join status as t2 on t1.id = t2.station_id where t2.bikes_available > 12
select distinct t1.id , t1.name from station as t1 join status as t2 on t1.id = t2.station_id where t2.bikes_available > 12
select zip_code from weather group by zip_code having avg ( mean_humidity ) < 70 intersect select zip_code from trip group by zip_code having count ( * ) > = 100
select zip_code from weather group by zip_code having avg ( mean_humidity ) < 70 intersect select zip_code from trip group by zip_code having count ( * ) > = 100
select name from station where city = `` palo alto '' except select end_station_name from trip group by end_station_name having count ( * ) > 100
select name from station where city = `` palo alto '' except select end_station_name from trip group by end_station_name having count ( * ) > 100
select count ( * ) from station as t1 join trip as t2 join station as t3 join trip as t4 on t1.id = t2.start_station_id and t2.id = t4.id and t3.id = t4.end_station_id where t1.city = `` mountain view '' and t3.city = `` palo alto ''
select count ( * ) from station as t1 join trip as t2 join station as t3 join trip as t4 on t1.id = t2.start_station_id and t2.id = t4.id and t3.id = t4.end_station_id where t1.city = `` mountain view '' and t3.city = `` palo alto ''
select avg ( t1.lat ) , avg ( t1.long ) from station as t1 join trip as t2 on t1.id = t2.start_station_id
select avg ( t1.lat ) , avg ( t1.long ) from station as t1 join trip as t2 on t1.id = t2.start_station_id
select count ( * ) from book
select writer from book order by writer asc
select title from book order by issues asc
select title from book where writer ! = `` elaine lee ''
select title , issues from book
select publication_date from publication order by price desc
select distinct publisher from publication where price > 5000000
select publisher from publication order by price desc limit 1
select publication_date from publication order by price asc limit 3
select t1.title , t2.publication_date from book as t1 join publication as t2 on t1.book_id = t2.book_id
select t1.writer from book as t1 join publication as t2 on t1.book_id = t2.book_id where t2.price > 4000000
select t1.title from book as t1 join publication as t2 on t1.book_id = t2.book_id order by t2.price desc
select publisher from publication group by publisher having count ( * ) > 1
select publisher , count ( * ) from publication group by publisher
select publication_date from publication group by publication_date order by count ( * ) desc limit 1
select writer from book group by writer having count ( * ) > 1
select title from book where book_id not in ( select book_id from publication )
select publisher from publication where price > 10000000 intersect select publisher from publication where price < 5000000
select count ( distinct publication_date ) from publication
select count ( distinct publication_date ) from publication
select price from publication where publisher = `` person '' or publisher = `` wiley ''
select count ( * ) from actor
select count ( * ) from actor
select name from actor order by name asc
select name from actor order by name asc
select character , duration from actor
select character , duration from actor
select name from actor where age ! = 20
select name from actor where age ! = 20
select character from actor order by age desc
select character from actor order by age desc
select duration from actor order by age desc limit 1
select duration from actor order by age desc limit 1
select name from musical where nominee = `` bob fosse ''
select name from musical where nominee = `` bob fosse ''
select distinct nominee from musical where award ! = `` tony award ''
select distinct nominee from musical where award ! = `` tony award ''
select t1.name , t2.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id
select t1.name , t2.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id
select t1.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id where t2.name = `` the phantom of the opera ''
select t1.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id where t2.name = `` the phantom of the opera ''
select t1.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id order by t2.year desc
select t1.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id order by t2.year desc
select t2.name , count ( * ) from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id group by t1.musical_id
select t2.name , count ( * ) from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id group by t1.musical_id
select t2.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id group by t1.musical_id having count ( * ) > = 3
select t2.name from actor as t1 join musical as t2 on t1.musical_id = t2.musical_id group by t1.musical_id having count ( * ) > = 3
select nominee , count ( * ) from musical group by nominee
select nominee , count ( * ) from musical group by nominee
select nominee from musical group by nominee order by count ( * ) desc limit 1
select nominee from musical group by nominee order by count ( * ) desc limit 1
select result from musical group by result order by count ( * ) desc limit 1
select result from musical group by result order by count ( * ) desc limit 1
select nominee from musical group by nominee having count ( * ) > 2
select nominee from musical group by nominee having count ( * ) > 2
select name from musical where musical_id not in ( select musical_id from actor )
select name from musical where musical_id not in ( select musical_id from actor )
select nominee from musical where award = `` tony award '' intersect select nominee from musical where award = `` drama desk award ''
select nominee from musical where award = `` tony award '' intersect select nominee from musical where award = `` drama desk award ''
select nominee from musical where award = `` tony award '' or award = `` cleavant derricks ''
select nominee from musical where award = `` tony award '' or award = `` cleavant derricks ''
select email from user_profiles where name = 'mary '
select partitionid from user_profiles where name = 'iron man '
select count ( * ) from user_profiles
select count ( * ) from follows
select count ( * ) from follows group by f1
select count ( * ) from tweets
select count ( distinct uid ) from tweets
select name , email from user_profiles where name like ' % swift % '
select name from user_profiles where email like ' % superstar % ' or email like ' % edu % '
select text from tweets where text like ' % intern % '
select name , email from user_profiles where followers > 1000
select t1.name from user_profiles as t1 join follows as t2 on t1.uid = t2.f1 group by t2.f1 having count ( * ) > ( select count ( * ) from user_profiles as t1 join follows as t2 on t1.uid = t2.f1 where t1.name = 'tyler swift ' )
select t1.name , t1.email from user_profiles as t1 join follows as t2 on t1.uid = t2.f1 group by t2.f1 having count ( * ) > 1
select t1.name from user_profiles as t1 join tweets as t2 on t1.uid = t2.uid group by t2.uid having count ( * ) > 1
select t2.f1 from user_profiles as t1 join follows as t2 on t1.uid = t2.f2 where t1.name = `` mary '' intersect select t2.f1 from user_profiles as t1 join follows as t2 on t1.uid = t2.f2 where t1.name = `` susan ''
select t2.f1 from user_profiles as t1 join follows as t2 on t1.uid = t2.f2 where t1.name = `` mary '' or t1.name = `` susan ''
select name from user_profiles order by followers desc limit 1
select name , email from user_profiles order by followers limit 1
select name , followers from user_profiles order by followers desc
select name from user_profiles order by followers desc limit 5
select text from tweets order by createdate
select t1.name , count ( * ) from user_profiles as t1 join tweets as t2 on t1.uid = t2.uid group by t2.uid
select t1.name , t1.partitionid from user_profiles as t1 join tweets as t2 on t1.uid = t2.uid group by t2.uid having count ( * ) < 2
select t1.name , count ( * ) from user_profiles as t1 join tweets as t2 on t1.uid = t2.uid group by t2.uid having count ( * ) > 1
select avg ( followers ) from user_profiles where uid not in ( select uid from tweets )
select avg ( followers ) from user_profiles where uid in ( select uid from tweets )
select max ( followers ) , sum ( followers ) from user_profiles
select distinct ( catalog_entry_name ) from catalog_contents
select distinct ( catalog_entry_name ) from catalog_contents
select attribute_data_type from attribute_definitions group by attribute_data_type having count ( * ) > 3
select attribute_data_type from attribute_definitions group by attribute_data_type having count ( * ) > 3
select attribute_data_type from attribute_definitions where attribute_name = `` green ''
select attribute_data_type from attribute_definitions where attribute_name = `` green ''
select catalog_level_name , catalog_level_number from catalog_structure where catalog_level_number between 5 and 10
select catalog_level_name , catalog_level_number from catalog_structure where catalog_level_number between 5 and 10
select distinct ( catalog_publisher ) from catalogs where catalog_publisher like `` % murray % ''
select distinct ( catalog_publisher ) from catalogs where catalog_publisher like `` % murray % ''
select catalog_publisher from catalogs group by catalog_publisher order by count ( * ) desc limit 1
select catalog_publisher from catalogs group by catalog_publisher order by count ( * ) desc limit 1
select t1.catalog_name , t1.date_of_publication from catalogs as t1 join catalog_structure as t2 on t1.catalog_id = t2.catalog_id where catalog_level_number > 5
select t1.catalog_name , t1.date_of_publication from catalogs as t1 join catalog_structure as t2 on t1.catalog_id = t2.catalog_id where catalog_level_number > 5
select t1.catalog_entry_name from catalog_contents as t1 join catalog_contents_additional_attributes as t2 on t1.catalog_entry_id = t2.catalog_entry_id where t2.attribute_value = ( select attribute_value from catalog_contents_additional_attributes group by attribute_value order by count ( * ) desc limit 1 )
select t1.catalog_entry_name from catalog_contents as t1 join catalog_contents_additional_attributes as t2 on t1.catalog_entry_id = t2.catalog_entry_id where t2.attribute_value = ( select attribute_value from catalog_contents_additional_attributes group by attribute_value order by count ( * ) desc limit 1 )
select catalog_entry_name from catalog_contents order by price_in_dollars desc limit 1
select catalog_entry_name from catalog_contents order by price_in_dollars desc limit 1
select t2.catalog_level_name from catalog_contents as t1 join catalog_structure as t2 on t1.catalog_level_number = t2.catalog_level_number order by t1.price_in_dollars limit 1
select t2.catalog_level_name from catalog_contents as t1 join catalog_structure as t2 on t1.catalog_level_number = t2.catalog_level_number order by t1.price_in_dollars limit 1
select avg ( price_in_euros ) , min ( price_in_euros ) from catalog_contents
select avg ( price_in_euros ) , min ( price_in_euros ) from catalog_contents
select catalog_entry_name from catalog_contents order by height desc limit 1
select catalog_entry_name from catalog_contents order by height desc limit 1
select catalog_entry_name from catalog_contents order by capacity asc limit 1
select catalog_entry_name from catalog_contents order by capacity asc limit 1
select catalog_entry_name from catalog_contents where product_stock_number like `` 2 % ''
select catalog_entry_name from catalog_contents where product_stock_number like `` 2 % ''
select t1.catalog_entry_name from catalog_contents as t1 join catalog_contents_additional_attributes as t2 on t1.catalog_entry_id = t2.catalog_entry_id where t2.catalog_level_number = `` 8 ''
select t1.catalog_entry_name from catalog_contents as t1 join catalog_contents_additional_attributes as t2 on t1.catalog_entry_id = t2.catalog_entry_id where t2.catalog_level_number = `` 8 ''
select catalog_entry_name from catalog_contents where length < 3 or width > 5
select catalog_entry_name from catalog_contents where length < 3 or width > 5
select t1.attribute_name , t1.attribute_id from attribute_definitions as t1 join catalog_contents_additional_attributes as t2 on t1.attribute_id = t2.attribute_id where t2.attribute_value = 0
select t1.attribute_name , t1.attribute_id from attribute_definitions as t1 join catalog_contents_additional_attributes as t2 on t1.attribute_id = t2.attribute_id where t2.attribute_value = 0
select catalog_entry_name , capacity from catalog_contents where price_in_dollars > 700
select catalog_entry_name , capacity from catalog_contents where price_in_dollars > 700
select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > 1
select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > 1
select count ( * ) from catalog_contents
select count ( * ) from catalog_contents
select catalog_entry_name from catalog_contents where next_entry_id > 8
select catalog_entry_name from catalog_contents where next_entry_id > 8
select count ( * ) from aircraft
select count ( * ) from aircraft
select name , distance from aircraft
select name , distance from aircraft
select aid from aircraft where distance > 1000
select aid from aircraft where distance > 1000
select count ( * ) from aircraft where distance between 1000 and 5000
select count ( * ) from aircraft where distance between 1000 and 5000
select name , distance from aircraft where aid = 12
select name , distance from aircraft where aid = 12
select min ( distance ) , avg ( distance ) , max ( distance ) from aircraft
select min ( distance ) , avg ( distance ) , max ( distance ) from aircraft
select aid , name from aircraft order by distance desc limit 1
select aid , name from aircraft order by distance desc limit 1
select name from aircraft order by distance limit 3
select name from aircraft order by distance limit 3
select name from aircraft where distance > ( select avg ( distance ) from aircraft )
select name from aircraft where distance > ( select avg ( distance ) from aircraft )
select count ( * ) from employee
select count ( * ) from employee
select name , salary from employee order by salary
select name , salary from employee order by salary
select eid from employee where salary > 100000
select eid from employee where salary > 100000
select count ( * ) from employee where salary between 100000 and 200000
select count ( * ) from employee where salary between 100000 and 200000
select name , salary from employee where eid = 242518965
select name , salary from employee where eid = 242518965
select avg ( salary ) , max ( salary ) from employee
select avg ( salary ) , max ( salary ) from employee
select eid , name from employee order by salary desc limit 1
select eid , name from employee order by salary desc limit 1
select name from employee order by salary asc limit 3
select name from employee order by salary asc limit 3
select name from employee where salary > ( select avg ( salary ) from employee )
select name from employee where salary > ( select avg ( salary ) from employee )
select eid , salary from employee where name = 'mark young '
select eid , salary from employee where name = 'mark young '
select count ( * ) from flight
select count ( * ) from flight
select flno , origin , destination from flight order by origin
select flno , origin , destination from flight order by origin
select flno from flight where origin = `` los angeles ''
select flno from flight where origin = `` los angeles ''
select origin from flight where destination = `` honolulu ''
select origin from flight where destination = `` honolulu ''
select departure_date , arrival_date from flight where origin = `` los angeles '' and destination = `` honolulu ''
select departure_date , arrival_date from flight where origin = `` los angeles '' and destination = `` honolulu ''
select flno from flight where distance > 2000
select flno from flight where distance > 2000
select avg ( price ) from flight where origin = `` los angeles '' and destination = `` honolulu ''
select avg ( price ) from flight where origin = `` los angeles '' and destination = `` honolulu ''
select origin , destination from flight where price > 300
select origin , destination from flight where price > 300
select flno , distance from flight order by price desc limit 1
select flno , distance from flight order by price desc limit 1
select flno from flight order by distance asc limit 3
select flno from flight order by distance asc limit 3
select avg ( distance ) , avg ( price ) from flight where origin = `` los angeles ''
select avg ( distance ) , avg ( price ) from flight where origin = `` los angeles ''
select origin , count ( * ) from flight group by origin
select origin , count ( * ) from flight group by origin
select destination , count ( * ) from flight group by destination
select destination , count ( * ) from flight group by destination
select origin from flight group by origin order by count ( * ) desc limit 1
select origin from flight group by origin order by count ( * ) desc limit 1
select destination from flight group by destination order by count ( * ) limit 1
select destination from flight group by destination order by count ( * ) limit 1
select t2.name from flight as t1 join aircraft as t2 on t1.aid = t2.aid where t1.flno = 99
select t2.name from flight as t1 join aircraft as t2 on t1.aid = t2.aid where t1.flno = 99
select t1.flno from flight as t1 join aircraft as t2 on t1.aid = t2.aid where t2.name = `` airbus a340-300 ''
select t1.flno from flight as t1 join aircraft as t2 on t1.aid = t2.aid where t2.name = `` airbus a340-300 ''
select t2.name , count ( * ) from flight as t1 join aircraft as t2 on t1.aid = t2.aid group by t1.aid
select t2.name , count ( * ) from flight as t1 join aircraft as t2 on t1.aid = t2.aid group by t1.aid
select t2.name from flight as t1 join aircraft as t2 on t1.aid = t2.aid group by t1.aid having count ( * ) > = 2
select t2.name from flight as t1 join aircraft as t2 on t1.aid = t2.aid group by t1.aid having count ( * ) > = 2
select count ( distinct eid ) from certificate
select count ( distinct eid ) from certificate
select eid from employee except select eid from certificate
select eid from employee except select eid from certificate
select t3.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t1.name = `` john williams ''
select t3.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t1.name = `` john williams ''
select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` boeing 737-800 ''
select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` boeing 737-800 ''
select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` boeing 737-800 '' intersect select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` airbus a340-300 ''
select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` boeing 737-800 '' intersect select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` airbus a340-300 ''
select name from employee except select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` boeing 737-800 ''
select name from employee except select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.name = `` boeing 737-800 ''
select t2.name from certificate as t1 join aircraft as t2 on t2.aid = t1.aid group by t1.aid order by count ( * ) desc limit 1
select t2.name from certificate as t1 join aircraft as t2 on t2.aid = t1.aid group by t1.aid order by count ( * ) desc limit 1
select t2.name from certificate as t1 join aircraft as t2 on t2.aid = t1.aid where t2.distance > 5000 group by t1.aid order by count ( * ) > = 5
select t2.name from certificate as t1 join aircraft as t2 on t2.aid = t1.aid where t2.distance > 5000 group by t1.aid order by count ( * ) > = 5
select t1.name , t1.salary from employee as t1 join certificate as t2 on t1.eid = t2.eid group by t1.eid order by count ( * ) desc limit 1
select t1.name , t1.salary from employee as t1 join certificate as t2 on t1.eid = t2.eid group by t1.eid order by count ( * ) desc limit 1
select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.distance > 5000 group by t1.eid order by count ( * ) desc limit 1
select t1.name from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.distance > 5000 group by t1.eid order by count ( * ) desc limit 1
select count ( distinct allergy ) from allergy_type
select count ( distinct allergy ) from allergy_type
select count ( distinct allergytype ) from allergy_type
select count ( distinct allergytype ) from allergy_type
select distinct allergytype from allergy_type
select distinct allergytype from allergy_type
select allergy , allergytype from allergy_type
select allergy , allergytype from allergy_type
select distinct allergy from allergy_type where allergytype = `` food ''
select distinct allergy from allergy_type where allergytype = `` food ''
select allergytype from allergy_type where allergy = `` cat ''
select allergytype from allergy_type where allergy = `` cat ''
select count ( * ) from allergy_type where allergytype = `` animal ''
select count ( * ) from allergy_type where allergytype = `` animal ''
select allergytype , count ( * ) from allergy_type group by allergytype
select allergytype , count ( * ) from allergy_type group by allergytype
select allergytype from allergy_type group by allergytype order by count ( * ) desc limit 1
select allergytype from allergy_type group by allergytype order by count ( * ) desc limit 1
select allergytype from allergy_type group by allergytype order by count ( * ) asc limit 1
select allergytype from allergy_type group by allergytype order by count ( * ) asc limit 1
select count ( * ) from student
select count ( * ) from student
select fname , lname from student
select fname , lname from student
select count ( distinct advisor ) from student
select count ( distinct advisor ) from student
select distinct major from student
select distinct major from student
select distinct city_code from student
select distinct city_code from student
select fname , lname , age from student where sex = 'f '
select fname , lname , age from student where sex = 'f '
select stuid from student where sex = 'm '
select stuid from student where sex = 'm '
select count ( * ) from student where age = 18
select count ( * ) from student where age = 18
select stuid from student where age > 20
select stuid from student where age > 20
select city_code from student where lname = `` kim ''
select city_code from student where lname = `` kim ''
select advisor from student where stuid = 1004
select advisor from student where stuid = 1004
select count ( * ) from student where city_code = `` hkg '' or city_code = `` chi ''
select count ( * ) from student where city_code = `` hkg '' or city_code = `` chi ''
select min ( age ) , avg ( age ) , max ( age ) from student
select min ( age ) , avg ( age ) , max ( age ) from student
select lname from student where age = ( select min ( age ) from student )
select lname from student where age = ( select min ( age ) from student )
select stuid from student where age = ( select max ( age ) from student )
select stuid from student where age = ( select max ( age ) from student )
select major , count ( * ) from student group by major
select major , count ( * ) from student group by major
select major from student group by major order by count ( * ) desc limit 1
select major from student group by major order by count ( * ) desc limit 1
select age , count ( * ) from student group by age
select age , count ( * ) from student group by age
select avg ( age ) , sex from student group by sex
select avg ( age ) , sex from student group by sex
select city_code , count ( * ) from student group by city_code
select city_code , count ( * ) from student group by city_code
select advisor , count ( * ) from student group by advisor
select advisor , count ( * ) from student group by advisor
select advisor from student group by advisor order by count ( * ) desc limit 1
select advisor from student group by advisor order by count ( * ) desc limit 1
select count ( * ) from has_allergy where allergy = `` cat ''
select count ( * ) from has_allergy where allergy = `` cat ''
select stuid from has_allergy group by stuid having count ( * ) > = 2
select stuid from has_allergy group by stuid having count ( * ) > = 2
select stuid from student except select stuid from has_allergy
select stuid from student except select stuid from has_allergy
select count ( * ) from has_allergy as t1 join student as t2 on t1.stuid = t2.stuid where t2.sex = `` f '' and t1.allergy = `` milk '' or t1.allergy = `` eggs ''
select count ( * ) from has_allergy as t1 join student as t2 on t1.stuid = t2.stuid where t2.sex = `` f '' and t1.allergy = `` milk '' or t1.allergy = `` eggs ''
select count ( * ) from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food ''
select count ( * ) from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food ''
select allergy from has_allergy group by allergy order by count ( * ) desc limit 1
select allergy from has_allergy group by allergy order by count ( * ) desc limit 1
select allergy , count ( * ) from has_allergy group by allergy
select allergy , count ( * ) from has_allergy group by allergy
select t2.allergytype , count ( * ) from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy group by t2.allergytype
select t2.allergytype , count ( * ) from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy group by t2.allergytype
select lname , age from student where stuid in ( select stuid from has_allergy where allergy = `` milk '' intersect select stuid from has_allergy where allergy = `` cat '' )
select lname , age from student where stuid in ( select stuid from has_allergy where allergy = `` milk '' intersect select stuid from has_allergy where allergy = `` cat '' )
select t1.allergy , t1.allergytype from allergy_type as t1 join has_allergy as t2 on t1.allergy = t2.allergy join student as t3 on t3.stuid = t2.stuid where t3.fname = `` lisa '' order by t1.allergy
select t1.allergy , t1.allergytype from allergy_type as t1 join has_allergy as t2 on t1.allergy = t2.allergy join student as t3 on t3.stuid = t2.stuid where t3.fname = `` lisa '' order by t1.allergy
select fname , sex from student where stuid in ( select stuid from has_allergy where allergy = `` milk '' except select stuid from has_allergy where allergy = `` cat '' )
select fname , sex from student where stuid in ( select stuid from has_allergy where allergy = `` milk '' except select stuid from has_allergy where allergy = `` cat '' )
select avg ( age ) from student where stuid in ( select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' intersect select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` animal '' )
select avg ( age ) from student where stuid in ( select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' intersect select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` animal '' )
select fname , lname from student where stuid not in ( select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' )
select fname , lname from student where stuid not in ( select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' )
select count ( * ) from student where sex = `` m '' and stuid in ( select stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' )
select count ( * ) from student where sex = `` m '' and stuid in ( select stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' )
select distinct t1.fname , t1.city_code from student as t1 join has_allergy as t2 on t1.stuid = t2.stuid where t2.allergy = `` milk '' or t2.allergy = `` cat ''
select distinct t1.fname , t1.city_code from student as t1 join has_allergy as t2 on t1.stuid = t2.stuid where t2.allergy = `` milk '' or t2.allergy = `` cat ''
select count ( * ) from student where age > 18 and stuid not in ( select stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' or t2.allergytype = `` animal '' )
select count ( * ) from student where age > 18 and stuid not in ( select stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = `` food '' or t2.allergytype = `` animal '' )
select fname , major from student where stuid not in ( select stuid from has_allergy where allergy = `` soy '' )
select fname , major from student where stuid not in ( select stuid from has_allergy where allergy = `` soy '' )
select billing_country , count ( * ) from invoices group by billing_country order by count ( * ) desc limit 5 ;
select billing_country , count ( * ) from invoices group by billing_country order by count ( * ) desc limit 5 ;
select billing_country , sum ( total ) from invoices group by billing_country order by sum ( total ) desc limit 8 ;
select billing_country , sum ( total ) from invoices group by billing_country order by sum ( total ) desc limit 8 ;
select billing_country , avg ( total ) from invoices group by billing_country order by avg ( total ) desc limit 10 ;
select billing_country , avg ( total ) from invoices group by billing_country order by avg ( total ) desc limit 10 ;
select t1.first_name , t1.last_name from customers as t1 join invoices as t2 on t2.customer_id = t1.id order by t2.invoice_date desc limit 5 ;
select t1.first_name , t1.last_name from customers as t1 join invoices as t2 on t2.customer_id = t1.id order by t2.invoice_date desc limit 5 ;
select t1.first_name , t1.last_name , count ( * ) from customers as t1 join invoices as t2 on t2.customer_id = t1.id group by t1.id order by count ( * ) desc limit 10 ;
select t1.first_name , t1.last_name , count ( * ) from customers as t1 join invoices as t2 on t2.customer_id = t1.id group by t1.id order by count ( * ) desc limit 10 ;
select t1.first_name , t1.last_name , sum ( t2.total ) from customers as t1 join invoices as t2 on t2.customer_id = t1.id group by t1.id order by sum ( t2.total ) desc limit 10 ;
select t1.first_name , t1.last_name , sum ( t2.total ) from customers as t1 join invoices as t2 on t2.customer_id = t1.id group by t1.id order by sum ( t2.total ) desc limit 10 ;
select t1.name , count ( * ) from genres as t1 join tracks as t2 on t2.genre_id = t1.id group by t1.id order by count ( * ) desc limit 5 ;
select t1.name , count ( * ) from genres as t1 join tracks as t2 on t2.genre_id = t1.id group by t1.id order by count ( * ) desc limit 5 ;
select title from albums ;
select title from albums ;
select title from albums order by title ;
select title from albums order by title ;
select title from albums where title like 'a % ' order by title ;
select title from albums where title like 'a % ' order by title ;
select t1.first_name , t1.last_name from customers as t1 join invoices as t2 on t2.customer_id = t1.id order by total limit 10 ;
select t1.first_name , t1.last_name from customers as t1 join invoices as t2 on t2.customer_id = t1.id order by total limit 10 ;
select sum ( total ) from invoices where billing_city = `` chicago '' and billing_state = `` il '' ;
select sum ( total ) from invoices where billing_city = `` chicago '' and billing_state = `` il '' ;
select count ( * ) from invoices where billing_city = `` chicago '' and billing_state = `` il '' ;
select count ( * ) from invoices where billing_city = `` chicago '' and billing_state = `` il '' ;
select billing_state , count ( * ) from invoices where billing_country = `` usa '' group by billing_state ;
select billing_state , count ( * ) from invoices where billing_country = `` usa '' group by billing_state ;
select billing_state , count ( * ) from invoices where billing_country = `` usa '' group by billing_state order by count ( * ) desc limit 1 ;
select billing_state , count ( * ) from invoices where billing_country = `` usa '' group by billing_state order by count ( * ) desc limit 1 ;
select billing_state , count ( * ) , sum ( total ) from invoices where billing_state = `` ca '' ;
select billing_state , count ( * ) , sum ( total ) from invoices where billing_state = `` ca '' ;
select t1.title from albums as t1 join artists as t2 on t1.artist_id = t2.id where t2.name = `` aerosmith '' ;
select t1.title from albums as t1 join artists as t2 on t1.artist_id = t2.id where t2.name = `` aerosmith '' ;
select count ( * ) from albums as t1 join artists as t2 on t1.artist_id = t2.id where t2.name = `` billy cobham '' ;
select count ( * ) from albums as t1 join artists as t2 on t1.artist_id = t2.id where t2.name = `` billy cobham '' ;
select company from customers where first_name = `` eduardo '' and last_name = `` martins '' ;
select company from customers where first_name = `` eduardo '' and last_name = `` martins '' ;
select email , phone from customers where first_name = `` astrid '' and last_name = `` gruber '' ;
select email , phone from customers where first_name = `` astrid '' and last_name = `` gruber '' ;
select count ( * ) from customers where city = `` prague '' ;
select count ( * ) from customers where city = `` prague '' ;
select count ( * ) from customers where state = `` ca '' ;
select count ( * ) from customers where state = `` ca '' ;
select country from customers where first_name = `` roberto '' and last_name = `` almeida '' ;
select country from customers where first_name = `` roberto '' and last_name = `` almeida '' ;
select t2.title from artists as t1 join albums as t2 on t1.id = t2.artist_id where t1.name like ' % led % '
select t2.title from artists as t1 join albums as t2 on t1.id = t2.artist_id where t1.name like ' % led % '
select count ( * ) from employees as t1 join customers as t2 on t2.support_rep_id = t1.id where t1.first_name = `` steve '' and t1.last_name = `` johnson '' ;
select count ( * ) from employees as t1 join customers as t2 on t2.support_rep_id = t1.id where t1.first_name = `` steve '' and t1.last_name = `` johnson '' ;
select title , phone , hire_date from employees where first_name = `` nancy '' and last_name = `` edwards '' ;
select title , phone , hire_date from employees where first_name = `` nancy '' and last_name = `` edwards '' ;
select t2.first_name , t2.last_name from employees as t1 join employees as t2 on t1.id = t2.reports_to where t1.first_name = `` nancy '' and t1.last_name = `` edwards '' ;
select t2.first_name , t2.last_name from employees as t1 join employees as t2 on t1.id = t2.reports_to where t1.first_name = `` nancy '' and t1.last_name = `` edwards '' ;
select address from employees where first_name = `` nancy '' and last_name = `` edwards '' ;
select address from employees where first_name = `` nancy '' and last_name = `` edwards '' ;
select t1.first_name , t1.last_name from employees as t1 join customers as t2 on t1.id = t2.support_rep_id group by t1.id order by count ( * ) desc limit 1
select t1.first_name , t1.last_name from employees as t1 join customers as t2 on t1.id = t2.support_rep_id group by t1.id order by count ( * ) desc limit 1
select count ( * ) from employees where country = `` canada '' ;
select count ( * ) from employees where country = `` canada '' ;
select phone from employees where first_name = `` nancy '' and last_name = `` edwards '' ;
select phone from employees where first_name = `` nancy '' and last_name = `` edwards '' ;
select first_name , last_name from employees order by birth_date desc limit 1 ;
select first_name , last_name from employees order by birth_date desc limit 1 ;
select first_name , last_name from employees order by hire_date asc limit 10 ;
select first_name , last_name from employees order by hire_date asc limit 10 ;
select count ( * ) , city from employees where title = 'it staff ' group by city
select count ( * ) , city from employees where title = 'it staff ' group by city
select t2.first_name , t2.last_name , count ( t1.reports_to ) from employees as t1 join employees as t2 on t1.reports_to = t2.id group by t1.reports_to order by count ( t1.reports_to ) desc limit 1 ;
select t2.first_name , t2.last_name , count ( t1.reports_to ) from employees as t1 join employees as t2 on t1.reports_to = t2.id group by t1.reports_to order by count ( t1.reports_to ) desc limit 1 ;
select count ( * ) from customers as t1 join invoices as t2 on t1.id = t2.customer_id where t1.first_name = `` lucas '' and t1.last_name = `` mancini '' ;
select count ( * ) from customers as t1 join invoices as t2 on t1.id = t2.customer_id where t1.first_name = `` lucas '' and t1.last_name = `` mancini '' ;
select sum ( t2.total ) from customers as t1 join invoices as t2 on t1.id = t2.customer_id where t1.first_name = `` lucas '' and t1.last_name = `` mancini '' ;
select sum ( t2.total ) from customers as t1 join invoices as t2 on t1.id = t2.customer_id where t1.first_name = `` lucas '' and t1.last_name = `` mancini '' ;
select name from media_types ;
select name from media_types ;
select distinct name from genres ;
select distinct name from genres ;
select name from playlists ;
select name from playlists ;
select composer from tracks where name = `` fast as a shark '' ;
select composer from tracks where name = `` fast as a shark '' ;
select milliseconds from tracks where name = `` fast as a shark '' ;
select milliseconds from tracks where name = `` fast as a shark '' ;
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id where t1.name = `` rock '' ;
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id where t1.name = `` rock '' ;
select t1.title from albums as t1 join tracks as t2 on t1.id = t2.genre_id where t2.name = `` balls to the wall '' ;
select t1.title from albums as t1 join tracks as t2 on t1.id = t2.genre_id where t2.name = `` balls to the wall '' ;
select t2.name from albums as t1 join tracks as t2 on t1.id = t2.genre_id where t1.title = `` balls to the wall '' ;
select t2.name from albums as t1 join tracks as t2 on t1.id = t2.genre_id where t1.title = `` balls to the wall '' ;
select t1.title from albums as t1 join tracks as t2 on t1.id = t2.album_id group by t1.id having count ( t1.id ) > 10 ;
select t1.title from albums as t1 join tracks as t2 on t1.id = t2.album_id group by t1.id having count ( t1.id ) > 10 ;
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id join media_types as t3 on t3.id = t2.media_type_id where t1.name = `` rock '' and t3.name = `` mpeg audio file '' ;
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id join media_types as t3 on t3.id = t2.media_type_id where t1.name = `` rock '' and t3.name = `` mpeg audio file '' ;
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id join media_types as t3 on t3.id = t2.media_type_id where t1.name = `` rock '' or t3.name = `` mpeg audio file '' ;
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id join media_types as t3 on t3.id = t2.media_type_id where t1.name = `` rock '' or t3.name = `` mpeg audio file '' ;
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id where t1.name = `` rock '' or t1.name = `` jazz ''
select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id where t1.name = `` rock '' or t1.name = `` jazz ''
select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t3.id = t2.playlist_id where t3.name = `` movies '' ;
select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t3.id = t2.playlist_id where t3.name = `` movies '' ;
select t2.name from playlist_tracks as t1 join playlists as t2 on t2.id = t1.playlist_id group by t1.playlist_id having count ( t1.track_id ) > 100 ;
select t2.name from playlist_tracks as t1 join playlists as t2 on t2.id = t1.playlist_id group by t1.playlist_id having count ( t1.track_id ) > 100 ;
select t1.name from tracks as t1 join invoice_lines as t2 on t1.id = t2.track_id join invoices as t3 on t3.id = t2.invoice_id join customers as t4 on t4.id = t3.customer_id where t4.first_name = `` daan '' and t4.last_name = `` peeters '' ;
select t1.name from tracks as t1 join invoice_lines as t2 on t1.id = t2.track_id join invoices as t3 on t3.id = t2.invoice_id join customers as t4 on t4.id = t3.customer_id where t4.first_name = `` daan '' and t4.last_name = `` peeters '' ;
select unit_price from tracks where name = `` fast as a shark '' ;
select unit_price from tracks where name = `` fast as a shark '' ;
select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'movies ' except select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'music '
select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'movies ' except select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'music '
select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'movies ' intersect select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'music '
select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'movies ' intersect select t1.name from tracks as t1 join playlist_tracks as t2 on t1.id = t2.track_id join playlists as t3 on t2.playlist_id = t3.id where t3.name = 'music '
select count ( * ) , t1.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id group by t1.name ;
select count ( * ) , t1.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id group by t1.name ;
select count ( * ) from editor
select name from editor order by age asc
select name , age from editor
select name from editor where age > 25
select name from editor where age = 24 or age = 25
select name from editor order by age asc limit 1
select age , count ( * ) from editor group by age
select age from editor group by age order by count ( * ) desc limit 1
select distinct theme from journal
select t2.name , t3.theme from journal_committee as t1 join editor as t2 on t1.editor_id = t2.editor_id join journal as t3 on t1.journal_id = t3.journal_id
select t2.name , t3.theme from journal_committee as t1 join editor as t2 on t1.editor_id = t2.editor_id join journal as t3 on t1.journal_id = t3.journal_id
select t2.name , t2.age , t3.theme from journal_committee as t1 join editor as t2 on t1.editor_id = t2.editor_id join journal as t3 on t1.journal_id = t3.journal_id order by t3.theme asc
select t2.name from journal_committee as t1 join editor as t2 on t1.editor_id = t2.editor_id join journal as t3 on t1.journal_id = t3.journal_id where t3.sales > 3000
select t1.editor_id , t1.name , count ( * ) from editor as t1 join journal_committee as t2 on t1.editor_id = t2.editor_id group by t1.editor_id
select t1.name from editor as t1 join journal_committee as t2 on t1.editor_id = t2.editor_id group by t1.name having count ( * ) > = 2
select name from editor where editor_id not in ( select editor_id from journal_committee )
select date , theme , sales from journal except select t1.date , t1.theme , t1.sales from journal as t1 join journal_committee as t2 on t1.journal_id = t2.journal_id
select avg ( t1.sales ) from journal as t1 join journal_committee as t2 on t1.journal_id = t2.journal_id where t2.work_type = 'photo '
select count ( * ) from accounts
select count ( * ) from accounts
select account_id , customer_id , account_name from accounts
select account_id , customer_id , account_name from accounts
select other_account_details from accounts where account_name = `` 338 ''
select other_account_details from accounts where account_name = `` 338 ''
select t2.customer_first_name , t2.customer_last_name , t2.customer_phone from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.account_name = `` 162 ''
select t2.customer_first_name , t2.customer_last_name , t2.customer_phone from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.account_name = `` 162 ''
select count ( * ) from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` art '' and t2.customer_last_name = `` turcotte ''
select count ( * ) from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` art '' and t2.customer_last_name = `` turcotte ''
select customer_id , count ( * ) from accounts group by customer_id
select customer_id , count ( * ) from accounts group by customer_id
select customer_id , count ( * ) from accounts group by customer_id order by count ( * ) desc limit 1
select customer_id , count ( * ) from accounts group by customer_id order by count ( * ) desc limit 1
select t2.customer_first_name , t2.customer_last_name , t1.customer_id from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) asc limit 1
select t2.customer_first_name , t2.customer_last_name , t1.customer_id from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) asc limit 1
select count ( * ) from customers where customer_id not in ( select customer_id from accounts )
select count ( * ) from customers where customer_id not in ( select customer_id from accounts )
select customer_first_name , customer_last_name from customers except select t1.customer_first_name , t1.customer_last_name from customers as t1 join accounts as t2 on t1.customer_id = t2.customer_id
select customer_first_name , customer_last_name from customers except select t1.customer_first_name , t1.customer_last_name from customers as t1 join accounts as t2 on t1.customer_id = t2.customer_id
select distinct t1.customer_first_name , t1.customer_last_name from customers as t1 join accounts as t2 on t1.customer_id = t2.customer_id
select distinct t1.customer_first_name , t1.customer_last_name from customers as t1 join accounts as t2 on t1.customer_id = t2.customer_id
select count ( distinct customer_id ) from accounts
select count ( distinct customer_id ) from accounts
select count ( * ) from customers
select count ( * ) from customers
select customer_id , customer_first_name , customer_last_name , customer_phone from customers
select customer_id , customer_first_name , customer_last_name , customer_phone from customers
select customer_phone , customer_email from customers where customer_first_name = `` aniyah '' and customer_last_name = `` feest ''
select customer_phone , customer_email from customers where customer_first_name = `` aniyah '' and customer_last_name = `` feest ''
select count ( * ) from customers_cards
select count ( * ) from customers_cards
select card_id , customer_id , card_type_code , card_number from customers_cards
select card_id , customer_id , card_type_code , card_number from customers_cards
select date_valid_from , date_valid_to from customers_cards where card_number = `` 4560596484842 ''
select date_valid_from , date_valid_to from customers_cards where card_number = `` 4560596484842 ''
select t2.customer_first_name , t2.customer_last_name , t2.customer_phone from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.card_number = `` 4560596484842 ''
select t2.customer_first_name , t2.customer_last_name , t2.customer_phone from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.card_number = `` 4560596484842 ''
select count ( * ) from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` art '' and t2.customer_last_name = `` turcotte ''
select count ( * ) from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` art '' and t2.customer_last_name = `` turcotte ''
select count ( * ) from customers_cards where card_type_code = `` debit ''
select count ( * ) from customers_cards where card_type_code = `` debit ''
select count ( * ) from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` blanche '' and t2.customer_last_name = `` huels '' and t1.card_type_code = `` credit ''
select count ( * ) from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` blanche '' and t2.customer_last_name = `` huels '' and t1.card_type_code = `` credit ''
select customer_id , count ( * ) from customers_cards group by customer_id
select customer_id , count ( * ) from customers_cards group by customer_id
select customer_id , count ( * ) from customers_cards group by customer_id order by count ( * ) desc limit 1
select customer_id , count ( * ) from customers_cards group by customer_id order by count ( * ) desc limit 1
select t1.customer_id , t2.customer_first_name , t2.customer_last_name from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > = 2
select t1.customer_id , t2.customer_first_name , t2.customer_last_name from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > = 2
select t1.customer_id , t2.customer_first_name , t2.customer_last_name from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) asc limit 1
select t1.customer_id , t2.customer_first_name , t2.customer_last_name from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) asc limit 1
select card_type_code , count ( * ) from customers_cards group by card_type_code
select card_type_code , count ( * ) from customers_cards group by card_type_code
select card_type_code from customers_cards group by card_type_code order by count ( * ) desc limit 1
select card_type_code from customers_cards group by card_type_code order by count ( * ) desc limit 1
select card_type_code from customers_cards group by card_type_code having count ( * ) > = 5
select card_type_code from customers_cards group by card_type_code having count ( * ) > = 5
select card_type_code , count ( distinct customer_id ) from customers_cards group by card_type_code
select card_type_code , count ( distinct customer_id ) from customers_cards group by card_type_code
select customer_id , customer_first_name from customers except select t1.customer_id , t2.customer_first_name from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where card_type_code = `` credit ''
select customer_id , customer_first_name from customers except select t1.customer_id , t2.customer_first_name from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id where card_type_code = `` credit ''
select distinct card_type_code from customers_cards
select distinct card_type_code from customers_cards
select count ( distinct card_type_code ) from customers_cards
select count ( distinct card_type_code ) from customers_cards
select distinct transaction_type from financial_transactions
select distinct transaction_type from financial_transactions
select count ( distinct transaction_type ) from financial_transactions
select count ( distinct transaction_type ) from financial_transactions
select avg ( transaction_amount ) , sum ( transaction_amount ) from financial_transactions
select avg ( transaction_amount ) , sum ( transaction_amount ) from financial_transactions
select t2.card_type_code , count ( * ) from financial_transactions as t1 join customers_cards as t2 on t1.card_id = t2.card_id group by t2.card_type_code
select t2.card_type_code , count ( * ) from financial_transactions as t1 join customers_cards as t2 on t1.card_id = t2.card_id group by t2.card_type_code
select transaction_type , count ( * ) from financial_transactions group by transaction_type
select transaction_type , count ( * ) from financial_transactions group by transaction_type
select transaction_type from financial_transactions group by transaction_type order by sum ( transaction_amount ) desc limit 1
select transaction_type from financial_transactions group by transaction_type order by sum ( transaction_amount ) desc limit 1
select account_id , count ( * ) from financial_transactions group by account_id
select account_id , count ( * ) from financial_transactions group by account_id
select count ( * ) from track
select count ( * ) from track
select name , location from track
select name , location from track
select name , seating from track where year_opened > 2000 order by seating
select name , seating from track where year_opened > 2000 order by seating
select name , location , seating from track order by year_opened desc limit 1
select name , location , seating from track order by year_opened desc limit 1
select min ( seating ) , max ( seating ) , avg ( seating ) from track
select min ( seating ) , max ( seating ) , avg ( seating ) from track
select name , location , year_opened from track where seating > ( select avg ( seating ) from track )
select name , location , year_opened from track where seating > ( select avg ( seating ) from track )
select distinct location from track
select distinct location from track
select count ( * ) from race
select count ( * ) from race
select distinct class from race
select distinct class from race
select name , class , date from race
select name , class , date from race
select class , count ( * ) from race group by class
select class , count ( * ) from race group by class
select class from race group by class order by count ( * ) desc limit 1
select class from race group by class order by count ( * ) desc limit 1
select class from race group by class having count ( * ) > = 2
select class from race group by class having count ( * ) > = 2
select name from track except select t2.name from race as t1 join track as t2 on t1.track_id = t2.track_id where t1.class = 'gt '
select name from track except select t2.name from race as t1 join track as t2 on t1.track_id = t2.track_id where t1.class = 'gt '
select name from track where track_id not in ( select track_id from race )
select name from track where track_id not in ( select track_id from race )
select year_opened from track where seating between 4000 and 5000
select year_opened from track where seating between 4000 and 5000
select t2.name , count ( * ) from race as t1 join track as t2 on t1.track_id = t2.track_id group by t1.track_id
select t2.name , count ( * ) from race as t1 join track as t2 on t1.track_id = t2.track_id group by t1.track_id
select t2.name from race as t1 join track as t2 on t1.track_id = t2.track_id group by t1.track_id order by count ( * ) desc limit 1
select t2.name from race as t1 join track as t2 on t1.track_id = t2.track_id group by t1.track_id order by count ( * ) desc limit 1
select t1.name , t1.date , t2.name from race as t1 join track as t2 on t1.track_id = t2.track_id
select t1.name , t1.date , t2.name from race as t1 join track as t2 on t1.track_id = t2.track_id
select t2.name , t2.location from race as t1 join track as t2 on t1.track_id = t2.track_id group by t1.track_id having count ( * ) = 1
select t2.name , t2.location from race as t1 join track as t2 on t1.track_id = t2.track_id group by t1.track_id having count ( * ) = 1
select location from track where seating > 90000 intersect select location from track where seating < 70000
select location from track where seating > 90000 intersect select location from track where seating < 70000
select count ( * ) from member where membership_card = 'black '
select count ( * ) , address from member group by address
select name from member where address = 'harford ' or address = 'waterbury '
select name , member_id from member where membership_card = 'black ' or age < 30
select time_of_purchase , age , address from member order by time_of_purchase
select membership_card from member group by membership_card having count ( * ) > 5
select address from member where age < 30 intersect select address from member where age > 40
select membership_card from member where address = 'hartford ' intersect select membership_card from member where address = 'waterbury '
select count ( * ) from member where address ! = 'hartford '
select address from member except select address from member where membership_card = 'black '
select address from shop order by open_year
select avg ( num_of_staff ) , avg ( score ) from shop
select shop_id , address from shop where score < ( select avg ( score ) from shop )
select address , num_of_staff from shop where shop_id not in ( select shop_id from happy_hour )
select t1.address , t1.shop_id from shop as t1 join happy_hour as t2 on t1.shop_id = t2.shop_id where month = 'may '
select shop_id , count ( * ) from happy_hour group by shop_id order by count ( * ) desc limit 1
select month from happy_hour group by month order by count ( * ) desc limit 1
select month from happy_hour group by month having count ( * ) > 2
select count ( * ) from album
select count ( * ) from album
select name from genre
select name from genre
select * from customer where state = `` ny ''
select * from customer where state = `` ny ''
select firstname , lastname from employee where city = `` calgary ''
select firstname , lastname from employee where city = `` calgary ''
select distinct ( billingcountry ) from invoice
select distinct ( billingcountry ) from invoice
select name from artist where name like `` % a % ''
select name from artist where name like `` % a % ''
select title from album as t1 join artist as t2 on t1.artistid = t2.artistid where t2.name = `` ac/dc ''
select title from album as t1 join artist as t2 on t1.artistid = t2.artistid where t2.name = `` ac/dc ''
select count ( * ) from album as t1 join artist as t2 on t1.artistid = t2.artistid where t2.name = `` metallica ''
select count ( * ) from album as t1 join artist as t2 on t1.artistid = t2.artistid where t2.name = `` metallica ''
select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid where t1.title = `` balls to the wall ''
select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid where t1.title = `` balls to the wall ''
select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid group by t2.name order by count ( * ) desc limit 1
select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid group by t2.name order by count ( * ) desc limit 1
select name from track where name like ' % you % '
select name from track where name like ' % you % '
select avg ( unitprice ) from track
select avg ( unitprice ) from track
select max ( milliseconds ) , min ( milliseconds ) from track
select max ( milliseconds ) , min ( milliseconds ) from track
select t1.title , t2.albumid , count ( * ) from album as t1 join track as t2 on t1.albumid = t2.albumid group by t2.albumid
select t1.title , t2.albumid , count ( * ) from album as t1 join track as t2 on t1.albumid = t2.albumid group by t2.albumid
select t1.name from genre as t1 join track as t2 on t1.genreid = t2.genreid group by t2.genreid order by count ( * ) desc limit 1
select t1.name from genre as t1 join track as t2 on t1.genreid = t2.genreid group by t2.genreid order by count ( * ) desc limit 1
select t1.name from mediatype as t1 join track as t2 on t1.mediatypeid = t2.mediatypeid group by t2.mediatypeid order by count ( * ) asc limit 1
select t1.name from mediatype as t1 join track as t2 on t1.mediatypeid = t2.mediatypeid group by t2.mediatypeid order by count ( * ) asc limit 1
select t1.title , t2.albumid from album as t1 join track as t2 on t1.albumid = t2.albumid where t2.unitprice > 1 group by t2.albumid
select t1.title , t2.albumid from album as t1 join track as t2 on t1.albumid = t2.albumid where t2.unitprice > 1 group by t2.albumid
select count ( * ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` rock ''
select count ( * ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` rock ''
select avg ( unitprice ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` jazz ''
select avg ( unitprice ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` jazz ''
select firstname , lastname from customer where email = `` luisg @ embraer.com.br ''
select firstname , lastname from customer where email = `` luisg @ embraer.com.br ''
select count ( * ) from customer where email like `` % gmail.com % ''
select count ( * ) from customer where email like `` % gmail.com % ''
select t2.firstname , t2.lastname from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid where t1.firstname = `` leonie ''
select t2.firstname , t2.lastname from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid where t1.firstname = `` leonie ''
select t2.city from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid where t1.postalcode = `` 70174 ''
select t2.city from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid where t1.postalcode = `` 70174 ''
select count ( distinct city ) from employee
select count ( distinct city ) from employee
select t2.invoicedate from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t1.firstname = `` astrid '' and lastname = `` gruber ''
select t2.invoicedate from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t1.firstname = `` astrid '' and lastname = `` gruber ''
select lastname from customer except select t1.lastname from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t2.total > 20
select lastname from customer except select t1.lastname from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t2.total > 20
select distinct t1.firstname from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t1.country = `` brazil ''
select distinct t1.firstname from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t1.country = `` brazil ''
select distinct t1.address from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t1.country = `` germany ''
select distinct t1.address from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t1.country = `` germany ''
select phone from employee
select phone from employee
select count ( * ) from mediatype as t1 join track as t2 on t1.mediatypeid = t2.mediatypeid where t1.name = `` aac audio file ''
select count ( * ) from mediatype as t1 join track as t2 on t1.mediatypeid = t2.mediatypeid where t1.name = `` aac audio file ''
select avg ( milliseconds ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` latin '' or t1.name = `` pop ''
select avg ( milliseconds ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` latin '' or t1.name = `` pop ''
select t1.firstname , t1.supportrepid from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid group by t1.supportrepid having count ( * ) > = 10
select t1.firstname , t1.supportrepid from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid group by t1.supportrepid having count ( * ) > = 10
select t1.lastname from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid group by t1.supportrepid having count ( * ) < = 20
select t1.lastname from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid group by t1.supportrepid having count ( * ) < = 20
select title from album order by title
select title from album order by title
select t2.name , t1.artistid from album as t1 join artist as t2 on t1.artistid = t2.artistid group by t1.artistid having count ( * ) > = 3 order by t2.name
select t2.name , t1.artistid from album as t1 join artist as t2 on t1.artistid = t2.artistid group by t1.artistid having count ( * ) > = 3 order by t2.name
select name from artist except select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid
select name from artist except select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid
select avg ( t2.unitprice ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` rock ''
select avg ( t2.unitprice ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` rock ''
select max ( milliseconds ) , min ( milliseconds ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` pop ''
select max ( milliseconds ) , min ( milliseconds ) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = `` pop ''
select birthdate from employee where city = `` edmonton ''
select birthdate from employee where city = `` edmonton ''
select distinct ( unitprice ) from track
select distinct ( unitprice ) from track
select count ( * ) from artist where artistid not in ( select artistid from album )
select count ( * ) from artist where artistid not in ( select artistid from album )
select t1.title from album as t1 join track as t2 on t1.albumid = t2.albumid join genre as t3 on t2.genreid = t3.genreid where t3.name = 'reggae ' intersect select t1.title from album as t1 join track as t2 on t1.albumid = t2.albumid join genre as t3 on t2.genreid = t3.genreid where t3.name = 'rock '
select t1.title from album as t1 join track as t2 on t1.albumid = t2.albumid join genre as t3 on t2.genreid = t3.genreid where t3.name = 'reggae ' intersect select t1.title from album as t1 join track as t2 on t1.albumid = t2.albumid join genre as t3 on t2.genreid = t3.genreid where t3.name = 'rock '
select customer_phone from available_policies
select customer_phone from available_policies
select customer_phone from available_policies where policy_type_code = `` life insurance ''
select customer_phone from available_policies where policy_type_code = `` life insurance ''
select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit 1
select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit 1
select customer_phone from available_policies where policy_type_code = ( select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit 1 )
select customer_phone from available_policies where policy_type_code = ( select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit 1 )
select policy_type_code from available_policies group by policy_type_code having count ( * ) > 4
select policy_type_code from available_policies group by policy_type_code having count ( * ) > 4
select sum ( settlement_amount ) , avg ( settlement_amount ) from settlements
select sum ( settlement_amount ) , avg ( settlement_amount ) from settlements
select t2.service_name from first_notification_of_loss as t1 join services as t2 on t1.service_id = t2.service_id group by t1.service_id having count ( * ) > 2
select t2.service_name from first_notification_of_loss as t1 join services as t2 on t1.service_id = t2.service_id group by t1.service_id having count ( * ) > 2
select t1.effective_date from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id order by sum ( t2.settlement_amount ) desc limit 1
select t1.effective_date from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id order by sum ( t2.settlement_amount ) desc limit 1
select count ( * ) from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` dayana robel ''
select count ( * ) from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` dayana robel ''
select t1.customer_name from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_name order by count ( * ) desc limit 1
select t1.customer_name from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_name order by count ( * ) desc limit 1
select distinct t3.policy_type_code from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id join available_policies as t3 on t2.policy_id = t3.policy_id where t1.customer_name = `` dayana robel ''
select distinct t3.policy_type_code from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id join available_policies as t3 on t2.policy_id = t3.policy_id where t1.customer_name = `` dayana robel ''
select distinct t3.policy_type_code from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id join available_policies as t3 on t2.policy_id = t3.policy_id where t1.customer_name = ( select t1.customer_name from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_name order by count ( * ) desc limit 1 )
select distinct t3.policy_type_code from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id join available_policies as t3 on t2.policy_id = t3.policy_id where t1.customer_name = ( select t1.customer_name from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_name order by count ( * ) desc limit 1 )
select service_name from services order by service_name
select service_name from services order by service_name
select count ( * ) from services
select count ( * ) from services
select customer_name from customers except select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id
select customer_name from customers except select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id
select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id join services as t3 on t2.service_id = t3.service_id where t3.service_name = `` close a policy '' or t3.service_name = `` upgrade a policy ''
select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id join services as t3 on t2.service_id = t3.service_id where t3.service_name = `` close a policy '' or t3.service_name = `` upgrade a policy ''
select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id join services as t3 on t2.service_id = t3.service_id where t3.service_name = `` close a policy '' intersect select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id join services as t3 on t2.service_id = t3.service_id where t3.service_name = `` new policy application ''
select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id join services as t3 on t2.service_id = t3.service_id where t3.service_name = `` close a policy '' intersect select t1.customer_name from customers as t1 join first_notification_of_loss as t2 on t1.customer_id = t2.customer_id join services as t3 on t2.service_id = t3.service_id where t3.service_name = `` new policy application ''
select customer_id from customers where customer_name like `` % diana % ''
select customer_id from customers where customer_name like `` % diana % ''
select max ( settlement_amount ) , min ( settlement_amount ) from settlements
select max ( settlement_amount ) , min ( settlement_amount ) from settlements
select customer_id , customer_name from customers order by customer_id asc
select customer_id , customer_name from customers order by customer_id asc
select t2.date_opened , t2.date_closed from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id where t1.customer_name like `` % diana % ''
select t2.date_opened , t2.date_closed from customers as t1 join customers_policies as t2 on t1.customer_id = t2.customer_id where t1.customer_name like `` % diana % ''
select count ( * ) from enzyme
select count ( * ) from enzyme
select name from enzyme order by name desc
select name from enzyme order by name desc
select name , location from enzyme
select name , location from enzyme
select max ( omim ) from enzyme
select max ( omim ) from enzyme
select product , chromosome , porphyria from enzyme where location = 'cytosol '
select product , chromosome , porphyria from enzyme where location = 'cytosol '
select name from enzyme where product ! = 'heme '
select name from enzyme where product ! = 'heme '
select name , trade_name from medicine where fda_approved = 'yes '
select name , trade_name from medicine where fda_approved = 'yes '
select t1.name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1.id = t2.enzyme_id join medicine as t3 on t2.medicine_id = t3.id where t3.name = 'amisulpride ' and t2.interaction_type = 'inhibitor '
select t1.name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1.id = t2.enzyme_id join medicine as t3 on t2.medicine_id = t3.id where t3.name = 'amisulpride ' and t2.interaction_type = 'inhibitor '
select t1.id , t1.name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id group by t1.id having count ( * ) > = 2
select t1.id , t1.name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id group by t1.id having count ( * ) > = 2
select t1.id , t1.name , t1.fda_approved from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id group by t1.id order by count ( * ) desc
select t1.id , t1.name , t1.fda_approved from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id group by t1.id order by count ( * ) desc
select t1.id , t1.name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1.id = t2.enzyme_id where t2.interaction_type = 'activitor ' group by t1.id order by count ( * ) desc limit 1
select t1.id , t1.name from enzyme as t1 join medicine_enzyme_interaction as t2 on t1.id = t2.enzyme_id where t2.interaction_type = 'activitor ' group by t1.id order by count ( * ) desc limit 1
select t1.interaction_type from medicine_enzyme_interaction as t1 join medicine as t2 on t1.medicine_id = t2.id join enzyme as t3 on t1.enzyme_id = t3.id where t3.name = 'ala synthase ' and t2.name = 'aripiprazole '
select t1.interaction_type from medicine_enzyme_interaction as t1 join medicine as t2 on t1.medicine_id = t2.id join enzyme as t3 on t1.enzyme_id = t3.id where t3.name = 'ala synthase ' and t2.name = 'aripiprazole '
select interaction_type , count ( * ) from medicine_enzyme_interaction group by interaction_type order by count ( * ) desc limit 1
select interaction_type , count ( * ) from medicine_enzyme_interaction group by interaction_type order by count ( * ) desc limit 1
select count ( * ) from medicine where fda_approved = 'no '
select count ( * ) from medicine where fda_approved = 'no '
select count ( * ) from enzyme where id not in ( select enzyme_id from medicine_enzyme_interaction ) ;
select count ( * ) from enzyme where id not in ( select enzyme_id from medicine_enzyme_interaction ) ;
select t1.id , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id group by t1.id having count ( * ) > = 3
select t1.id , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id group by t1.id having count ( * ) > = 3
select distinct t1.name , t1.location , t1.product from enzyme as t1 join medicine_enzyme_interaction as t2 on t2.enzyme_id = t1.id where t2.interaction_type = 'inhibitor '
select distinct t1.name , t1.location , t1.product from enzyme as t1 join medicine_enzyme_interaction as t2 on t2.enzyme_id = t1.id where t2.interaction_type = 'inhibitor '
select t1.name , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id where interaction_type = 'inhibitor ' intersect select t1.name , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id where interaction_type = 'activitor '
select t1.name , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id where interaction_type = 'inhibitor ' intersect select t1.name , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id where interaction_type = 'activitor '
select name , trade_name from medicine except select t1.name , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id join enzyme as t3 on t3.id = t2.enzyme_id where t3.product = 'protoporphyrinogen ix '
select name , trade_name from medicine except select t1.name , t1.trade_name from medicine as t1 join medicine_enzyme_interaction as t2 on t2.medicine_id = t1.id join enzyme as t3 on t3.id = t2.enzyme_id where t3.product = 'protoporphyrinogen ix '
select count ( distinct fda_approved ) from medicine
select count ( distinct fda_approved ) from medicine
select name from enzyme where name like `` % ala % ''
select name from enzyme where name like `` % ala % ''
select trade_name , count ( * ) from medicine group by trade_name
select trade_name , count ( * ) from medicine group by trade_name
select school , nickname from university order by founded
select school , nickname from university order by founded
select school , location from university where affiliation = 'public '
select school , location from university where affiliation = 'public '
select founded from university order by enrollment desc limit 1
select founded from university order by enrollment desc limit 1
select founded from university where affiliation ! = 'public ' order by founded desc limit 1
select founded from university where affiliation ! = 'public ' order by founded desc limit 1
select count ( distinct school_id ) from basketball_match
select count ( distinct school_id ) from basketball_match
select acc_percent from basketball_match order by acc_percent desc limit 1
select acc_percent from basketball_match order by acc_percent desc limit 1
select t1.primary_conference from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id order by t2.acc_percent limit 1
select t1.primary_conference from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id order by t2.acc_percent limit 1
select t2.team_name , t2.acc_regular_season from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id order by t1.founded limit 1
select t2.team_name , t2.acc_regular_season from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id order by t1.founded limit 1
select t2.all_games , t1.location from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id where team_name = 'clemson '
select t2.all_games , t1.location from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id where team_name = 'clemson '
select avg ( enrollment ) from university where founded < 1850
select avg ( enrollment ) from university where founded < 1850
select enrollment , primary_conference from university order by founded limit 1
select enrollment , primary_conference from university order by founded limit 1
select sum ( enrollment ) , min ( enrollment ) from university
select sum ( enrollment ) , min ( enrollment ) from university
select sum ( enrollment ) , affiliation from university group by affiliation
select sum ( enrollment ) , affiliation from university group by affiliation
select count ( * ) from university where school_id not in ( select school_id from basketball_match )
select count ( * ) from university where school_id not in ( select school_id from basketball_match )
select school from university where founded > 1850 or affiliation = 'public '
select school from university where founded > 1850 or affiliation = 'public '
select count ( distinct affiliation ) from university
select count ( distinct affiliation ) from university
select count ( * ) from university where location like `` % ny % ''
select count ( * ) from university where location like `` % ny % ''
select t2.team_name from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id where enrollment < ( select avg ( enrollment ) from university )
select t2.team_name from university as t1 join basketball_match as t2 on t1.school_id = t2.school_id where enrollment < ( select avg ( enrollment ) from university )
select count ( * ) , affiliation from university where enrollment > 20000 group by affiliation
select count ( * ) , affiliation from university where enrollment > 20000 group by affiliation
select sum ( enrollment ) , affiliation from university where founded > 1850 group by affiliation
select sum ( enrollment ) , affiliation from university where founded > 1850 group by affiliation
select max ( enrollment ) from university
select max ( enrollment ) from university
select * from basketball_match
select * from basketball_match
select team_name from basketball_match order by all_home desc
select team_name from basketball_match order by all_home desc
select model_name from chip_model where launch_year between 2002 and 2004 ;
select model_name , ram_mib from chip_model order by ram_mib asc limit 1 ;
select chip_model , screen_mode from phone where hardware_model_name = `` lg-p760 '' ;
select count ( * ) from phone where company_name = `` nokia corporation '' ;
select max ( t1.ram_mib ) , min ( t1.ram_mib ) from chip_model as t1 join phone as t2 on t1.model_name = t2.chip_model where t2.company_name = `` nokia corporation '' ;
select avg ( t1.rom_mib ) from chip_model as t1 join phone as t2 on t1.model_name = t2.chip_model where t2.company_name = `` nokia corporation '' ;
select t2.hardware_model_name , t2.company_name from chip_model as t1 join phone as t2 on t1.model_name = t2.chip_model where t1.launch_year = 2002 or t1.ram_mib > 32 ;
select hardware_model_name , company_name from phone where accreditation_type like 'full ' ;
select t1.char_cells , t1.pixels , t1.hardware_colours from screen_mode as t1 join phone as t2 on t1.graphics_mode = t2.screen_mode where t2.hardware_model_name = `` lg-p760 '' ;
select t2.hardware_model_name , t2.company_name from screen_mode as t1 join phone as t2 on t1.graphics_mode = t2.screen_mode where t1.type = `` graphics '' ;
select company_name , count ( * ) from phone group by company_name order by count ( * ) asc limit 1 ;
select company_name from phone group by company_name having count ( * ) > 1 ;
select max ( used_kb ) , min ( used_kb ) , avg ( used_kb ) from screen_mode ;
select t2.hardware_model_name from chip_model as t1 join phone as t2 on t1.model_name = t2.chip_model where t1.launch_year = 2002 order by t1.ram_mib desc limit 1 ;
select t1.wifi , t3.type from chip_model as t1 join phone as t2 on t1.model_name = t2.chip_model join screen_mode as t3 on t2.screen_mode = t3.graphics_mode where t2.hardware_model_name = `` lg-p760 '' ;
select t2.hardware_model_name from chip_model as t1 join phone as t2 on t1.model_name = t2.chip_model join screen_mode as t3 on t2.screen_mode = t3.graphics_mode where t3.type = `` text '' or t1.ram_mib > 32 ;
select distinct t2.hardware_model_name from screen_mode as t1 join phone as t2 on t1.graphics_mode = t2.screen_mode where t1.type = `` graphics '' or t2.company_name = `` nokia corporation ''
select distinct t2.hardware_model_name from screen_mode as t1 join phone as t2 on t1.graphics_mode = t2.screen_mode where t2.company_name = `` nokia corporation '' and t1.type ! = `` text '' ;
select distinct t2.hardware_model_name , t2.company_name from screen_mode as t1 join phone as t2 on t1.graphics_mode = t2.screen_mode where t1.used_kb between 10 and 15 ;
select accreditation_type , count ( * ) from phone group by accreditation_type
select accreditation_type , count ( * ) from phone group by accreditation_type
select accreditation_level from phone group by accreditation_level having count ( * ) > 3
select * from chip_model
select count ( * ) from chip_model where wifi = 'no '
select count ( * ) from chip_model where wifi = 'no '
select model_name from chip_model order by launch_year
select avg ( ram_mib ) from chip_model where model_name not in ( select chip_model from phone )
select model_name from chip_model except select chip_model from phone where accreditation_type = 'full '
select t1.pixels from screen_mode as t1 join phone as t2 on t1.graphics_mode = t2.screen_mode where t2.accreditation_type = 'provisional ' intersect select t1.pixels from screen_mode as t1 join phone as t2 on t1.graphics_mode = t2.screen_mode where t2.accreditation_type = 'full '
select count ( * ) from country
select count ( * ) from country
select country_name , capital from country
select country_name , capital from country
select official_native_language from country where official_native_language like `` % english % ''
select official_native_language from country where official_native_language like `` % english % ''
select distinct position from match_season
select distinct position from match_season
select player from match_season where college = `` ucla ''
select player from match_season where college = `` ucla ''
select distinct position from match_season where college = `` ucla '' or college = `` duke ''
select distinct position from match_season where college = `` ucla '' or college = `` duke ''
select draft_pick_number , draft_class from match_season where position = `` defender ''
select draft_pick_number , draft_class from match_season where position = `` defender ''
select count ( distinct team ) from match_season
select count ( distinct team ) from match_season
select player , years_played from player
select player , years_played from player
select name from team
select name from team
select t2.season , t2.player , t1.country_name from country as t1 join match_season as t2 on t1.country_id = t2.country
select t2.season , t2.player , t1.country_name from country as t1 join match_season as t2 on t1.country_id = t2.country
select t2.player from country as t1 join match_season as t2 on t1.country_id = t2.country where t1.country_name = `` indonesia ''
select t2.player from country as t1 join match_season as t2 on t1.country_id = t2.country where t1.country_name = `` indonesia ''
select distinct t2.position from country as t1 join match_season as t2 on t1.country_id = t2.country where t1.capital = `` dublin ''
select distinct t2.position from country as t1 join match_season as t2 on t1.country_id = t2.country where t1.capital = `` dublin ''
select t1.official_native_language from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.college = `` maryland '' or t2.college = `` duke ''
select t1.official_native_language from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.college = `` maryland '' or t2.college = `` duke ''
select count ( distinct t1.official_native_language ) from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.position = `` defender ''
select count ( distinct t1.official_native_language ) from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.position = `` defender ''
select t1.season , t1.player , t2.name from match_season as t1 join team as t2 on t1.team = t2.team_id
select t1.season , t1.player , t2.name from match_season as t1 join team as t2 on t1.team = t2.team_id
select t1.position from match_season as t1 join team as t2 on t1.team = t2.team_id where t2.name = `` ryley goldner ''
select t1.position from match_season as t1 join team as t2 on t1.team = t2.team_id where t2.name = `` ryley goldner ''
select count ( distinct t1.college ) from match_season as t1 join team as t2 on t1.team = t2.team_id where t2.name = `` columbus crew ''
select count ( distinct t1.college ) from match_season as t1 join team as t2 on t1.team = t2.team_id where t2.name = `` columbus crew ''
select t1.player , t1.years_played from player as t1 join team as t2 on t1.team = t2.team_id where t2.name = `` columbus crew ''
select t1.player , t1.years_played from player as t1 join team as t2 on t1.team = t2.team_id where t2.name = `` columbus crew ''
select position , count ( * ) from match_season group by position
select position , count ( * ) from match_season group by position
select country_name , count ( * ) from country as t1 join match_season as t2 on t1.country_id = t2.country group by t1.country_name
select country_name , count ( * ) from country as t1 join match_season as t2 on t1.country_id = t2.country group by t1.country_name
select player from match_season order by college asc
select player from match_season order by college asc
select position from match_season group by position order by count ( * ) desc limit 1
select position from match_season group by position order by count ( * ) desc limit 1
select college from match_season group by college order by count ( * ) desc limit 3
select college from match_season group by college order by count ( * ) desc limit 3
select college from match_season group by college having count ( * ) > = 2
select college from match_season group by college having count ( * ) > = 2
select college from match_season group by college having count ( * ) > = 2 order by college desc
select college from match_season group by college having count ( * ) > = 2 order by college desc
select name from team where team_id not in ( select team from match_season )
select name from team where team_id not in ( select team from match_season )
select t1.country_name from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.position = `` forward '' intersect select t1.country_name from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.position = `` defender ''
select t1.country_name from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.position = `` forward '' intersect select t1.country_name from country as t1 join match_season as t2 on t1.country_id = t2.country where t2.position = `` defender ''
select college from match_season where position = `` midfielder '' intersect select college from match_season where position = `` defender ''
select college from match_season where position = `` midfielder '' intersect select college from match_season where position = `` defender ''
select count ( * ) from climber
select count ( * ) from climber
select name from climber order by points desc
select name from climber order by points desc
select name from climber where country ! = `` switzerland ''
select name from climber where country ! = `` switzerland ''
select max ( points ) from climber where country = `` united kingdom ''
select max ( points ) from climber where country = `` united kingdom ''
select count ( distinct country ) from climber
select count ( distinct country ) from climber
select name from mountain order by name asc
select name from mountain order by name asc
select country from mountain where height > 5000
select country from mountain where height > 5000
select name from mountain order by height desc limit 1
select name from mountain order by height desc limit 1
select distinct range from mountain order by prominence desc limit 3
select distinct range from mountain order by prominence desc limit 3
select t1.name , t2.name from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id
select t1.name , t2.name from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id
select t1.name , t2.height from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id
select t1.name , t2.height from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id
select t2.height from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id order by t1.points desc limit 1
select t2.height from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id order by t1.points desc limit 1
select distinct t2.name from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id where t1.country = `` west germany ''
select distinct t2.name from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id where t1.country = `` west germany ''
select t1.time from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id where t2.country = `` uganda ''
select t1.time from climber as t1 join mountain as t2 on t1.mountain_id = t2.mountain_id where t2.country = `` uganda ''
select country , count ( * ) from climber group by country
select country , count ( * ) from climber group by country
select country from mountain group by country having count ( * ) > 1
select country from mountain group by country having count ( * ) > 1
select name from mountain where mountain_id not in ( select mountain_id from climber )
select name from mountain where mountain_id not in ( select mountain_id from climber )
select country from mountain where height > 5600 intersect select country from mountain where height < 5200
select country from mountain where height > 5600 intersect select country from mountain where height < 5200
select range from mountain group by range order by count ( * ) desc limit 1
select range from mountain group by range order by count ( * ) desc limit 1
select name from mountain where height > 5000 or prominence > 1000
select name from mountain where height > 5000 or prominence > 1000
select count ( * ) from body_builder
select total from body_builder order by total asc
select snatch , clean_jerk from body_builder order by snatch asc
select avg ( snatch ) from body_builder
select clean_jerk from body_builder order by total desc limit 1
select birth_date from people order by height asc
select t2.name from body_builder as t1 join people as t2 on t1.people_id = t2.people_id
select t2.name from body_builder as t1 join people as t2 on t1.people_id = t2.people_id where t1.total > 300
select t2.name from body_builder as t1 join people as t2 on t1.people_id = t2.people_id order by t2.weight desc limit 1
select t2.birth_date , t2.birth_place from body_builder as t1 join people as t2 on t1.people_id = t2.people_id order by t1.total desc limit 1
select t2.height from body_builder as t1 join people as t2 on t1.people_id = t2.people_id where t1.total < 315
select avg ( t1.total ) from body_builder as t1 join people as t2 on t1.people_id = t2.people_id where t2.height > 200
select t2.name from body_builder as t1 join people as t2 on t1.people_id = t2.people_id order by t1.total desc
select birth_place , count ( * ) from people group by birth_place
select birth_place from people group by birth_place order by count ( * ) desc limit 1
select birth_place from people group by birth_place having count ( * ) > = 2
select height , weight from people order by height desc
select * from body_builder
select name , birth_place from people except select t1.name , t1.birth_place from people as t1 join body_builder as t2 on t1.people_id = t2.people_id
select count ( distinct birth_place ) from people
select count ( * ) from people where people_id not in ( select people_id from body_builder )
select t2.weight from body_builder as t1 join people as t2 on t1.people_id = t2.people_id where t1.snatch > 140 or t2.height > 200 ;
select t1.total from body_builder as t1 join people as t2 on t1.people_id = t2.people_id where t2.birth_date like `` % january % '' ;
select min ( snatch ) from body_builder
select count ( * ) from election
select votes from election order by votes desc
select date , vote_percent from election
select min ( vote_percent ) , max ( vote_percent ) from election
select name , party from representative
select name from representative where party ! = `` republican ''
select lifespan from representative where state = `` new york '' or state = `` indiana ''
select t2.name , t1.date from election as t1 join representative as t2 on t1.representative_id = t2.representative_id
select t2.name from election as t1 join representative as t2 on t1.representative_id = t2.representative_id where votes > 10000
select t2.name from election as t1 join representative as t2 on t1.representative_id = t2.representative_id order by votes desc
select t2.party from election as t1 join representative as t2 on t1.representative_id = t2.representative_id order by votes asc limit 1
select t2.lifespan from election as t1 join representative as t2 on t1.representative_id = t2.representative_id order by vote_percent desc
select avg ( t1.votes ) from election as t1 join representative as t2 on t1.representative_id = t2.representative_id where t2.party = `` republican ''
select party , count ( * ) from representative group by party
select party , count ( * ) from representative group by party order by count ( * ) desc limit 1
select party from representative group by party having count ( * ) > = 3
select state from representative group by state having count ( * ) > = 2
select name from representative where representative_id not in ( select representative_id from election )
select party from representative where state = `` new york '' intersect select party from representative where state = `` pennsylvania ''
select count ( distinct party ) from representative
select count ( * ) from apartment_bookings
select count ( * ) from apartment_bookings
select booking_start_date , booking_end_date from apartment_bookings
select booking_start_date , booking_end_date from apartment_bookings
select distinct building_description from apartment_buildings
select distinct building_description from apartment_buildings
select building_short_name from apartment_buildings where building_manager = `` emma ''
select building_short_name from apartment_buildings where building_manager = `` emma ''
select building_address , building_phone from apartment_buildings where building_manager = `` brenden ''
select building_address , building_phone from apartment_buildings where building_manager = `` brenden ''
select building_full_name from apartment_buildings where building_full_name like `` % court % ''
select building_full_name from apartment_buildings where building_full_name like `` % court % ''
select min ( bathroom_count ) , max ( bathroom_count ) from apartments
select min ( bathroom_count ) , max ( bathroom_count ) from apartments
select avg ( bedroom_count ) from apartments
select avg ( bedroom_count ) from apartments
select apt_number , room_count from apartments
select apt_number , room_count from apartments
select avg ( room_count ) from apartments where apt_type_code = `` studio ''
select avg ( room_count ) from apartments where apt_type_code = `` studio ''
select apt_number from apartments where apt_type_code = `` flat ''
select apt_number from apartments where apt_type_code = `` flat ''
select guest_first_name , guest_last_name from guests
select guest_first_name , guest_last_name from guests
select date_of_birth from guests where gender_code = `` male ''
select date_of_birth from guests where gender_code = `` male ''
select t2.apt_number , t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id
select t2.apt_number , t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id
select t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.apt_type_code = `` duplex ''
select t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.apt_type_code = `` duplex ''
select t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.bedroom_count > 2
select t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.bedroom_count > 2
select t1.booking_status_code from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.apt_number = `` suite 634 ''
select t1.booking_status_code from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.apt_number = `` suite 634 ''
select distinct t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` confirmed ''
select distinct t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` confirmed ''
select avg ( room_count ) from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` provisional ''
select avg ( room_count ) from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` provisional ''
select t2.guest_first_name , t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join guests as t2 on t1.guest_id = t2.guest_id
select t2.guest_first_name , t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join guests as t2 on t1.guest_id = t2.guest_id
select t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join guests as t2 on t1.guest_id = t2.guest_id where t2.gender_code = `` female ''
select t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join guests as t2 on t1.guest_id = t2.guest_id where t2.gender_code = `` female ''
select t2.guest_first_name , t2.guest_last_name from apartment_bookings as t1 join guests as t2 on t1.guest_id = t2.guest_id where t1.booking_status_code = `` confirmed ''
select t2.guest_first_name , t2.guest_last_name from apartment_bookings as t1 join guests as t2 on t1.guest_id = t2.guest_id where t1.booking_status_code = `` confirmed ''
select t1.facility_code from apartment_facilities as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.bedroom_count > 4
select t1.facility_code from apartment_facilities as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t2.bedroom_count > 4
select sum ( t2.room_count ) from apartment_facilities as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.facility_code = `` gym ''
select sum ( t2.room_count ) from apartment_facilities as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.facility_code = `` gym ''
select sum ( t2.room_count ) from apartment_buildings as t1 join apartments as t2 on t1.building_id = t2.building_id where t1.building_short_name = `` columbus square ''
select sum ( t2.room_count ) from apartment_buildings as t1 join apartments as t2 on t1.building_id = t2.building_id where t1.building_short_name = `` columbus square ''
select t1.building_address from apartment_buildings as t1 join apartments as t2 on t1.building_id = t2.building_id where t2.bathroom_count > 2
select t1.building_address from apartment_buildings as t1 join apartments as t2 on t1.building_id = t2.building_id where t2.bathroom_count > 2
select t2.apt_type_code , t2.apt_number from apartment_buildings as t1 join apartments as t2 on t1.building_id = t2.building_id where t1.building_manager = `` kyle ''
select t2.apt_type_code , t2.apt_number from apartment_buildings as t1 join apartments as t2 on t1.building_id = t2.building_id where t1.building_manager = `` kyle ''
select booking_status_code , count ( * ) from apartment_bookings group by booking_status_code
select booking_status_code , count ( * ) from apartment_bookings group by booking_status_code
select apt_number from apartments order by room_count asc
select apt_number from apartments order by room_count asc
select apt_number from apartments order by bedroom_count desc limit 1
select apt_number from apartments order by bedroom_count desc limit 1
select apt_type_code , count ( * ) from apartments group by apt_type_code order by count ( * ) asc
select apt_type_code , count ( * ) from apartments group by apt_type_code order by count ( * ) asc
select apt_type_code from apartments group by apt_type_code order by avg ( room_count ) desc limit 3
select apt_type_code from apartments group by apt_type_code order by avg ( room_count ) desc limit 3
select apt_type_code , bathroom_count , bedroom_count from apartments group by apt_type_code order by sum ( room_count ) desc limit 1
select apt_type_code , bathroom_count , bedroom_count from apartments group by apt_type_code order by sum ( room_count ) desc limit 1
select apt_type_code from apartments group by apt_type_code order by count ( * ) desc limit 1
select apt_type_code from apartments group by apt_type_code order by count ( * ) desc limit 1
select apt_type_code from apartments where bathroom_count > 1 group by apt_type_code order by count ( * ) desc limit 1
select apt_type_code from apartments where bathroom_count > 1 group by apt_type_code order by count ( * ) desc limit 1
select apt_type_code , max ( room_count ) , min ( room_count ) from apartments group by apt_type_code
select apt_type_code , max ( room_count ) , min ( room_count ) from apartments group by apt_type_code
select gender_code , count ( * ) from guests group by gender_code order by count ( * ) desc
select gender_code , count ( * ) from guests group by gender_code order by count ( * ) desc
select count ( * ) from apartments where apt_id not in ( select apt_id from apartment_facilities )
select count ( * ) from apartments where apt_id not in ( select apt_id from apartment_facilities )
select t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` confirmed '' intersect select t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` provisional ''
select t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` confirmed '' intersect select t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = `` provisional ''
select t1.apt_number from apartments as t1 join view_unit_status as t2 on t1.apt_id = t2.apt_id where t2.available_yn = 0 intersect select t1.apt_number from apartments as t1 join view_unit_status as t2 on t1.apt_id = t2.apt_id where t2.available_yn = 1
select t1.apt_number from apartments as t1 join view_unit_status as t2 on t1.apt_id = t2.apt_id where t2.available_yn = 0 intersect select t1.apt_number from apartments as t1 join view_unit_status as t2 on t1.apt_id = t2.apt_id where t2.available_yn = 1
select count ( * ) from game where season > 2007
select date from game order by home_team desc
select season , home_team , away_team from game
select max ( home_games ) , min ( home_games ) , avg ( home_games ) from stadium
select average_attendance from stadium where capacity_percentage > 100
select player , number_of_matches , source from injury_accident where injury ! = 'knee problem '
select t1.season from game as t1 join injury_accident as t2 on t1.id = t2.game_id where t2.player = 'walter samuel '
select t1.id , t1.score , t1.date from game as t1 join injury_accident as t2 on t2.game_id = t1.id group by t1.id having count ( * ) > = 2
select t1.id , t1.name from stadium as t1 join game as t2 on t1.id = t2.stadium_id join injury_accident as t3 on t2.id = t3.game_id group by t1.id order by count ( * ) desc limit 1
select t1.id , t1.name from stadium as t1 join game as t2 on t1.id = t2.stadium_id join injury_accident as t3 on t2.id = t3.game_id group by t1.id order by count ( * ) desc limit 1
select t1.season , t2.name from game as t1 join stadium as t2 on t1.stadium_id = t2.id join injury_accident as t3 on t1.id = t3.game_id where t3.injury = 'foot injury ' or t3.injury = 'knee problem '
select count ( distinct source ) from injury_accident
select count ( * ) from game where id not in ( select game_id from injury_accident )
select count ( distinct t1.injury ) from injury_accident as t1 join game as t2 on t1.game_id = t2.id where t2.season > 2010
select t2.name from game as t1 join stadium as t2 on t1.stadium_id = t2.id join injury_accident as t3 on t1.id = t3.game_id where t3.player = 'walter samuel ' intersect select t2.name from game as t1 join stadium as t2 on t1.stadium_id = t2.id join injury_accident as t3 on t1.id = t3.game_id where t3.player = 'thiago motta '
select name , average_attendance , total_attendance from stadium except select t2.name , t2.average_attendance , t2.total_attendance from game as t1 join stadium as t2 on t1.stadium_id = t2.id join injury_accident as t3 on t1.id = t3.game_id
select name from stadium where name like `` % bank % ''
select t1.id , count ( * ) from stadium as t1 join game as t2 on t1.id = t2.stadium_id group by t1.id
select t1.date , t2.player from game as t1 join injury_accident as t2 on t1.id = t2.game_id order by t1.season desc
select t1.name , t2.name from country as t1 join league as t2 on t1.id = t2.country_id
select count ( * ) from country as t1 join league as t2 on t1.id = t2.country_id where t1.name = `` england ''
select avg ( weight ) from player
select max ( weight ) , min ( weight ) from player
select distinct t1.player_name from player as t1 join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t2.overall_rating > ( select avg ( overall_rating ) from player_attributes )
select distinct t1.player_name from player as t1 join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t2.dribbling = ( select max ( overall_rating ) from player_attributes )
select distinct t1.player_name from player as t1 join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t2.crossing > 90 and t2.preferred_foot = `` right ''
select distinct t1.player_name from player as t1 join player_attributes as t2 on t1.player_api_id = t2.player_api_id where t2.preferred_foot = `` left '' and t2.overall_rating > = 85 and t2.overall_rating < = 90
select preferred_foot , avg ( overall_rating ) from player_attributes group by preferred_foot
select preferred_foot , count ( * ) from player_attributes where overall_rating > 80 group by preferred_foot
select player_api_id from player where height > = 180 intersect select player_api_id from player_attributes where overall_rating > 85
select player_api_id from player where height > = 180 and height < = 190 intersect select player_api_id from player_attributes where preferred_foot = `` left ''
select distinct t1.player_name from player as t1 join player_attributes as t2 on t1.player_api_id = t2.player_api_id order by overall_rating desc limit 3
select distinct t1.player_name , t1.birthday from player as t1 join player_attributes as t2 on t1.player_api_id = t2.player_api_id order by potential desc limit 5
select count ( * ) from performance
select host from performance order by attendance asc
select date , location from performance
select attendance from performance where location = `` td garden '' or location = `` bell centre ''
select avg ( attendance ) from performance
select date from performance order by attendance desc limit 1
select location , count ( * ) from performance group by location
select location from performance group by location order by count ( * ) desc limit 1
select location from performance group by location having count ( * ) > = 2
select location from performance where attendance > 2000 intersect select location from performance where attendance < 1000
select t2.name , t3.location from member_attendance as t1 join member as t2 on t1.member_id = t2.member_id join performance as t3 on t1.performance_id = t3.performance_id
select t2.name , t3.location from member_attendance as t1 join member as t2 on t1.member_id = t2.member_id join performance as t3 on t1.performance_id = t3.performance_id order by t2.name asc
select t3.date from member_attendance as t1 join member as t2 on t1.member_id = t2.member_id join performance as t3 on t1.performance_id = t3.performance_id where t2.role = `` violin ''
select t2.name , t3.date from member_attendance as t1 join member as t2 on t1.member_id = t2.member_id join performance as t3 on t1.performance_id = t3.performance_id order by t3.attendance desc
select name from member where member_id not in ( select member_id from member_attendance )
select distinct building from classroom where capacity > 50
select distinct building from classroom where capacity > 50
select count ( * ) from classroom where building ! = 'lamberton '
select count ( * ) from classroom where building ! = 'lamberton '
select dept_name , building from department where budget > ( select avg ( budget ) from department )
select dept_name , building from department where budget > ( select avg ( budget ) from department )
select building , room_number from classroom where capacity between 50 and 100
select building , room_number from classroom where capacity between 50 and 100
select dept_name , building from department order by budget desc limit 1
select dept_name , building from department order by budget desc limit 1
select name from student where dept_name = 'history ' order by tot_cred desc limit 1
select name from student where dept_name = 'history ' order by tot_cred desc limit 1
select count ( * ) from classroom where building = 'lamberton '
select count ( * ) from classroom where building = 'lamberton '
select count ( distinct s_id ) from advisor
select count ( distinct s_id ) from advisor
select count ( distinct dept_name ) from course
select count ( distinct dept_name ) from course
select count ( distinct course_id ) from course where dept_name = 'physics '
select count ( distinct course_id ) from course where dept_name = 'physics '
select t1.title from course as t1 join prereq as t2 on t1.course_id = t2.course_id group by t2.course_id having count ( * ) = 2
select t1.title from course as t1 join prereq as t2 on t1.course_id = t2.course_id group by t2.course_id having count ( * ) = 2
select t1.title , t1.credits , t1.dept_name from course as t1 join prereq as t2 on t1.course_id = t2.course_id group by t2.course_id having count ( * ) > 1
select t1.title , t1.credits , t1.dept_name from course as t1 join prereq as t2 on t1.course_id = t2.course_id group by t2.course_id having count ( * ) > 1
select count ( * ) from course where course_id not in ( select course_id from prereq )
select count ( * ) from course where course_id not in ( select course_id from prereq )
select title from course where course_id not in ( select course_id from prereq )
select title from course where course_id not in ( select course_id from prereq )
select count ( distinct id ) from teaches
select count ( distinct id ) from teaches
select sum ( budget ) from department where dept_name = 'marketing ' or dept_name = 'finance '
select sum ( budget ) from department where dept_name = 'marketing ' or dept_name = 'finance '
select dept_name from instructor where name like ' % soisalon % '
select dept_name from instructor where name like ' % soisalon % '
select count ( * ) from classroom where building = 'lamberton ' and capacity < 50
select count ( * ) from classroom where building = 'lamberton ' and capacity < 50
select dept_name , budget from department where budget > ( select avg ( budget ) from department )
select dept_name , budget from department where budget > ( select avg ( budget ) from department )
select name from instructor where dept_name = 'statistics ' order by salary limit 1
select name from instructor where dept_name = 'statistics ' order by salary limit 1
select title from course where dept_name = 'statistics ' intersect select title from course where dept_name = 'psychology '
select title from course where dept_name = 'statistics ' intersect select title from course where dept_name = 'psychology '
select title from course where dept_name = 'statistics ' except select title from course where dept_name = 'psychology '
select title from course where dept_name = 'statistics ' except select title from course where dept_name = 'psychology '
select id from teaches where semester = 'fall ' and year = 2009 except select id from teaches where semester = 'spring ' and year = 2010
select id from teaches where semester = 'fall ' and year = 2009 except select id from teaches where semester = 'spring ' and year = 2010
select distinct t1.name from student as t1 join takes as t2 on t1.id = t2.id where year = 2009 or year = 2010
select distinct t1.name from student as t1 join takes as t2 on t1.id = t2.id where year = 2009 or year = 2010
select dept_name from course group by dept_name order by count ( * ) desc limit 3
select dept_name from course group by dept_name order by count ( * ) desc limit 3
select dept_name from course group by dept_name order by sum ( credits ) desc limit 1
select dept_name from course group by dept_name order by sum ( credits ) desc limit 1
select title from course order by title , credits
select title from course order by title , credits
select dept_name from department order by budget limit 1
select dept_name from department order by budget limit 1
select dept_name , building from department order by budget desc
select dept_name , building from department order by budget desc
select name from instructor order by salary desc limit 1
select name from instructor order by salary desc limit 1
select * from instructor order by salary
select * from instructor order by salary
select name , dept_name from student order by tot_cred
select name , dept_name from student order by tot_cred
select t1.title , t3.name from course as t1 join teaches as t2 on t1.course_id = t2.course_id join instructor as t3 on t2.id = t3.id where year = 2008 order by t1.title
select t1.title , t3.name from course as t1 join teaches as t2 on t1.course_id = t2.course_id join instructor as t3 on t2.id = t3.id where year = 2008 order by t1.title
select t1.name from instructor as t1 join advisor as t2 on t1.id = t2.i_id group by t2.i_id having count ( * ) > 1
select t1.name from instructor as t1 join advisor as t2 on t1.id = t2.i_id group by t2.i_id having count ( * ) > 1
select t1.name from student as t1 join advisor as t2 on t1.id = t2.s_id group by t2.s_id having count ( * ) > 1
select t1.name from student as t1 join advisor as t2 on t1.id = t2.s_id group by t2.s_id having count ( * ) > 1
select count ( * ) , building from classroom where capacity > 50 group by building
select count ( * ) , building from classroom where capacity > 50 group by building
select max ( capacity ) , avg ( capacity ) , building from classroom group by building
select max ( capacity ) , avg ( capacity ) , building from classroom group by building
select title from course group by title having count ( * ) > 1
select title from course group by title having count ( * ) > 1
select sum ( credits ) , dept_name from course group by dept_name
select sum ( credits ) , dept_name from course group by dept_name
select min ( salary ) , dept_name from instructor group by dept_name having avg ( salary ) > ( select avg ( salary ) from instructor )
select min ( salary ) , dept_name from instructor group by dept_name having avg ( salary ) > ( select avg ( salary ) from instructor )
select count ( * ) , semester , year from section group by semester , year
select count ( * ) , semester , year from section group by semester , year
select year from section group by year order by count ( * ) desc limit 1
select year from section group by year order by count ( * ) desc limit 1
select semester , year from section group by semester , year order by count ( * ) desc limit 1
select semester , year from section group by semester , year order by count ( * ) desc limit 1
select dept_name from student group by dept_name order by count ( * ) desc limit 1
select dept_name from student group by dept_name order by count ( * ) desc limit 1
select count ( * ) , dept_name from student group by dept_name
select count ( * ) , dept_name from student group by dept_name
select semester , year from takes group by semester , year order by count ( * ) limit 1
select semester , year from takes group by semester , year order by count ( * ) limit 1
select i_id from advisor as t1 join student as t2 on t1.s_id = t2.id where t2.dept_name = 'history '
select i_id from advisor as t1 join student as t2 on t1.s_id = t2.id where t2.dept_name = 'history '
select t2.name , t2.salary from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id where t3.dept_name = 'history '
select t2.name , t2.salary from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id where t3.dept_name = 'history '
select course_id from course except select course_id from prereq
select course_id from course except select course_id from prereq
select title from course where course_id not in ( select course_id from prereq )
select title from course where course_id not in ( select course_id from prereq )
select title from course where course_id in ( select t1.prereq_id from prereq as t1 join course as t2 on t1.course_id = t2.course_id where t2.title = 'international finance ' )
select title from course where course_id in ( select t1.prereq_id from prereq as t1 join course as t2 on t1.course_id = t2.course_id where t2.title = 'international finance ' )
select title from course where course_id in ( select t1.course_id from prereq as t1 join course as t2 on t1.prereq_id = t2.course_id where t2.title = 'differential geometry ' )
select title from course where course_id in ( select t1.course_id from prereq as t1 join course as t2 on t1.prereq_id = t2.course_id where t2.title = 'differential geometry ' )
select name from student where id in ( select id from takes where semester = 'fall ' and year = 2003 )
select name from student where id in ( select id from takes where semester = 'fall ' and year = 2003 )
select t1.title from course as t1 join section as t2 on t1.course_id = t2.course_id where building = 'chandler ' and semester = 'fall ' and year = 2010
select t1.title from course as t1 join section as t2 on t1.course_id = t2.course_id where building = 'chandler ' and semester = 'fall ' and year = 2010
select t1.name from instructor as t1 join teaches as t2 on t1.id = t2.id join course as t3 on t2.course_id = t3.course_id where t3.title = 'c programming '
select t1.name from instructor as t1 join teaches as t2 on t1.id = t2.id join course as t3 on t2.course_id = t3.course_id where t3.title = 'c programming '
select t2.name , t2.salary from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id where t3.dept_name = 'math '
select t2.name , t2.salary from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id where t3.dept_name = 'math '
select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id where t3.dept_name = 'math ' order by t3.tot_cred
select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id where t3.dept_name = 'math ' order by t3.tot_cred
select title from course where course_id in ( select t1.prereq_id from prereq as t1 join course as t2 on t1.course_id = t2.course_id where t2.title = 'mobile computing ' )
select title from course where course_id in ( select t1.prereq_id from prereq as t1 join course as t2 on t1.course_id = t2.course_id where t2.title = 'mobile computing ' )
select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id order by t3.tot_cred desc limit 1
select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id order by t3.tot_cred desc limit 1
select name from instructor where id not in ( select id from teaches )
select name from instructor where id not in ( select id from teaches )
select id from instructor except select id from teaches
select id from instructor except select id from teaches
select name from instructor where id not in ( select id from teaches where semester = 'spring ' )
select name from instructor where id not in ( select id from teaches where semester = 'spring ' )
select dept_name from instructor group by dept_name order by avg ( salary ) desc limit 1
select dept_name from instructor group by dept_name order by avg ( salary ) desc limit 1
select avg ( t1.salary ) , count ( * ) from instructor as t1 join department as t2 on t1.dept_name = t2.dept_name order by t2.budget desc limit 1
select avg ( t1.salary ) , count ( * ) from instructor as t1 join department as t2 on t1.dept_name = t2.dept_name order by t2.budget desc limit 1
select t3.title , t3.credits from classroom as t1 join section as t2 on t1.building = t2.building and t1.room_number = t2.room_number join course as t3 on t2.course_id = t3.course_id where t1.capacity = ( select max ( capacity ) from classroom )
select t3.title , t3.credits from classroom as t1 join section as t2 on t1.building = t2.building and t1.room_number = t2.room_number join course as t3 on t2.course_id = t3.course_id where t1.capacity = ( select max ( capacity ) from classroom )
select name from student where id not in ( select t1.id from takes as t1 join course as t2 on t1.course_id = t2.course_id where t2.dept_name = 'biology ' )
select name from student where id not in ( select t1.id from takes as t1 join course as t2 on t1.course_id = t2.course_id where t2.dept_name = 'biology ' )
select count ( distinct t2.id ) , count ( distinct t3.id ) , t3.dept_name from department as t1 join student as t2 on t1.dept_name = t2.dept_name join instructor as t3 on t1.dept_name = t3.dept_name group by t3.dept_name
select count ( distinct t2.id ) , count ( distinct t3.id ) , t3.dept_name from department as t1 join student as t2 on t1.dept_name = t2.dept_name join instructor as t3 on t1.dept_name = t3.dept_name group by t3.dept_name
select t1.name from student as t1 join takes as t2 on t1.id = t2.id where t2.course_id in ( select t4.prereq_id from course as t3 join prereq as t4 on t3.course_id = t4.course_id where t3.title = 'international finance ' )
select t1.name from student as t1 join takes as t2 on t1.id = t2.id where t2.course_id in ( select t4.prereq_id from course as t3 join prereq as t4 on t3.course_id = t4.course_id where t3.title = 'international finance ' )
select name , salary from instructor where salary < ( select avg ( salary ) from instructor where dept_name = 'physics ' )
select name , salary from instructor where salary < ( select avg ( salary ) from instructor where dept_name = 'physics ' )
select t3.name from course as t1 join takes as t2 on t1.course_id = t2.course_id join student as t3 on t2.id = t3.id where t1.dept_name = 'statistics '
select t3.name from course as t1 join takes as t2 on t1.course_id = t2.course_id join student as t3 on t2.id = t3.id where t1.dept_name = 'statistics '
select t2.building , t2.room_number , t2.semester , t2.year from course as t1 join section as t2 on t1.course_id = t2.course_id where t1.dept_name = 'psychology ' order by t1.title
select t2.building , t2.room_number , t2.semester , t2.year from course as t1 join section as t2 on t1.course_id = t2.course_id where t1.dept_name = 'psychology ' order by t1.title
select name from instructor where dept_name = 'comp . sci . '
select name from instructor where dept_name = 'comp . sci . '
select name from instructor where dept_name = 'comp . sci . ' and salary > 80000
select name from instructor where dept_name = 'comp . sci . ' and salary > 80000
select name , course_id from instructor as t1 join teaches as t2 on t1.id = t2.id
select name , course_id from instructor as t1 join teaches as t2 on t1.id = t2.id
select name , course_id from instructor as t1 join teaches as t2 on t1.id = t2.id where t1.dept_name = 'art '
select name , course_id from instructor as t1 join teaches as t2 on t1.id = t2.id where t1.dept_name = 'art '
select name from instructor where name like ' % dar % '
select name from instructor where name like ' % dar % '
select distinct name from instructor order by name
select distinct name from instructor order by name
select course_id from section where semester = 'fall ' and year = 2009 union select course_id from section where semester = 'spring ' and year = 2010
select course_id from section where semester = 'fall ' and year = 2009 union select course_id from section where semester = 'spring ' and year = 2010
select course_id from section where semester = 'fall ' and year = 2009 intersect select course_id from section where semester = 'spring ' and year = 2010
select course_id from section where semester = 'fall ' and year = 2009 intersect select course_id from section where semester = 'spring ' and year = 2010
select course_id from section where semester = 'fall ' and year = 2009 except select course_id from section where semester = 'spring ' and year = 2010
select course_id from section where semester = 'fall ' and year = 2009 except select course_id from section where semester = 'spring ' and year = 2010
select distinct salary from instructor where salary < ( select max ( salary ) from instructor )
select distinct salary from instructor where salary < ( select max ( salary ) from instructor )
select count ( distinct id ) from teaches where semester = 'spring ' and year = 2010
select count ( distinct id ) from teaches where semester = 'spring ' and year = 2010
select dept_name , avg ( salary ) from instructor group by dept_name having avg ( salary ) > 42000
select dept_name , avg ( salary ) from instructor group by dept_name having avg ( salary ) > 42000
select name from instructor where salary > ( select min ( salary ) from instructor where dept_name = 'biology ' )
select name from instructor where salary > ( select min ( salary ) from instructor where dept_name = 'biology ' )
select name from instructor where salary > ( select max ( salary ) from instructor where dept_name = 'biology ' )
select name from instructor where salary > ( select max ( salary ) from instructor where dept_name = 'biology ' )
select count ( * ) from debate
select venue from debate order by num_of_audience asc
select date , venue from debate
select date from debate where num_of_audience > 150
select name from people where age = 35 or age = 36
select party from people order by age asc limit 1
select party , count ( * ) from people group by party
select party from people group by party order by count ( * ) desc limit 1
select distinct venue from debate
select t3.name , t2.date , t2.venue from debate_people as t1 join debate as t2 on t1.debate_id = t2.debate_id join people as t3 on t1.affirmative = t3.people_id
select t3.name , t2.date , t2.venue from debate_people as t1 join debate as t2 on t1.debate_id = t2.debate_id join people as t3 on t1.negative = t3.people_id order by t3.name asc
select t3.name from debate_people as t1 join debate as t2 on t1.debate_id = t2.debate_id join people as t3 on t1.affirmative = t3.people_id where t2.num_of_audience > 200
select t2.name , count ( * ) from debate_people as t1 join people as t2 on t1.affirmative = t2.people_id group by t2.name
select t2.name from debate_people as t1 join people as t2 on t1.negative = t2.people_id group by t2.name having count ( * ) > = 2
select name from people where people_id not in ( select affirmative from debate_people )
select customer_details from customers order by customer_details
select customer_details from customers order by customer_details
select policy_type_code from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_details = `` dayana robel ''
select policy_type_code from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_details = `` dayana robel ''
select policy_type_code from policies group by policy_type_code order by count ( * ) desc limit 1
select policy_type_code from policies group by policy_type_code order by count ( * ) desc limit 1
select policy_type_code from policies group by policy_type_code having count ( * ) > 2
select policy_type_code from policies group by policy_type_code having count ( * ) > 2
select sum ( amount_piad ) , avg ( amount_piad ) from claim_headers
select sum ( amount_piad ) , avg ( amount_piad ) from claim_headers
select sum ( t1.amount_claimed ) from claim_headers as t1 join claims_documents as t2 on t1.claim_header_id = t2.claim_id where t2.created_date = ( select created_date from claims_documents order by created_date limit 1 )
select sum ( t1.amount_claimed ) from claim_headers as t1 join claims_documents as t2 on t1.claim_header_id = t2.claim_id where t2.created_date = ( select created_date from claims_documents order by created_date limit 1 )
select t3.customer_details from claim_headers as t1 join policies as t2 on t1.policy_id = t2.policy_id join customers as t3 on t2.customer_id = t3.customer_id where t1.amount_claimed = ( select max ( amount_claimed ) from claim_headers )
select t3.customer_details from claim_headers as t1 join policies as t2 on t1.policy_id = t2.policy_id join customers as t3 on t2.customer_id = t3.customer_id where t1.amount_claimed = ( select max ( amount_claimed ) from claim_headers )
select t3.customer_details from claim_headers as t1 join policies as t2 on t1.policy_id = t2.policy_id join customers as t3 on t2.customer_id = t3.customer_id where t1.amount_piad = ( select min ( amount_piad ) from claim_headers )
select t3.customer_details from claim_headers as t1 join policies as t2 on t1.policy_id = t2.policy_id join customers as t3 on t2.customer_id = t3.customer_id where t1.amount_piad = ( select min ( amount_piad ) from claim_headers )
select customer_details from customers except select t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id
select customer_details from customers except select t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id
select count ( * ) from claims_processing_stages
select count ( * ) from claims_processing_stages
select t2.claim_status_name from claims_processing as t1 join claims_processing_stages as t2 on t1.claim_stage_id = t2.claim_stage_id group by t1.claim_stage_id order by count ( * ) desc limit 1
select t2.claim_status_name from claims_processing as t1 join claims_processing_stages as t2 on t1.claim_stage_id = t2.claim_stage_id group by t1.claim_stage_id order by count ( * ) desc limit 1
select customer_details from customers where customer_details like `` % diana % ''
select customer_details from customers where customer_details like `` % diana % ''
select distinct t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.policy_type_code = `` deputy ''
select distinct t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.policy_type_code = `` deputy ''
select distinct t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.policy_type_code = `` deputy '' or t1.policy_type_code = `` uniform ''
select distinct t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.policy_type_code = `` deputy '' or t1.policy_type_code = `` uniform ''
select customer_details from customers union select staff_details from staff
select customer_details from customers union select staff_details from staff
select policy_type_code , count ( * ) from policies group by policy_type_code
select policy_type_code , count ( * ) from policies group by policy_type_code
select t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_details order by count ( * ) desc limit 1
select t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_details order by count ( * ) desc limit 1
select claim_status_description from claims_processing_stages where claim_status_name = `` open ''
select claim_status_description from claims_processing_stages where claim_status_name = `` open ''
select count ( distinct claim_outcome_code ) from claims_processing
select count ( distinct claim_outcome_code ) from claims_processing
select t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.start_date = ( select max ( start_date ) from policies )
select t2.customer_details from policies as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.start_date = ( select max ( start_date ) from policies )
select count ( * ) from accounts
select count ( * ) from accounts
select count ( distinct customer_id ) from accounts
select count ( distinct customer_id ) from accounts
select account_id , date_account_opened , account_name , other_account_details from accounts
select account_id , date_account_opened , account_name , other_account_details from accounts
select t1.account_id , t1.date_account_opened , t1.account_name , t1.other_account_details from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = 'meaghan '
select t1.account_id , t1.date_account_opened , t1.account_name , t1.other_account_details from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = 'meaghan '
select t1.account_name , t1.other_account_details from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` meaghan '' and t2.customer_last_name = `` keeling ''
select t1.account_name , t1.other_account_details from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.customer_first_name = `` meaghan '' and t2.customer_last_name = `` keeling ''
select t2.customer_first_name , t2.customer_last_name from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.account_name = `` 900 ''
select t2.customer_first_name , t2.customer_last_name from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.account_name = `` 900 ''
select count ( * ) from customers where customer_id not in ( select customer_id from accounts )
select count ( * ) from customers where customer_id not in ( select customer_id from accounts )
select distinct t1.customer_first_name , t1.customer_last_name , t1.phone_number from customers as t1 join accounts as t2 on t1.customer_id = t2.customer_id
select distinct t1.customer_first_name , t1.customer_last_name , t1.phone_number from customers as t1 join accounts as t2 on t1.customer_id = t2.customer_id
select customer_id from customers except select customer_id from accounts
select customer_id from customers except select customer_id from accounts
select count ( * ) , customer_id from accounts group by customer_id
select count ( * ) , customer_id from accounts group by customer_id
select t1.customer_id , t2.customer_first_name , t2.customer_last_name from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t1.customer_id , t2.customer_first_name , t2.customer_last_name from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t1.customer_id , t2.customer_first_name , t2.customer_last_name , count ( * ) from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id
select t1.customer_id , t2.customer_first_name , t2.customer_last_name , count ( * ) from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id
select t2.customer_first_name , t1.customer_id from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > = 2
select t2.customer_first_name , t1.customer_id from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > = 2
select count ( * ) from customers
select count ( * ) from customers
select gender , count ( * ) from customers group by gender
select gender , count ( * ) from customers group by gender
select count ( * ) from financial_transactions
select count ( * ) from financial_transactions
select count ( * ) , account_id from financial_transactions
select count ( * ) , account_id from financial_transactions
select count ( * ) from financial_transactions as t1 join accounts as t2 on t1.account_id = t2.account_id where t2.account_name = `` 337 ''
select count ( * ) from financial_transactions as t1 join accounts as t2 on t1.account_id = t2.account_id where t2.account_name = `` 337 ''
select avg ( transaction_amount ) , min ( transaction_amount ) , max ( transaction_amount ) , sum ( transaction_amount ) from financial_transactions
select avg ( transaction_amount ) , min ( transaction_amount ) , max ( transaction_amount ) , sum ( transaction_amount ) from financial_transactions
select transaction_id from financial_transactions where transaction_amount > ( select avg ( transaction_amount ) from financial_transactions )
select transaction_id from financial_transactions where transaction_amount > ( select avg ( transaction_amount ) from financial_transactions )
select transaction_type , sum ( transaction_amount ) from financial_transactions group by transaction_type
select transaction_type , sum ( transaction_amount ) from financial_transactions group by transaction_type
select t2.account_name , t1.account_id , count ( * ) from financial_transactions as t1 join accounts as t2 on t1.account_id = t2.account_id group by t1.account_id
select t2.account_name , t1.account_id , count ( * ) from financial_transactions as t1 join accounts as t2 on t1.account_id = t2.account_id group by t1.account_id
select account_id from financial_transactions group by account_id order by count ( * ) desc limit 1
select account_id from financial_transactions group by account_id order by count ( * ) desc limit 1
select t1.account_id , t2.account_name from financial_transactions as t1 join accounts as t2 on t1.account_id = t2.account_id group by t1.account_id having count ( * ) > = 4
select t1.account_id , t2.account_name from financial_transactions as t1 join accounts as t2 on t1.account_id = t2.account_id group by t1.account_id having count ( * ) > = 4
select distinct product_size from products
select distinct product_size from products
select distinct product_color from products
select distinct product_color from products
select invoice_number , count ( * ) from financial_transactions group by invoice_number
select invoice_number , count ( * ) from financial_transactions group by invoice_number
select t2.invoice_number , t2.invoice_date from financial_transactions as t1 join invoices as t2 on t1.invoice_number = t2.invoice_number group by t1.invoice_number order by count ( * ) desc limit 1
select t2.invoice_number , t2.invoice_date from financial_transactions as t1 join invoices as t2 on t1.invoice_number = t2.invoice_number group by t1.invoice_number order by count ( * ) desc limit 1
select count ( * ) from invoices
select count ( * ) from invoices
select t1.invoice_date , t1.order_id , t2.order_details from invoices as t1 join orders as t2 on t1.order_id = t2.order_id
select t1.invoice_date , t1.order_id , t2.order_details from invoices as t1 join orders as t2 on t1.order_id = t2.order_id
select order_id , count ( * ) from invoices group by order_id
select order_id , count ( * ) from invoices group by order_id
select t2.order_id , t2.order_details from invoices as t1 join orders as t2 on t1.order_id = t2.order_id group by t2.order_id having count ( * ) > 2
select t2.order_id , t2.order_details from invoices as t1 join orders as t2 on t1.order_id = t2.order_id group by t2.order_id having count ( * ) > 2
select t2.customer_last_name , t1.customer_id , t2.phone_number from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t2.customer_last_name , t1.customer_id , t2.phone_number from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select product_name from products except select t1.product_name from products as t1 join order_items as t2 on t1.product_id = t2.product_id
select product_name from products except select t1.product_name from products as t1 join order_items as t2 on t1.product_id = t2.product_id
select t2.product_name , sum ( t1.product_quantity ) from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t2.product_name
select t2.product_name , sum ( t1.product_quantity ) from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t2.product_name
select order_id , count ( * ) from order_items group by order_id
select order_id , count ( * ) from order_items group by order_id
select product_id , count ( distinct order_id ) from order_items group by product_id
select product_id , count ( distinct order_id ) from order_items group by product_id
select t2.product_name , count ( * ) from order_items as t1 join products as t2 on t1.product_id = t2.product_id join orders as t3 on t3.order_id = t1.order_id group by t2.product_name
select t2.product_name , count ( * ) from order_items as t1 join products as t2 on t1.product_id = t2.product_id join orders as t3 on t3.order_id = t1.order_id group by t2.product_name
select order_id , count ( distinct product_id ) from order_items group by order_id
select order_id , count ( distinct product_id ) from order_items group by order_id
select order_id , sum ( product_quantity ) from order_items group by order_id
select order_id , sum ( product_quantity ) from order_items group by order_id
select count ( * ) from products where product_id not in ( select product_id from order_items )
select count ( * ) from products where product_id not in ( select product_id from order_items )
select count ( * ) from church where open_date < 1850
select name , open_date , organized_by from church
select name from church order by open_date desc
select open_date from church group by open_date having count ( * ) > = 2
select organized_by , name from church where open_date between 1830 and 1840
select open_date , count ( * ) from church group by open_date
select name , open_date from church order by open_date desc limit 3
select count ( * ) from people where is_male = 'f ' and age > 30
select country from people where age < 25 intersect select country from people where age > 30
select min ( age ) , max ( age ) , avg ( age ) from people
select name , country from people where age < ( select avg ( age ) from people )
select t2.name , t3.name from wedding as t1 join people as t2 on t1.male_id = t2.people_id join people as t3 on t1.female_id = t3.people_id where t1.year > 2014
select name , age from people where is_male = 't ' and people_id not in ( select male_id from wedding )
select name from church except select t1.name from church as t1 join wedding as t2 on t1.church_id = t2.church_id where t2.year = 2015
select t1.name from church as t1 join wedding as t2 on t1.church_id = t2.church_id group by t1.church_id having count ( * ) > = 2
select t2.name from wedding as t1 join people as t2 on t1.female_id = t2.people_id where t1.year = 2016 and t2.is_male = 'f ' and t2.country = 'canada '
select count ( * ) from wedding where year = 2016
select t4.name from wedding as t1 join people as t2 on t1.male_id = t2.people_id join people as t3 on t1.female_id = t3.people_id join church as t4 on t4.church_id = t1.church_id where t2.age > 30 or t3.age > 30
select country , count ( * ) from people group by country
select count ( distinct church_id ) from wedding where year = 2016
select count ( * ) from artist
select count ( * ) from artist
select name , age , country from artist order by year_join
select name , age , country from artist order by year_join
select distinct country from artist
select distinct country from artist
select name , year_join from artist where country ! = 'united states '
select name , year_join from artist where country ! = 'united states '
select count ( * ) from artist where age > 46 and year_join > 1990
select count ( * ) from artist where age > 46 and year_join > 1990
select avg ( age ) , min ( age ) from artist where country = 'united states '
select avg ( age ) , min ( age ) from artist where country = 'united states '
select name from artist order by year_join desc limit 1
select name from artist order by year_join desc limit 1
select count ( * ) from exhibition where year > = 2005
select count ( * ) from exhibition where year > = 2005
select theme , year from exhibition where ticket_price < 15
select theme , year from exhibition where ticket_price < 15
select t2.name , count ( * ) from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id group by t1.artist_id
select t2.name , count ( * ) from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id group by t1.artist_id
select t2.name , t2.country from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id group by t1.artist_id order by count ( * ) desc limit 1
select t2.name , t2.country from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id group by t1.artist_id order by count ( * ) desc limit 1
select name from artist where artist_id not in ( select artist_id from exhibition )
select name from artist where artist_id not in ( select artist_id from exhibition )
select t1.theme , t2.name from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id where t1.ticket_price > ( select avg ( ticket_price ) from exhibition )
select t1.theme , t2.name from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id where t1.ticket_price > ( select avg ( ticket_price ) from exhibition )
select avg ( ticket_price ) , min ( ticket_price ) , max ( ticket_price ) from exhibition where year < 2009
select avg ( ticket_price ) , min ( ticket_price ) , max ( ticket_price ) from exhibition where year < 2009
select theme , year from exhibition order by ticket_price desc
select theme , year from exhibition order by ticket_price desc
select t2.theme , t1.date , t1.attendance from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t2.year = 2004
select t2.theme , t1.date , t1.attendance from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t2.year = 2004
select name from artist except select t2.name from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id where t1.year = 2004
select name from artist except select t2.name from exhibition as t1 join artist as t2 on t1.artist_id = t2.artist_id where t1.year = 2004
select t2.theme from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t1.attendance < 100 intersect select t2.theme from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t1.attendance > 500
select t2.theme from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t1.attendance < 100 intersect select t2.theme from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t1.attendance > 500
select count ( * ) from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t1.attendance > 100 or t2.ticket_price < 10
select count ( * ) from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id where t1.attendance > 100 or t2.ticket_price < 10
select t3.name from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id join artist as t3 on t3.artist_id = t2.artist_id group by t3.artist_id having avg ( t1.attendance ) > 200
select t3.name from exhibition_record as t1 join exhibition as t2 on t1.exhibition_id = t2.exhibition_id join artist as t3 on t3.artist_id = t2.artist_id group by t3.artist_id having avg ( t1.attendance ) > 200
select i_id from item where title = `` orange ''
select * from item
select count ( * ) from review
select count ( * ) from useracct
select avg ( rating ) , max ( rating ) from review
select min ( rank ) from review
select count ( distinct u_id ) from review
select count ( distinct i_id ) from review
select count ( * ) from item where i_id not in ( select i_id from review )
select name from useracct where u_id not in ( select u_id from review )
select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id where t2.rating = 10
select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id where t2.rating > ( select avg ( rating ) from review )
select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id where t2.rating < 5
select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id where t2.rating > 8 intersect select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id where t2.rating < 5
select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id where t2.rank > 3 intersect select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id group by t2.i_id having avg ( t2.rating ) > 5
select t1.title from item as t1 join review as t2 on t1.i_id = t2.i_id group by t2.i_id order by avg ( t2.rating ) limit 1
select title from item order by title
select t1.name from useracct as t1 join review as t2 on t1.u_id = t2.u_id group by t2.u_id order by count ( * ) desc limit 1
select t1.title , t1.i_id from item as t1 join review as t2 on t1.i_id = t2.i_id group by t2.i_id order by avg ( t2.rating ) desc limit 1
select t1.title , t1.i_id from item as t1 join review as t2 on t1.i_id = t2.i_id group by t2.i_id order by avg ( t2.rank ) desc limit 1
select t1.name , avg ( t2.rating ) from useracct as t1 join review as t2 on t1.u_id = t2.u_id group by t2.u_id
select t1.name , count ( * ) from useracct as t1 join review as t2 on t1.u_id = t2.u_id group by t2.u_id
select t1.name from useracct as t1 join review as t2 on t1.u_id = t2.u_id order by t2.rating desc limit 1
select t1.name from useracct as t1 join trust as t2 on t1.u_id = t2.source_u_id group by t2.source_u_id order by avg ( trust ) desc limit 1
select t1.name , avg ( trust ) from useracct as t1 join trust as t2 on t1.u_id = t2.target_u_id group by t2.target_u_id
select t1.name from useracct as t1 join trust as t2 on t1.u_id = t2.target_u_id order by trust limit 1
select title from item where i_id not in ( select i_id from review )
select name from useracct where u_id not in ( select u_id from review )
select count ( * ) from useracct where u_id not in ( select u_id from review )
select count ( * ) from item where i_id not in ( select i_id from review )
select count ( * ) from player
select player_name from player order by votes asc
select gender , occupation from player
select player_name , residence from player where occupation ! = `` researcher ''
select sponsor_name from player where residence = `` brandon '' or residence = `` birtle ''
select player_name from player order by votes desc limit 1
select occupation , count ( * ) from player group by occupation
select occupation from player group by occupation order by count ( * ) desc limit 1
select residence from player group by residence having count ( * ) > = 2
select t3.player_name , t2.coach_name from player_coach as t1 join coach as t2 on t1.coach_id = t2.coach_id join player as t3 on t1.player_id = t3.player_id
select t3.player_name from player_coach as t1 join coach as t2 on t1.coach_id = t2.coach_id join player as t3 on t1.player_id = t3.player_id where t2.rank = 1
select t3.player_name , t3.gender from player_coach as t1 join coach as t2 on t1.coach_id = t2.coach_id join player as t3 on t1.player_id = t3.player_id where t1.starting_year > 2011
select t3.player_name , t2.coach_name from player_coach as t1 join coach as t2 on t1.coach_id = t2.coach_id join player as t3 on t1.player_id = t3.player_id order by t3.votes desc
select player_name from player where player_id not in ( select player_id from player_coach )
select residence from player where gender = `` m '' intersect select residence from player where gender = `` f ''
select t1.club_id , t1.club_name , count ( * ) from club as t1 join coach as t2 on t1.club_id = t2.club_id group by t1.club_id
select t1.club_id , t1.gold from match_result as t1 join coach as t2 on t1.club_id = t2.club_id group by t1.club_id order by count ( * ) desc limit 1
select count ( * ) from gymnast
select count ( * ) from gymnast
select total_points from gymnast order by total_points desc
select total_points from gymnast order by total_points desc
select total_points from gymnast order by floor_exercise_points desc
select total_points from gymnast order by floor_exercise_points desc
select avg ( horizontal_bar_points ) from gymnast
select avg ( horizontal_bar_points ) from gymnast
select name from people order by name asc
select name from people order by name asc
select t2.name from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id
select t2.name from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id
select t2.name from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id where t2.hometown ! = `` santo domingo ''
select t2.name from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id where t2.hometown ! = `` santo domingo ''
select age from people order by height desc limit 1
select age from people order by height desc limit 1
select name from people order by age desc limit 5
select name from people order by age desc limit 5
select t1.total_points from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id order by t2.age asc limit 1
select t1.total_points from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id order by t2.age asc limit 1
select avg ( t2.age ) from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id
select avg ( t2.age ) from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id
select distinct t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id where t1.total_points > 57.5
select distinct t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id where t1.total_points > 57.5
select t2.hometown , count ( * ) from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id group by t2.hometown
select t2.hometown , count ( * ) from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id group by t2.hometown
select t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id group by t2.hometown order by count ( * ) desc limit 1
select t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id group by t2.hometown order by count ( * ) desc limit 1
select t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id group by t2.hometown having count ( * ) > = 2
select t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id group by t2.hometown having count ( * ) > = 2
select t2.name from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id order by t2.height asc
select t2.name from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id order by t2.height asc
select distinct hometown from people except select distinct t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id
select distinct hometown from people except select distinct t2.hometown from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id
select hometown from people where age > 23 intersect select hometown from people where age < 20
select hometown from people where age > 23 intersect select hometown from people where age < 20
select count ( distinct hometown ) from people
select count ( distinct hometown ) from people
select t2.age from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id order by t1.total_points desc
select t2.age from gymnast as t1 join people as t2 on t1.gymnast_id = t2.people_id order by t1.total_points desc
select sum ( t2.balance ) from accounts as t1 join savings as t2 on t1.custid = t2.custid where t1.name ! = 'brown '
select sum ( t2.balance ) from accounts as t1 join savings as t2 on t1.custid = t2.custid where t1.name ! = 'brown '
select count ( * ) from accounts
select count ( * ) from accounts
select sum ( balance ) from checking
select sum ( balance ) from checking
select avg ( balance ) from checking
select avg ( balance ) from checking
select count ( * ) from savings where balance > ( select avg ( balance ) from savings )
select count ( * ) from savings where balance > ( select avg ( balance ) from savings )
select t1.custid , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < ( select max ( balance ) from checking )
select t1.custid , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < ( select max ( balance ) from checking )
select t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid where t1.name like ' % ee % '
select t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid where t1.name like ' % ee % '
select t2.balance , t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t1.name = 'brown '
select t2.balance , t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t1.name = 'brown '
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance > ( select avg ( balance ) from checking ) intersect select t1.name from accounts as t1 join savings as t2 on t1.custid = t2.custid where t2.balance < ( select avg ( balance ) from savings )
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance > ( select avg ( balance ) from checking ) intersect select t1.name from accounts as t1 join savings as t2 on t1.custid = t2.custid where t2.balance < ( select avg ( balance ) from savings )
select t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid where t1.name in ( select t1.name from accounts as t1 join savings as t2 on t1.custid = t2.custid where t2.balance > ( select avg ( balance ) from savings ) )
select t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid where t1.name in ( select t1.name from accounts as t1 join savings as t2 on t1.custid = t2.custid where t2.balance > ( select avg ( balance ) from savings ) )
select name from accounts order by name
select name from accounts order by name
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance + t3.balance limit 1
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance + t3.balance limit 1
select t1.name , t2.balance + t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t3.balance > ( select avg ( balance ) from savings )
select t1.name , t2.balance + t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t3.balance > ( select avg ( balance ) from savings )
select t1.name , t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t3.balance limit 1
select t1.name , t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t3.balance limit 1
select count ( * ) , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid group by t1.name
select count ( * ) , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid group by t1.name
select sum ( t2.balance ) , t1.name from accounts as t1 join savings as t2 on t1.custid = t2.custid group by t1.name
select sum ( t2.balance ) , t1.name from accounts as t1 join savings as t2 on t1.custid = t2.custid group by t1.name
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < ( select avg ( balance ) from checking )
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < ( select avg ( balance ) from checking )
select t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance desc limit 1
select t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance desc limit 1
select t1.balance + t2.balance from checking as t1 join savings as t2 on t1.custid = t2.custid order by t1.balance + t2.balance
select t1.balance + t2.balance from checking as t1 join savings as t2 on t1.custid = t2.custid order by t1.balance + t2.balance
select t2.balance , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t3.balance limit 1
select t2.balance , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t3.balance limit 1
select t2.balance , t3.balance , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid
select t2.balance , t3.balance , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid
select t2.balance , t3.balance , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance + t3.balance desc
select t2.balance , t3.balance , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance + t3.balance desc
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t2.balance > t3.balance
select t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t2.balance > t3.balance
select t1.name , t3.balance + t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t3.balance < t2.balance
select t1.name , t3.balance + t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid where t3.balance < t2.balance
select t1.name , t2.balance from accounts as t1 join savings as t2 on t1.custid = t2.custid order by t2.balance desc limit 3
select t1.name , t2.balance from accounts as t1 join savings as t2 on t1.custid = t2.custid order by t2.balance desc limit 3
select count ( * ) from browser where market_share > = 5
select name from browser order by market_share desc
select id , name , market_share from browser
select max ( market_share ) , min ( market_share ) , avg ( market_share ) from browser
select id , market_share from browser where name = 'safari '
select name , operating_system from web_client_accelerator where connection ! = 'broadband '
select t1.name from browser as t1 join accelerator_compatible_browser as t2 on t1.id = t2.browser_id join web_client_accelerator as t3 on t2.accelerator_id = t3.id where t3.name = 'cproxy ' and t2.compatible_since_year > 1998
select t1.id , t1.name from web_client_accelerator as t1 join accelerator_compatible_browser as t2 on t2.accelerator_id = t1.id group by t1.id having count ( * ) > = 2
select t1.id , t1.name from browser as t1 join accelerator_compatible_browser as t2 on t1.id = t2.browser_id group by t1.id order by count ( * ) desc limit 1
select t1.compatible_since_year from accelerator_compatible_browser as t1 join browser as t2 on t1.browser_id = t2.id join web_client_accelerator as t3 on t1.accelerator_id = t3.id where t3.name = 'cachebox ' and t2.name = 'internet explorer '
select count ( distinct client ) from web_client_accelerator
select count ( * ) from web_client_accelerator where id not in ( select accelerator_id from accelerator_compatible_browser ) ;
select distinct t1.name from web_client_accelerator as t1 join accelerator_compatible_browser as t2 on t2.accelerator_id = t1.id join browser as t3 on t2.browser_id = t3.id where t3.market_share > 15 ;
select t3.name from web_client_accelerator as t1 join accelerator_compatible_browser as t2 on t2.accelerator_id = t1.id join browser as t3 on t2.browser_id = t3.id where t1.name = 'cachebox ' intersect select t3.name from web_client_accelerator as t1 join accelerator_compatible_browser as t2 on t2.accelerator_id = t1.id join browser as t3 on t2.browser_id = t3.id where t1.name = 'fasterfox '
select name , operating_system from web_client_accelerator except select t1.name , t1.operating_system from web_client_accelerator as t1 join accelerator_compatible_browser as t2 on t2.accelerator_id = t1.id join browser as t3 on t2.browser_id = t3.id where t3.name = 'opera '
select name from web_client_accelerator where name like `` % opera % ''
select operating_system , count ( * ) from web_client_accelerator group by operating_system
select t2.name , t3.name from accelerator_compatible_browser as t1 join browser as t2 on t1.browser_id = t2.id join web_client_accelerator as t3 on t1.accelerator_id = t3.id order by t1.compatible_since_year desc
select count ( * ) from wrestler
select count ( * ) from wrestler
select name from wrestler order by days_held desc
select name from wrestler order by days_held desc
select name from wrestler order by days_held asc limit 1
select name from wrestler order by days_held asc limit 1
select distinct reign from wrestler where location ! = `` tokyo , japan ''
select distinct reign from wrestler where location ! = `` tokyo , japan ''
select name , location from wrestler
select name , location from wrestler
select elimination_move from elimination where team = `` team orton ''
select elimination_move from elimination where team = `` team orton ''
select t2.name , t1.elimination_move from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id
select t2.name , t1.elimination_move from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id
select t2.name , t1.team from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id order by t2.days_held desc
select t2.name , t1.team from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id order by t2.days_held desc
select t1.time from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id order by t2.days_held desc limit 1
select t1.time from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id order by t2.days_held desc limit 1
select t1.time from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id where t2.days_held > 50
select t1.time from elimination as t1 join wrestler as t2 on t1.wrestler_id = t2.wrestler_id where t2.days_held > 50
select team , count ( * ) from elimination group by team
select team , count ( * ) from elimination group by team
select team from elimination group by team having count ( * ) > 3
select team from elimination group by team having count ( * ) > 3
select reign , days_held from wrestler
select reign , days_held from wrestler
select name from wrestler where days_held < 100
select name from wrestler where days_held < 100
select reign from wrestler group by reign order by count ( * ) desc limit 1
select reign from wrestler group by reign order by count ( * ) desc limit 1
select location from wrestler group by location having count ( * ) > 2
select location from wrestler group by location having count ( * ) > 2
select name from wrestler where wrestler_id not in ( select wrestler_id from elimination )
select name from wrestler where wrestler_id not in ( select wrestler_id from elimination )
select team from elimination where eliminated_by = `` orton '' intersect select team from elimination where eliminated_by = `` benjamin ''
select team from elimination where eliminated_by = `` orton '' intersect select team from elimination where eliminated_by = `` benjamin ''
select count ( distinct team ) from elimination
select count ( distinct team ) from elimination
select time from elimination where eliminated_by = `` punk '' or eliminated_by = `` orton ''
select time from elimination where eliminated_by = `` punk '' or eliminated_by = `` orton ''
select count ( * ) from school
select count ( * ) from school
select school_name from school order by school_name
select school_name , location , mascot from school
select sum ( enrollment ) , avg ( enrollment ) from school
select mascot from school where enrollment > ( select avg ( enrollment ) from school )
select school_name from school order by enrollment limit 1
select avg ( enrollment ) , max ( enrollment ) , min ( enrollment ) from school
select county , count ( * ) , sum ( enrollment ) from school group by county
select count ( distinct t1.donator_name ) from endowment as t1 join school as t2 on t1.school_id = t2.school_id where t2.school_name = `` glenn ''
select donator_name , sum ( amount ) from endowment group by donator_name order by sum ( amount ) desc
select school_name from school where school_id not in ( select school_id from endowment )
select t2.school_name from endowment as t1 join school as t2 on t1.school_id = t2.school_id group by t1.school_id having sum ( t1.amount ) < = 10
select t1.donator_name from endowment as t1 join school as t2 on t1.school_id = t2.school_id where t2.school_name = 'glenn ' intersect select t1.donator_name from endowment as t1 join school as t2 on t1.school_id = t2.school_id where t2.school_name = 'triton '
select donator_name from endowment except select donator_name from endowment where amount < 9
select amount , donator_name from endowment order by amount desc limit 1
select count ( * ) from budget where budgeted > 3000 and year < = 2001
select count ( * ) from budget where budgeted > 3000 and year < = 2001
select t2.school_name , t1.budgeted , t1.invested from budget as t1 join school as t2 on t1.school_id = t2.school_id where t1.year > = 2002
select distinct donator_name from endowment
select count ( * ) from budget where budgeted < invested
select sum ( t1.budgeted ) from budget as t1 join school as t2 on t1.school_id = t2.school_id where t2.school_name = 'glenn '
select t2.school_name from budget as t1 join school as t2 on t1.school_id = t2.school_id join endowment as t3 on t2.school_id = t3.school_id group by t2.school_name having sum ( t1.budgeted ) > 100 or sum ( t3.amount ) > 10
select t2.school_name from endowment as t1 join school as t2 on t1.school_id = t2.school_id where t1.amount > 8.5 group by t1.school_id having count ( * ) > 1
select count ( * ) from ( select * from endowment where amount > 8.5 group by school_id having count ( * ) > 1 )
select t1.school_name , t1.mascot , t1.ihsaa_football_class from school as t1 join budget as t2 on t1.school_id = t2.school_id where budgeted > 6000 or year < 2003 order by t2.total_budget_percent_invested , t2.total_budget_percent_budgeted
select count ( * ) from building
select name , street_address , floors from building order by floors
select name from building order by height_feet desc limit 1
select avg ( floors ) , max ( floors ) , min ( floors ) from building
select count ( * ) from building where height_feet > ( select avg ( height_feet ) from building ) or floors > ( select avg ( floors ) from building )
select name from building where height_feet > = 200 and floors > = 20
select institution , location from institution where founded > 1990 and type = 'private '
select type , count ( * ) , sum ( enrollment ) from institution group by type
select type from institution group by type order by count ( * ) desc limit 1
select type from institution where founded > 1990 and enrollment > = 1000
select name from building where building_id not in ( select building_id from institution )
select name from building except select t1.name from building as t1 join institution as t2 on t1.building_id = t2.building_id where t2.founded = 2003
select t1.name , count ( * ) from building as t1 join institution as t2 on t1.building_id = t2.building_id group by t1.building_id
select t1.name , t1.height_feet from building as t1 join institution as t2 on t1.building_id = t2.building_id where t2.founded > 1880 group by t1.building_id having count ( * ) > = 2
select distinct type from institution
select t1.institution , count ( * ) from institution as t1 join protein as t2 on t1.institution_id = t2.institution_id group by t1.institution_id
select count ( * ) from institution as t1 join protein as t2 on t1.institution_id = t2.institution_id where t1.founded > 1880 or t1.type = 'private '
select t2.protein_name , t1.institution from institution as t1 join protein as t2 on t1.institution_id = t2.institution_id
select count ( * ) from institution as t1 join protein as t2 on t1.institution_id = t2.institution_id join building as t3 on t3.building_id = t1.building_id where t3.floors > = 20
select count ( * ) from institution where institution_id not in ( select institution_id from protein )
select location from cinema except select location from cinema where capacity > 800
select location from cinema where openning_year = 2010 intersect select location from cinema where openning_year = 2011
select count ( * ) from cinema
select count ( * ) from cinema
select name , openning_year , capacity from cinema
select name , location from cinema where capacity > ( select avg ( capacity ) from cinema )
select distinct location from cinema
select distinct location from cinema
select name , openning_year from cinema order by openning_year desc
select name , location from cinema order by capacity desc limit 1
select avg ( capacity ) , min ( capacity ) , max ( capacity ) from cinema where openning_year > = 2011
select location , count ( * ) from cinema group by location
select location from cinema where openning_year > = 2010 group by location order by count ( * ) desc limit 1
select location from cinema where capacity > 300 group by location having count ( * ) > = 2
select location from cinema where capacity > 300 group by location having count ( * ) > = 2
select title , directed_by from film
select title , directed_by from film
select distinct directed_by from film
select distinct directed_by from film
select directed_by , count ( * ) from film group by directed_by
select t2.name , sum ( t1.show_times_per_day ) from schedule as t1 join cinema as t2 on t1.cinema_id = t2.cinema_id group by t1.cinema_id
select t2.title , max ( t1.price ) from schedule as t1 join film as t2 on t1.film_id = t2.film_id group by t1.film_id
select t2.title , max ( t1.price ) from schedule as t1 join film as t2 on t1.film_id = t2.film_id group by t1.film_id
select t3.name , t2.title , t1.date , t1.price from schedule as t1 join film as t2 on t1.film_id = t2.film_id join cinema as t3 on t1.cinema_id = t3.cinema_id
select title , directed_by from film where film_id not in ( select film_id from schedule )
select t2.directed_by from schedule as t1 join film as t2 on t1.film_id = t2.film_id group by t2.directed_by order by sum ( t1.show_times_per_day ) desc limit 1
select location from cinema where capacity > 300 group by location having count ( * ) > 1
select location from cinema where capacity > 300 group by location having count ( * ) > 1
select count ( * ) from film where title like `` % dummy % ''
select count ( * ) from film where title like `` % dummy % ''
select t1.good_or_bad_customer from customers as t1 join discount_coupons as t2 on t1.coupon_id = t2.coupon_id where t2.coupon_amount = 500
select t1.customer_id , t1.first_name , count ( * ) from customers as t1 join bookings as t2 on t1.customer_id = t2.customer_id group by t1.customer_id
select customer_id , sum ( amount_paid ) from payments group by customer_id order by sum ( amount_paid ) desc limit 1
select t1.booking_id , t1.amount_of_refund from bookings as t1 join payments as t2 on t1.booking_id = t2.booking_id group by t1.booking_id order by count ( * ) desc limit 1
select product_id from products_booked group by product_id having count ( * ) = 3
select t2.product_description from products_booked as t1 join products_for_hire as t2 on t1.product_id = t2.product_id where t1.booked_amount = 102.76
select t3.booking_start_date , t3.booking_end_date from products_for_hire as t1 join products_booked as t2 on t1.product_id = t2.product_id join bookings as t3 on t2.booking_id = t3.booking_id where t1.product_name = 'book collection a '
select t2.product_name from view_product_availability as t1 join products_for_hire as t2 on t1.product_id = t2.product_id where t1.available_yn = 1
select count ( distinct product_type_code ) from products_for_hire
select first_name , last_name , gender_mf from customers where good_or_bad_customer = 'good ' order by last_name
select avg ( amount_due ) from payments
select max ( booked_count ) , min ( booked_count ) , avg ( booked_count ) from products_booked
select distinct payment_type_code from payments
select daily_hire_cost from products_for_hire where product_name like ' % book % '
select count ( * ) from products_for_hire where product_id not in ( select product_id from products_booked where booked_amount > 200 )
select t1.coupon_amount from discount_coupons as t1 join customers as t2 on t1.coupon_id = t2.coupon_id where t2.good_or_bad_customer = 'good ' intersect select t1.coupon_amount from discount_coupons as t1 join customers as t2 on t1.coupon_id = t2.coupon_id where t2.good_or_bad_customer = 'bad '
select payment_date from payments where amount_paid > 300 or payment_type_code = 'check '
select product_name , product_description from products_for_hire where product_type_code = 'cutlery ' and daily_hire_cost < 20
select count ( * ) from phone
select name from phone order by price asc
select memory_in_g , carrier from phone
select distinct carrier from phone where memory_in_g > 32
select name from phone where carrier = `` sprint '' or carrier = `` tmobile ''
select carrier from phone order by price desc limit 1
select carrier , count ( * ) from phone group by carrier
select carrier from phone group by carrier order by count ( * ) desc limit 1
select carrier from phone where memory_in_g < 32 intersect select carrier from phone where memory_in_g > 64
select t3.name , t2.district from phone_market as t1 join market as t2 on t1.market_id = t2.market_id join phone as t3 on t1.phone_id = t3.phone_id
select t3.name , t2.district from phone_market as t1 join market as t2 on t1.market_id = t2.market_id join phone as t3 on t1.phone_id = t3.phone_id order by t2.ranking
select t3.name from phone_market as t1 join market as t2 on t1.market_id = t2.market_id join phone as t3 on t1.phone_id = t3.phone_id where t2.num_of_shops > 50
select t2.name , sum ( t1.num_of_stock ) from phone_market as t1 join phone as t2 on t1.phone_id = t2.phone_id group by t2.name
select t2.name from phone_market as t1 join phone as t2 on t1.phone_id = t2.phone_id group by t2.name having sum ( t1.num_of_stock ) > = 2000 order by sum ( t1.num_of_stock ) desc
select name from phone where phone_id not in ( select phone_id from phone_market )
select count ( * ) from company
select count ( * ) from company
select company , rank from company order by sales_billion desc
select company , rank from company order by sales_billion desc
select company , main_industry from company where headquarters ! = 'usa '
select company , main_industry from company where headquarters ! = 'usa '
select company , headquarters from company order by market_value desc
select company , headquarters from company order by market_value desc
select min ( market_value ) , max ( market_value ) , avg ( market_value ) from company
select min ( market_value ) , max ( market_value ) , avg ( market_value ) from company
select distinct main_industry from company
select distinct main_industry from company
select headquarters , count ( * ) from company group by headquarters
select headquarters , count ( * ) from company group by headquarters
select main_industry , sum ( market_value ) from company group by main_industry
select main_industry , sum ( market_value ) from company group by main_industry
select main_industry , count ( * ) from company group by main_industry order by sum ( market_value ) desc limit 1
select main_industry , count ( * ) from company group by main_industry order by sum ( market_value ) desc limit 1
select headquarters from company where main_industry = 'banking ' group by headquarters having count ( * ) > = 2
select headquarters from company where main_industry = 'banking ' group by headquarters having count ( * ) > = 2
select station_id , location , manager_name from gas_station order by open_year
select station_id , location , manager_name from gas_station order by open_year
select count ( * ) from gas_station where open_year between 2000 and 2005
select count ( * ) from gas_station where open_year between 2000 and 2005
select location , count ( * ) from gas_station group by location order by count ( * )
select location , count ( * ) from gas_station group by location order by count ( * )
select headquarters from company where main_industry = 'banking ' intersect select headquarters from company where main_industry = 'oil and gas '
select headquarters from company where main_industry = 'banking ' intersect select headquarters from company where main_industry = 'oil and gas '
select headquarters from company except select headquarters from company where main_industry = 'banking '
select headquarters from company except select headquarters from company where main_industry = 'banking '
select t2.company , count ( * ) from station_company as t1 join company as t2 on t1.company_id = t2.company_id group by t1.company_id
select t2.company , count ( * ) from station_company as t1 join company as t2 on t1.company_id = t2.company_id group by t1.company_id
select company , main_industry from company where company_id not in ( select company_id from station_company )
select company , main_industry from company where company_id not in ( select company_id from station_company )
select t3.manager_name from station_company as t1 join company as t2 on t1.company_id = t2.company_id join gas_station as t3 on t1.station_id = t3.station_id where t2.company = 'exxonmobil '
select t3.manager_name from station_company as t1 join company as t2 on t1.company_id = t2.company_id join gas_station as t3 on t1.station_id = t3.station_id where t2.company = 'exxonmobil '
select t3.location from station_company as t1 join company as t2 on t1.company_id = t2.company_id join gas_station as t3 on t1.station_id = t3.station_id where t2.market_value > 100
select t3.location from station_company as t1 join company as t2 on t1.company_id = t2.company_id join gas_station as t3 on t1.station_id = t3.station_id where t2.market_value > 100
select manager_name from gas_station where open_year > 2000 group by manager_name order by count ( * ) desc limit 1
select manager_name from gas_station where open_year > 2000 group by manager_name order by count ( * ) desc limit 1
select location from gas_station order by open_year
select location from gas_station order by open_year
select rank , company , market_value from company where main_industry = 'banking ' order by sales_billion , profits_billion
select rank , company , market_value from company where main_industry = 'banking ' order by sales_billion , profits_billion
select t3.location , t3.representative_name from station_company as t1 join company as t2 on t1.company_id = t2.company_id join gas_station as t3 on t1.station_id = t3.station_id order by t2.assets_billion desc limit 3
select t3.location , t3.representative_name from station_company as t1 join company as t2 on t1.company_id = t2.company_id join gas_station as t3 on t1.station_id = t3.station_id order by t2.assets_billion desc limit 3
select count ( * ) from region
select count ( * ) from region
select distinct region_name from region order by label
select distinct region_name from region order by label
select count ( distinct party_name ) from party
select count ( distinct party_name ) from party
select minister , took_office , left_office from party order by left_office
select minister , took_office , left_office from party order by left_office
select minister from party where took_office > 1961 or took_office < 1959
select minister from party where took_office > 1961 or took_office < 1959
select minister from party where party_name ! = 'progress party '
select minister from party where party_name ! = 'progress party '
select minister , party_name from party order by took_office desc
select minister , party_name from party order by took_office desc
select minister from party order by left_office desc limit 1
select minister from party order by left_office desc limit 1
select t1.member_name , t2.party_name from member as t1 join party as t2 on t1.party_id = t2.party_id
select t1.member_name , t2.party_name from member as t1 join party as t2 on t1.party_id = t2.party_id
select t2.party_name , count ( * ) from member as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id
select t2.party_name , count ( * ) from member as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id
select t2.party_name from member as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id order by count ( * ) desc limit 1
select t2.party_name from member as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id order by count ( * ) desc limit 1
select t1.party_name , t2.region_name from party as t1 join region as t2 on t1.region_id = t2.region_id
select t1.party_name , t2.region_name from party as t1 join region as t2 on t1.region_id = t2.region_id
select party_name from party where party_id not in ( select party_id from member )
select party_name from party where party_id not in ( select party_id from member )
select member_name from member where party_id = 3 intersect select member_name from member where party_id = 1
select member_name from member where party_id = 3 intersect select member_name from member where party_id = 1
select t1.member_name from member as t1 join party as t2 on t1.party_id = t2.party_id where t2.party_name ! = `` progress party ''
select t1.member_name from member as t1 join party as t2 on t1.party_id = t2.party_id where t2.party_name ! = `` progress party ''
select count ( * ) from party_events
select count ( * ) from party_events
select t2.party_name , count ( * ) from party_events as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id
select t2.party_name , count ( * ) from party_events as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id
select member_name from member except select t1.member_name from member as t1 join party_events as t2 on t1.member_id = t2.member_in_charge_id
select member_name from member except select t1.member_name from member as t1 join party_events as t2 on t1.member_id = t2.member_in_charge_id
select t2.party_name from party_events as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id having count ( * ) > = 2
select t2.party_name from party_events as t1 join party as t2 on t1.party_id = t2.party_id group by t1.party_id having count ( * ) > = 2
select t1.member_name from member as t1 join party_events as t2 on t1.member_id = t2.member_in_charge_id group by t2.member_in_charge_id order by count ( * ) desc limit 1
select t1.member_name from member as t1 join party_events as t2 on t1.member_id = t2.member_in_charge_id group by t2.member_in_charge_id order by count ( * ) desc limit 1
select event_name from party_events group by event_name having count ( * ) > 2
select event_name from party_events group by event_name having count ( * ) > 2
select count ( * ) from region as t1 join party as t2 on t1.region_id = t2.region_id join party_events as t3 on t2.party_id = t3.party_id where t1.region_name = `` united kingdom '' and t3.event_name = `` annaual meeting ''
select count ( * ) from region as t1 join party as t2 on t1.region_id = t2.region_id join party_events as t3 on t2.party_id = t3.party_id where t1.region_name = `` united kingdom '' and t3.event_name = `` annaual meeting ''
select count ( * ) from pilot
select pilot_name from pilot order by rank asc
select position , team from pilot
select distinct position from pilot where age > 30
select pilot_name from pilot where team = `` bradley '' or team = `` fordham ''
select join_year from pilot order by rank asc limit 1
select nationality , count ( * ) from pilot group by nationality
select nationality from pilot group by nationality order by count ( * ) desc limit 1
select position from pilot where join_year < 2000 intersect select position from pilot where join_year > 2005
select t3.pilot_name , t2.model from pilot_record as t1 join aircraft as t2 on t1.aircraft_id = t2.aircraft_id join pilot as t3 on t1.pilot_id = t3.pilot_id
select t3.pilot_name , t2.fleet_series from pilot_record as t1 join aircraft as t2 on t1.aircraft_id = t2.aircraft_id join pilot as t3 on t1.pilot_id = t3.pilot_id order by t3.rank
select t2.fleet_series from pilot_record as t1 join aircraft as t2 on t1.aircraft_id = t2.aircraft_id join pilot as t3 on t1.pilot_id = t3.pilot_id where t3.age < 34
select t2.pilot_name , count ( * ) from pilot_record as t1 join pilot as t2 on t1.pilot_id = t2.pilot_id group by t2.pilot_name
select t2.pilot_name , count ( * ) from pilot_record as t1 join pilot as t2 on t1.pilot_id = t2.pilot_id group by t2.pilot_name having count ( * ) > 1
select pilot_name from pilot where pilot_id not in ( select pilot_id from pilot_record )
select document_status_code from ref_document_status ;
select document_status_description from ref_document_status where document_status_code = `` working '' ;
select document_type_code from ref_document_types ;
select document_type_description from ref_document_types where document_type_code = `` paper '' ;
select shipping_agent_name from ref_shipping_agents ;
select shipping_agent_code from ref_shipping_agents where shipping_agent_name = `` ups '' ;
select role_code from roles ;
select role_description from roles where role_code = `` ed '' ;
select count ( * ) from employees ;
select t1.role_description from roles as t1 join employees as t2 on t1.role_code = t2.role_code where t2.employee_name = `` koby '' ;
select document_id , receipt_date from documents ;
select t1.role_description , t2.role_code , count ( * ) from roles as t1 join employees as t2 on t1.role_code = t2.role_code group by t2.role_code ;
select roles.role_description , count ( employees.employee_id ) from roles join employees on employees.role_code = roles.role_code group by employees.role_code having count ( employees.employee_id ) > 1 ;
select ref_document_status.document_status_description from ref_document_status join documents on documents.document_status_code = ref_document_status.document_status_code where documents.document_id = 1 ;
select count ( * ) from documents where document_status_code = `` done '' ;
select document_type_code from documents where document_id = 2 ;
select document_id from documents where document_status_code = `` done '' and document_type_code = `` paper '' ;
select ref_shipping_agents.shipping_agent_name from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code where documents.document_id = 2 ;
select count ( * ) from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code where ref_shipping_agents.shipping_agent_name = `` usps '' ;
select ref_shipping_agents.shipping_agent_name , count ( documents.document_id ) from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by ref_shipping_agents.shipping_agent_code order by count ( documents.document_id ) desc limit 1 ;
select receipt_date from documents where document_id = 3 ;
select addresses.address_details from addresses join documents_mailed on documents_mailed.mailed_to_address_id = addresses.address_id where document_id = 4 ;
select mailing_date from documents_mailed where document_id = 7 ;
select document_id from documents where document_status_code = `` done '' and document_type_code = `` paper '' except select document_id from documents join ref_shipping_agents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code where ref_shipping_agents.shipping_agent_name = `` usps '' ;
select document_id from documents where document_status_code = `` done '' and document_type_code = `` paper '' intersect select document_id from documents join ref_shipping_agents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code where ref_shipping_agents.shipping_agent_name = `` usps '' ;
select draft_details from document_drafts where document_id = 7 ;
select count ( * ) from draft_copies where document_id = 2 ;
select document_id , count ( copy_number ) from draft_copies group by document_id order by count ( copy_number ) desc limit 1 ;
select document_id , count ( * ) from draft_copies group by document_id having count ( * ) > 1 ;
select employees.employee_name from employees join circulation_history on circulation_history.employee_id = employees.employee_id where circulation_history.document_id = 1 ;
select employee_name from employees except select employees.employee_name from employees join circulation_history on circulation_history.employee_id = employees.employee_id
select employees.employee_name , count ( * ) from employees join circulation_history on circulation_history.employee_id = employees.employee_id group by circulation_history.document_id , circulation_history.draft_number , circulation_history.copy_number order by count ( * ) desc limit 1 ;
select document_id , count ( distinct employee_id ) from circulation_history group by document_id ;
select dname from department order by mgr_start_date
select dependent_name from dependent where relationship = 'spouse '
select count ( * ) from dependent where sex = 'f '
select t1.dname from department as t1 join dept_locations as t2 on t1.dnumber = t2.dnumber where t2.dlocation = 'houston '
select fname , lname from employee where salary > 30000
select count ( * ) , sex from employee where salary < 50000 group by sex
select fname , lname , address from employee order by bdate
select t1.event_details from events as t1 join services as t2 on t1.service_id = t2.service_id where t2.service_type_code = 'marriage '
select t1.event_id , t1.event_details from events as t1 join participants_in_events as t2 on t1.event_id = t2.event_id group by t1.event_id having count ( * ) > 1
select t1.participant_id , t1.participant_type_code , count ( * ) from participants as t1 join participants_in_events as t2 on t1.participant_id = t2.participant_id group by t1.participant_id
select participant_id , participant_type_code , participant_details from participants
select count ( * ) from participants where participant_type_code = 'organizer '
select service_type_code from services order by service_type_code
select service_id , event_details from events
select count ( * ) from participants as t1 join participants_in_events as t2 on t1.participant_id = t2.participant_id where t1.participant_details like ' % dr. % '
select participant_type_code from participants group by participant_type_code order by count ( * ) desc limit 1
select t3.service_id , t4.service_type_code from participants as t1 join participants_in_events as t2 on t1.participant_id = t2.participant_id join events as t3 on t2.event_id = t3.event_id join services as t4 on t3.service_id = t4.service_id group by t3.service_id order by count ( * ) asc limit 1
select event_id from participants_in_events group by event_id order by count ( * ) desc limit 1
select event_id from events except select t1.event_id from participants_in_events as t1 join participants as t2 on t1.participant_id = t2.participant_id where participant_details = 'kenyatta kuhn '
select t1.service_type_code from services as t1 join events as t2 on t1.service_id = t2.service_id where t2.event_details = 'success ' intersect select t1.service_type_code from services as t1 join events as t2 on t1.service_id = t2.service_id where t2.event_details = 'fail '
select count ( * ) from events where event_id not in ( select event_id from participants_in_events )
select count ( distinct participant_id ) from participants_in_events
select name from races order by date desc limit 1
select name from races order by date desc limit 1
select name , date from races order by date desc limit 1
select name , date from races order by date desc limit 1
select name from races where year = 2017
select name from races where year = 2017
select distinct name from races where year between 2014 and 2017
select distinct name from races where year between 2014 and 2017
select distinct t1.forename , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid where t2.milliseconds < 93000
select distinct t1.forename , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid where t2.milliseconds < 93000
select distinct t1.driverid , t1.nationality from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid where t2.milliseconds > 100000
select distinct t1.driverid , t1.nationality from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid where t2.milliseconds > 100000
select t1.forename , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds limit 1
select t1.forename , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds limit 1
select t1.driverid , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds desc limit 1
select t1.driverid , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds desc limit 1
select t1.driverid , t1.forename , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid where position = '1 ' group by t1.driverid having count ( * ) > = 2
select t1.driverid , t1.forename , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid where position = '1 ' group by t1.driverid having count ( * ) > = 2
select count ( * ) from results as t1 join races as t2 on t1.raceid = t2.raceid where t2.name = `` australian grand prix '' and year = 2009
select count ( * ) from results as t1 join races as t2 on t1.raceid = t2.raceid where t2.name = `` australian grand prix '' and year = 2009
select count ( distinct driverid ) from results where raceid not in ( select raceid from races where year ! = 2009 )
select count ( distinct driverid ) from results where raceid not in ( select raceid from races where year ! = 2009 )
select t2.name , t2.year from results as t1 join races as t2 on t1.raceid = t2.raceid join drivers as t3 on t1.driverid = t3.driverid where t3.forename = `` lewis ''
select t2.name , t2.year from results as t1 join races as t2 on t1.raceid = t2.raceid join drivers as t3 on t1.driverid = t3.driverid where t3.forename = `` lewis ''
select forename , surname from drivers where nationality = `` german ''
select forename , surname from drivers where nationality = `` german ''
select t2.driverid , t3.forename from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` australian grand prix '' intersect select t2.driverid , t3.forename from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` chinese grand prix ''
select t2.driverid , t3.forename from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` australian grand prix '' intersect select t2.driverid , t3.forename from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` chinese grand prix ''
select t3.forename , t3.surname from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` australian grand prix '' except select t3.forename , t3.surname from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` chinese grand prix ''
select t3.forename , t3.surname from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` australian grand prix '' except select t3.forename , t3.surname from races as t1 join results as t2 on t1.raceid = t2.raceid join drivers as t3 on t2.driverid = t3.driverid where t1.name = `` chinese grand prix ''
select distinct t1.forename from drivers as t1 join driverstandings as t2 on t1.driverid = t2.driverid where t2.position = 1 and t2.wins = 1
select distinct t1.forename from drivers as t1 join driverstandings as t2 on t1.driverid = t2.driverid where t2.position = 1 and t2.wins = 1
select distinct t1.forename from drivers as t1 join driverstandings as t2 on t1.driverid = t2.driverid where t2.position = 1 and t2.wins = 1 and t2.points > 20
select distinct t1.forename from drivers as t1 join driverstandings as t2 on t1.driverid = t2.driverid where t2.position = 1 and t2.wins = 1 and t2.points > 20
select count ( * ) , nationality from constructors group by nationality
select count ( * ) , nationality from constructors group by nationality
select count ( * ) , constructorid from constructorstandings group by constructorid
select count ( * ) , constructorid from constructorstandings group by constructorid
select t1.name from races as t1 join circuits as t2 on t1.circuitid = t2.circuitid where t2.country = `` spain '' and t1.year > 2017
select t1.name from races as t1 join circuits as t2 on t1.circuitid = t2.circuitid where t2.country = `` spain '' and t1.year > 2017
select distinct t1.name from races as t1 join circuits as t2 on t1.circuitid = t2.circuitid where t2.country = `` spain '' and t1.year > 2000
select distinct t1.name from races as t1 join circuits as t2 on t1.circuitid = t2.circuitid where t2.country = `` spain '' and t1.year > 2000
select distinct driverid , stop from pitstops where duration < ( select max ( duration ) from pitstops where raceid = 841 )
select distinct driverid , stop from pitstops where duration < ( select max ( duration ) from pitstops where raceid = 841 )
select distinct driverid , stop from pitstops where duration > ( select min ( duration ) from pitstops where raceid = 841 )
select distinct driverid , stop from pitstops where duration > ( select min ( duration ) from pitstops where raceid = 841 )
select distinct forename from drivers order by forename asc
select distinct forename from drivers order by forename asc
select distinct name from races order by name desc
select distinct name from races order by name desc
select name from races where year between 2009 and 2011
select name from races where year between 2009 and 2011
select name from races where time > `` 12:00:00 '' or time < `` 09:00:00 ''
select name from races where time > `` 12:00:00 '' or time < `` 09:00:00 ''
select t1.forename , t1.surname , t1.driverid from drivers as t1 join pitstops as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) > 8 union select t1.forename , t1.surname , t1.driverid from drivers as t1 join results as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) > 5
select t1.forename , t1.surname , t1.driverid from drivers as t1 join pitstops as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) > 8 union select t1.forename , t1.surname , t1.driverid from drivers as t1 join results as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) > 5
select t1.surname , t1.driverid from drivers as t1 join pitstops as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) = 11 intersect select t1.surname , t1.driverid from drivers as t1 join results as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) > 5
select t1.surname , t1.driverid from drivers as t1 join pitstops as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) = 11 intersect select t1.surname , t1.driverid from drivers as t1 join results as t2 on t1.driverid = t2.driverid group by t1.driverid having count ( * ) > 5
select t1.driverid , t1.surname from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid where t3.year > 2010 group by t1.driverid order by count ( * ) desc limit 1
select t1.driverid , t1.surname from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid where t3.year > 2010 group by t1.driverid order by count ( * ) desc limit 1
select name from circuits where country = `` uk '' or country = `` malaysia ''
select name from circuits where country = `` uk '' or country = `` malaysia ''
select circuitid , location from circuits where country = `` france '' or country = `` belgium ''
select circuitid , location from circuits where country = `` france '' or country = `` belgium ''
select t1.name from constructors as t1 join constructorstandings as t2 on t1.constructorid = t2.constructorid where t1.nationality = `` japanese '' and t2.points > 5
select t1.name from constructors as t1 join constructorstandings as t2 on t1.constructorid = t2.constructorid where t1.nationality = `` japanese '' and t2.points > 5
select avg ( t2.fastestlapspeed ) from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year = 2008 and t1.name = `` monaco grand prix ''
select avg ( t2.fastestlapspeed ) from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year = 2008 and t1.name = `` monaco grand prix ''
select max ( t2.fastestlapspeed ) from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year = 2008 and t1.name = `` monaco grand prix ''
select max ( t2.fastestlapspeed ) from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year = 2008 and t1.name = `` monaco grand prix ''
select max ( t2.fastestlapspeed ) , t1.name , t1.year from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year > 2014 group by t1.name order by t1.year
select max ( t2.fastestlapspeed ) , t1.name , t1.year from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year > 2014 group by t1.name order by t1.year
select avg ( t2.fastestlapspeed ) , t1.name , t1.year from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year > 2014 group by t1.name order by t1.year
select avg ( t2.fastestlapspeed ) , t1.name , t1.year from races as t1 join results as t2 on t1.raceid = t2.raceid where t1.year > 2014 group by t1.name order by t1.year
select t1.driverid , t1.forename , count ( * ) from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid having count ( * ) > = 2
select t1.driverid , t1.forename , count ( * ) from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid having count ( * ) > = 2
select t1.driverid , count ( * ) from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid having count ( * ) < = 30
select t1.driverid , count ( * ) from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid having count ( * ) < = 30
select t1.driverid , t1.surname from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid order by count ( * ) desc limit 1
select t1.driverid , t1.surname from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid order by count ( * ) desc limit 1
select count ( * ) from technician
select count ( * ) from technician
select name from technician order by age asc
select name from technician order by age asc
select team , starting_year from technician
select team , starting_year from technician
select name from technician where team ! = `` nyy ''
select name from technician where team ! = `` nyy ''
select name from technician where age = 36 or age = 37
select name from technician where age = 36 or age = 37
select starting_year from technician order by age desc limit 1
select starting_year from technician order by age desc limit 1
select team , count ( * ) from technician group by team
select team , count ( * ) from technician group by team
select team from technician group by team order by count ( * ) desc limit 1
select team from technician group by team order by count ( * ) desc limit 1
select team from technician group by team having count ( * ) > = 2
select team from technician group by team having count ( * ) > = 2
select t3.name , t2.machine_series from repair_assignment as t1 join machine as t2 on t1.machine_id = t2.machine_id join technician as t3 on t1.technician_id = t3.technician_id
select t3.name , t2.machine_series from repair_assignment as t1 join machine as t2 on t1.machine_id = t2.machine_id join technician as t3 on t1.technician_id = t3.technician_id
select t3.name from repair_assignment as t1 join machine as t2 on t1.machine_id = t2.machine_id join technician as t3 on t1.technician_id = t3.technician_id order by t2.quality_rank
select t3.name from repair_assignment as t1 join machine as t2 on t1.machine_id = t2.machine_id join technician as t3 on t1.technician_id = t3.technician_id order by t2.quality_rank
select t3.name from repair_assignment as t1 join machine as t2 on t1.machine_id = t2.machine_id join technician as t3 on t1.technician_id = t3.technician_id where t2.value_points > 70
select t3.name from repair_assignment as t1 join machine as t2 on t1.machine_id = t2.machine_id join technician as t3 on t1.technician_id = t3.technician_id where t2.value_points > 70
select t2.name , count ( * ) from repair_assignment as t1 join technician as t2 on t1.technician_id = t2.technician_id group by t2.name
select t2.name , count ( * ) from repair_assignment as t1 join technician as t2 on t1.technician_id = t2.technician_id group by t2.name
select name from technician where technician_id not in ( select technician_id from repair_assignment )
select name from technician where technician_id not in ( select technician_id from repair_assignment )
select starting_year from technician where team = `` cle '' intersect select starting_year from technician where team = `` cws ''
select starting_year from technician where team = `` cle '' intersect select starting_year from technician where team = `` cws ''
select count ( * ) from entrepreneur
select count ( * ) from entrepreneur
select company from entrepreneur order by money_requested desc
select company from entrepreneur order by money_requested desc
select company , investor from entrepreneur
select company , investor from entrepreneur
select avg ( money_requested ) from entrepreneur
select avg ( money_requested ) from entrepreneur
select name from people order by weight asc
select name from people order by weight asc
select t2.name from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id
select t2.name from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id
select t2.name from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id where t1.investor ! = `` rachel elnaugh ''
select t2.name from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id where t1.investor ! = `` rachel elnaugh ''
select weight from people order by height asc limit 1
select weight from people order by height asc limit 1
select t2.name from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t2.weight desc limit 1
select t2.name from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t2.weight desc limit 1
select sum ( t1.money_requested ) from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id where t2.height > 1.85
select sum ( t1.money_requested ) from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id where t2.height > 1.85
select t2.date_of_birth from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id where t1.investor = `` simon woodroffe '' or t1.investor = `` peter jones ''
select t2.date_of_birth from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id where t1.investor = `` simon woodroffe '' or t1.investor = `` peter jones ''
select t2.weight from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t1.money_requested desc
select t2.weight from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t1.money_requested desc
select investor , count ( * ) from entrepreneur group by investor
select investor , count ( * ) from entrepreneur group by investor
select investor from entrepreneur group by investor order by count ( * ) desc limit 1
select investor from entrepreneur group by investor order by count ( * ) desc limit 1
select investor from entrepreneur group by investor having count ( * ) > = 2
select investor from entrepreneur group by investor having count ( * ) > = 2
select t2.name , t1.company from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t1.money_requested
select t2.name , t1.company from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t1.money_requested
select name from people where people_id not in ( select people_id from entrepreneur )
select name from people where people_id not in ( select people_id from entrepreneur )
select investor from entrepreneur where money_requested > 140000 intersect select investor from entrepreneur where money_requested < 120000
select investor from entrepreneur where money_requested > 140000 intersect select investor from entrepreneur where money_requested < 120000
select count ( distinct company ) from entrepreneur
select count ( distinct company ) from entrepreneur
select t1.company from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t2.height desc limit 1
select t1.company from entrepreneur as t1 join people as t2 on t1.people_id = t2.people_id order by t2.height desc limit 1
select count ( * ) from perpetrator
select date from perpetrator order by killed desc
select injured from perpetrator order by injured asc
select avg ( injured ) from perpetrator
select location from perpetrator order by killed desc limit 1
select name from people order by height asc
select t1.name from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id
select t1.name from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id where t2.country ! = `` china ''
select t1.name from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id order by t1.weight desc limit 1
select sum ( t2.killed ) from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id where t1.height > 1.84
select t1.name from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id where t2.country = `` china '' or t2.country = `` japan ''
select t1.height from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id order by t2.injured desc
select country , count ( * ) from perpetrator group by country
select country , count ( * ) from perpetrator group by country order by count ( * ) desc limit 1
select country , count ( * ) from perpetrator group by country having count ( * ) > = 2
select t1.name from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id order by t2.year desc
select name from people where people_id not in ( select people_id from perpetrator )
select country from perpetrator where injured > 50 intersect select country from perpetrator where injured < 20
select count ( distinct location ) from perpetrator
select t2.date from people as t1 join perpetrator as t2 on t1.people_id = t2.people_id order by t1.height desc limit 1
select max ( year ) from perpetrator ;
select campus from campuses where county = `` los angeles ''
select campus from campuses where county = `` los angeles ''
select campus from campuses where location = `` chico ''
select campus from campuses where location = `` chico ''
select campus from campuses where year = 1958
select campus from campuses where year = 1958
select campus from campuses where year < 1800
select campus from campuses where year < 1800
select campus from campuses where year > = 1935 and year < = 1939
select campus from campuses where year > = 1935 and year < = 1939
select campus from campuses where location = `` northridge '' and county = `` los angeles '' union select campus from campuses where location = `` san francisco '' and county = `` san francisco ''
select campus from campuses where location = `` northridge '' and county = `` los angeles '' union select campus from campuses where location = `` san francisco '' and county = `` san francisco ''
select campusfee from campuses as t1 join csu_fees as t2 on t1.id = t2.campus where t1.campus = `` san jose state university '' and t2.year = 1996
select campusfee from campuses as t1 join csu_fees as t2 on t1.id = t2.campus where t1.campus = `` san jose state university '' and t2.year = 1996
select campusfee from campuses as t1 join csu_fees as t2 on t1.id = t2.campus where t1.campus = `` san francisco state university '' and t2.year = 1996
select campusfee from campuses as t1 join csu_fees as t2 on t1.id = t2.campus where t1.campus = `` san francisco state university '' and t2.year = 1996
select count ( * ) from csu_fees where campusfee > ( select avg ( campusfee ) from csu_fees )
select count ( * ) from csu_fees where campusfee > ( select avg ( campusfee ) from csu_fees )
select count ( * ) from csu_fees where campusfee > ( select avg ( campusfee ) from csu_fees )
select count ( * ) from csu_fees where campusfee > ( select avg ( campusfee ) from csu_fees )
select campus from campuses where county = `` los angeles '' and year > 1950
select campus from campuses where county = `` los angeles '' and year > 1950
select year from degrees group by year order by sum ( degrees ) desc limit 1
select year from degrees group by year order by sum ( degrees ) desc limit 1
select campus from degrees group by campus order by sum ( degrees ) desc limit 1
select campus from degrees group by campus order by sum ( degrees ) desc limit 1
select t1.campus from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.year = 2003 order by t2.faculty desc limit 1
select t1.campus from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.year = 2003 order by t2.faculty desc limit 1
select avg ( campusfee ) from csu_fees where year = 1996
select avg ( campusfee ) from csu_fees where year = 1996
select avg ( campusfee ) from csu_fees where year = 2005
select avg ( campusfee ) from csu_fees where year = 2005
select t1.campus , sum ( t2.degrees ) from campuses as t1 join degrees as t2 on t1.id = t2.campus where t2.year > = 1998 and t2.year < = 2002 group by t1.campus
select t1.campus , sum ( t2.degrees ) from campuses as t1 join degrees as t2 on t1.id = t2.campus where t2.year > = 1998 and t2.year < = 2002 group by t1.campus
select t1.campus , sum ( t2.degrees ) from campuses as t1 join degrees as t2 on t1.id = t2.campus where t1.county = `` orange '' and t2.year > = 2000 group by t1.campus
select t1.campus , sum ( t2.degrees ) from campuses as t1 join degrees as t2 on t1.id = t2.campus where t1.county = `` orange '' and t2.year > = 2000 group by t1.campus
select t1.campus from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.year = 2002 and faculty > ( select max ( faculty ) from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.year = 2002 and t1.county = `` orange '' )
select t1.campus from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.year = 2002 and faculty > ( select max ( faculty ) from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.year = 2002 and t1.county = `` orange '' )
select t1.campus from campuses as t1 join enrollments as t2 on t1.id = t2.campus where t2.year = 1956 and totalenrollment_ay > 400 and fte_ay > 200
select t1.campus from campuses as t1 join enrollments as t2 on t1.id = t2.campus where t2.year = 1956 and totalenrollment_ay > 400 and fte_ay > 200
select count ( * ) from campuses where county = `` los angeles ''
select count ( * ) from campuses where county = `` los angeles ''
select campus from campuses where county = `` los angeles ''
select campus from campuses where county = `` los angeles ''
select degrees from campuses as t1 join degrees as t2 on t1.id = t2.campus where t1.campus = `` san jose state university '' and t2.year = 2000
select degrees from campuses as t1 join degrees as t2 on t1.id = t2.campus where t1.campus = `` san jose state university '' and t2.year = 2000
select degrees from campuses as t1 join degrees as t2 on t1.id = t2.campus where t1.campus = `` san francisco state university '' and t2.year = 2001
select degrees from campuses as t1 join degrees as t2 on t1.id = t2.campus where t1.campus = `` san francisco state university '' and t2.year = 2001
select sum ( faculty ) from faculty where year = 2002
select sum ( faculty ) from faculty where year = 2002
select faculty from faculty as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2002 and t2.campus = `` long beach state university ''
select faculty from faculty as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2002 and t2.campus = `` long beach state university ''
select faculty from faculty as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2004 and t2.campus = `` san francisco state university ''
select faculty from faculty as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2004 and t2.campus = `` san francisco state university ''
select t1.campus from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.faculty > = 600 and t2.faculty < = 1000 and t1.year = 2004
select t1.campus from campuses as t1 join faculty as t2 on t1.id = t2.campus where t2.faculty > = 600 and t2.faculty < = 1000 and t1.year = 2004
select t2.faculty from campuses as t1 join faculty as t2 on t1.id = t2.campus join degrees as t3 on t1.id = t3.campus and t2.year = t3.year where t2.year = 2002 order by t3.degrees desc limit 1
select t2.faculty from campuses as t1 join faculty as t2 on t1.id = t2.campus join degrees as t3 on t1.id = t3.campus and t2.year = t3.year where t2.year = 2002 order by t3.degrees desc limit 1
select t2.faculty from campuses as t1 join faculty as t2 on t1.id = t2.campus join degrees as t3 on t1.id = t3.campus and t2.year = t3.year where t2.year = 2001 order by t3.degrees limit 1
select t2.faculty from campuses as t1 join faculty as t2 on t1.id = t2.campus join degrees as t3 on t1.id = t3.campus and t2.year = t3.year where t2.year = 2001 order by t3.degrees limit 1
select sum ( t1.undergraduate ) from discipline_enrollments as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2004 and t2.campus = `` san jose state university ''
select sum ( t1.undergraduate ) from discipline_enrollments as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2004 and t2.campus = `` san jose state university ''
select sum ( t1.graduate ) from discipline_enrollments as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2004 and t2.campus = `` san francisco state university ''
select sum ( t1.graduate ) from discipline_enrollments as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2004 and t2.campus = `` san francisco state university ''
select t1.campusfee from csu_fees as t1 join campuses as t2 on t1.campus = t2.id where t2.campus = `` san francisco state university '' and t1.year = 2000
select t1.campusfee from csu_fees as t1 join campuses as t2 on t1.campus = t2.id where t2.campus = `` san francisco state university '' and t1.year = 2000
select t1.campusfee from csu_fees as t1 join campuses as t2 on t1.campus = t2.id where t2.campus = `` san jose state university '' and t1.year = 2000
select t1.campusfee from csu_fees as t1 join campuses as t2 on t1.campus = t2.id where t2.campus = `` san jose state university '' and t1.year = 2000
select count ( * ) from campuses
select count ( * ) from campuses
select count ( * ) from candidate
select count ( * ) from candidate
select poll_source from candidate group by poll_source order by count ( * ) desc limit 1
select poll_source from candidate group by poll_source order by count ( * ) desc limit 1
select support_rate from candidate order by support_rate desc limit 3
select support_rate from candidate order by support_rate desc limit 3
select candidate_id from candidate order by oppose_rate limit 1
select candidate_id from candidate order by oppose_rate limit 1
select support_rate , consider_rate , oppose_rate from candidate order by unsure_rate
select support_rate , consider_rate , oppose_rate from candidate order by unsure_rate
select poll_source from candidate order by oppose_rate desc limit 1
select poll_source from candidate order by oppose_rate desc limit 1
select name from people order by date_of_birth
select name from people order by date_of_birth
select avg ( height ) , avg ( weight ) from people where sex = 'm '
select avg ( height ) , avg ( weight ) from people where sex = 'm '
select name from people where height > 200 or height < 190
select name from people where height > 200 or height < 190
select avg ( weight ) , min ( weight ) , sex from people group by sex
select avg ( weight ) , min ( weight ) , sex from people group by sex
select t1.name , t1.sex from people as t1 join candidate as t2 on t1.people_id = t2.people_id order by t2.support_rate desc limit 1
select t1.name , t1.sex from people as t1 join candidate as t2 on t1.people_id = t2.people_id order by t2.support_rate desc limit 1
select t1.name , t1.sex , min ( oppose_rate ) from people as t1 join candidate as t2 on t1.people_id = t2.people_id group by t1.sex
select t1.name , t1.sex , min ( oppose_rate ) from people as t1 join candidate as t2 on t1.people_id = t2.people_id group by t1.sex
select t1.sex from people as t1 join candidate as t2 on t1.people_id = t2.people_id group by t1.sex order by avg ( t2.unsure_rate ) desc limit 1
select t1.sex from people as t1 join candidate as t2 on t1.people_id = t2.people_id group by t1.sex order by avg ( t2.unsure_rate ) desc limit 1
select name from people where people_id not in ( select people_id from candidate )
select name from people where people_id not in ( select people_id from candidate )
select t1.name from people as t1 join candidate as t2 on t1.people_id = t2.people_id where t2.support_rate < t2.oppose_rate
select t1.name from people as t1 join candidate as t2 on t1.people_id = t2.people_id where t2.support_rate < t2.oppose_rate
select count ( * ) , sex from people where weight > 85 group by sex
select count ( * ) , sex from people where weight > 85 group by sex
select max ( support_rate ) , min ( consider_rate ) , min ( oppose_rate ) from candidate
select max ( support_rate ) , min ( consider_rate ) , min ( oppose_rate ) from candidate
select t1.name from people as t1 join candidate as t2 on t1.people_id = t2.people_id where t1.sex = 'f ' order by t1.name
select t1.name from people as t1 join candidate as t2 on t1.people_id = t2.people_id where t1.sex = 'f ' order by t1.name
select name from people where height < ( select avg ( height ) from people )
select name from people where height < ( select avg ( height ) from people )
select * from people
select * from people
select title from movie where director = 'steven spielberg '
select title from movie where director = 'steven spielberg '
select title from movie where director = 'james cameron ' and year > 2000
select title from movie where director = 'james cameron ' and year > 2000
select count ( * ) from movie where year < 2000
select count ( * ) from movie where year < 2000
select director from movie where title = 'avatar '
select director from movie where title = 'avatar '
select count ( * ) from reviewer
select count ( * ) from reviewer
select rid from reviewer where name like `` % mike % ''
select rid from reviewer where name like `` % mike % ''
select rid from reviewer where name = `` daniel lewis ''
select rid from reviewer where name = `` daniel lewis ''
select count ( * ) from rating where stars > 3
select count ( * ) from rating where stars > 3
select max ( stars ) , min ( stars ) from rating
select max ( stars ) , min ( stars ) from rating
select distinct year from movie as t1 join rating as t2 on t1.mid = t2.mid where t2.stars > = 4 order by t1.year
select distinct year from movie as t1 join rating as t2 on t1.mid = t2.mid where t2.stars > = 4 order by t1.year
select t1.director , t1.title from movie as t1 join rating as t2 on t1.mid = t2.mid where t2.stars = 5
select t1.director , t1.title from movie as t1 join rating as t2 on t1.mid = t2.mid where t2.stars = 5
select t2.name , avg ( t1.stars ) from rating as t1 join reviewer as t2 on t1.rid = t2.rid group by t2.name
select t2.name , avg ( t1.stars ) from rating as t1 join reviewer as t2 on t1.rid = t2.rid group by t2.name
select title from movie where mid not in ( select mid from rating )
select title from movie where mid not in ( select mid from rating )
select distinct name from reviewer as t1 join rating as t2 on t1.rid = t2.rid where ratingdate = `` null ''
select distinct name from reviewer as t1 join rating as t2 on t1.rid = t2.rid where ratingdate = `` null ''
select avg ( t1.stars ) , t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.year = ( select min ( year ) from movie )
select avg ( t1.stars ) , t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.year = ( select min ( year ) from movie )
select title from movie where year = ( select max ( year ) from movie )
select title from movie where year = ( select max ( year ) from movie )
select max ( t1.stars ) , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.year = ( select max ( year ) from movie )
select max ( t1.stars ) , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.year = ( select max ( year ) from movie )
select title from movie where year > ( select max ( year ) from movie where director = `` steven spielberg '' )
select title from movie where year > ( select max ( year ) from movie where director = `` steven spielberg '' )
select t2.title , t2.director from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars > ( select avg ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.director = `` james cameron '' )
select t2.title , t2.director from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars > ( select avg ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.director = `` james cameron '' )
select t3.name , t2.title , t1.stars , t1.ratingdate from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid order by t3.name , t2.title , t1.stars
select t3.name , t2.title , t1.stars , t1.ratingdate from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid order by t3.name , t2.title , t1.stars
select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid group by t1.rid having count ( * ) > = 3
select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid group by t1.rid having count ( * ) > = 3
select distinct t3.name from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t2.title = 'gone with the wind '
select distinct t3.name from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t2.title = 'gone with the wind '
select distinct t2.director from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t3.name = 'sarah martinez '
select distinct t2.director from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t3.name = 'sarah martinez '
select distinct t3.name , t2.title , t1.stars from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t2.director = t3.name
select distinct t3.name , t2.title , t1.stars from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t2.director = t3.name
select name from reviewer union select title from movie
select name from reviewer union select title from movie
select distinct title from movie except select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t3.name = 'chris jackson '
select distinct title from movie except select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t3.name = 'chris jackson '
select t1.title , t1.director from movie as t1 join movie as t2 on t1.director = t2.director where t1.title ! = t2.title order by t1.director , t1.title
select t1.title , t1.director from movie as t1 join movie as t2 on t1.director = t2.director where t1.title ! = t2.title order by t1.director , t1.title
select t1.title , t1.year from movie as t1 join movie as t2 on t1.director = t2.director where t1.title ! = t2.title
select t1.title , t1.year from movie as t1 join movie as t2 on t1.director = t2.director where t1.title ! = t2.title
select director from movie group by director having count ( * ) = 1
select director from movie group by director having count ( * ) = 1
select director from movie where director ! = `` null '' group by director having count ( * ) = 1
select director from movie where director ! = `` null '' group by director having count ( * ) = 1
select count ( * ) , t1.director from movie as t1 join rating as t2 on t1.mid = t2.mid group by t1.director
select count ( * ) , t1.director from movie as t1 join rating as t2 on t1.mid = t2.mid group by t1.director
select t2.title , avg ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg ( t1.stars ) desc limit 1
select t2.title , avg ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg ( t1.stars ) desc limit 1
select t2.title , avg ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg ( t1.stars ) limit 1
select t2.title , avg ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg ( t1.stars ) limit 1
select t2.title , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid order by t1.stars desc limit 3
select t2.title , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid order by t1.stars desc limit 3
select t2.title , t1.stars , t2.director , max ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid where director ! = `` null '' group by director
select t2.title , t1.stars , t2.director , max ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid where director ! = `` null '' group by director
select t2.title , t1.rid , t1.stars , min ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.rid
select t2.title , t1.rid , t1.stars , min ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.rid
select t2.title , t1.stars , t2.director , min ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t2.director
select t2.title , t1.stars , t2.director , min ( t1.stars ) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t2.director
select t2.title , t1.mid from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by count ( * ) desc limit 1
select t2.title , t1.mid from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by count ( * ) desc limit 1
select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars between 3 and 5
select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars between 3 and 5
select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t1.stars > 3
select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t1.stars > 3
select mid , avg ( stars ) from rating where mid not in ( select t1.mid from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t2.name = `` brittany harris '' ) group by mid
select mid , avg ( stars ) from rating where mid not in ( select t1.mid from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t2.name = `` brittany harris '' ) group by mid
select mid from rating except select t1.mid from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t2.name = `` brittany harris ''
select mid from rating except select t1.mid from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t2.name = `` brittany harris ''
select mid , avg ( stars ) from rating group by mid having count ( * ) > = 2
select mid , avg ( stars ) from rating group by mid having count ( * ) > = 2
select rid from rating except select rid from rating where stars = 4
select rid from rating except select rid from rating where stars = 4
select rid from rating where stars ! = 4
select rid from rating where stars ! = 4
select distinct t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t3.name = 'brittany harris ' or t2.year > 2000
select distinct t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t3.name = 'brittany harris ' or t2.year > 2000
select title from movie where director = `` james cameron '' or year < 1980
select title from movie where director = `` james cameron '' or year < 1980
select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t1.stars = 3 intersect select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t1.stars = 4
select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t1.stars = 3 intersect select t2.name from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t1.stars = 4
select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars = 3 intersect select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars = 4
select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars = 3 intersect select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid where t1.stars = 4
select count ( * ) from county_public_safety
select count ( * ) from county_public_safety
select name from county_public_safety order by population desc
select name from county_public_safety order by population desc
select distinct police_force from county_public_safety where location ! = `` east ''
select distinct police_force from county_public_safety where location ! = `` east ''
select min ( crime_rate ) , max ( crime_rate ) from county_public_safety
select min ( crime_rate ) , max ( crime_rate ) from county_public_safety
select crime_rate from county_public_safety order by police_officers asc
select crime_rate from county_public_safety order by police_officers asc
select name from city order by name asc
select name from city order by name asc
select hispanic from city where black > 10
select hispanic from city where black > 10
select name from county_public_safety order by population desc limit 1
select name from county_public_safety order by population desc limit 1
select name from city order by white desc limit 5
select name from city order by white desc limit 5
select t1.name , t2.name from city as t1 join county_public_safety as t2 on t1.county_id = t2.county_id
select t1.name , t2.name from city as t1 join county_public_safety as t2 on t1.county_id = t2.county_id
select t1.white , t2.crime_rate from city as t1 join county_public_safety as t2 on t1.county_id = t2.county_id
select t1.white , t2.crime_rate from city as t1 join county_public_safety as t2 on t1.county_id = t2.county_id
select name from city where county_id = ( select county_id from county_public_safety order by police_officers desc limit 1 )
select name from city where county_id = ( select county_id from county_public_safety order by police_officers desc limit 1 )
select count ( * ) from city where county_id in ( select county_id from county_public_safety where population > 20000 )
select count ( * ) from city where county_id in ( select county_id from county_public_safety where population > 20000 )
select t2.crime_rate from city as t1 join county_public_safety as t2 on t1.county_id = t2.county_id where t1.white > 90
select t2.crime_rate from city as t1 join county_public_safety as t2 on t1.county_id = t2.county_id where t1.white > 90
select police_force , count ( * ) from county_public_safety group by police_force
select police_force , count ( * ) from county_public_safety group by police_force
select location from county_public_safety group by location order by count ( * ) desc limit 1
select location from county_public_safety group by location order by count ( * ) desc limit 1
select name from county_public_safety where county_id not in ( select county_id from city )
select name from county_public_safety where county_id not in ( select county_id from city )
select police_force from county_public_safety where location = `` east '' intersect select police_force from county_public_safety where location = `` west ''
select police_force from county_public_safety where location = `` east '' intersect select police_force from county_public_safety where location = `` west ''
select name from city where county_id in ( select county_id from county_public_safety where crime_rate < 100 )
select name from city where county_id in ( select county_id from county_public_safety where crime_rate < 100 )
select case_burden from county_public_safety order by population desc
select case_burden from county_public_safety order by population desc
select roomname from rooms where baseprice < 160 and beds = 2 and decor = 'modern ' ;
select roomname from rooms where baseprice < 160 and beds = 2 and decor = 'modern ' ;
select roomname , roomid from rooms where baseprice > 160 and maxoccupancy > 2 ;
select roomname , roomid from rooms where baseprice > 160 and maxoccupancy > 2 ;
select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by count ( * ) desc limit 1 ;
select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by count ( * ) desc limit 1 ;
select kids from reservations where firstname = `` roy '' and lastname = `` sweazy '' ;
select kids from reservations where firstname = `` roy '' and lastname = `` sweazy '' ;
select count ( * ) from reservations where firstname = `` roy '' and lastname = `` sweazy '' ;
select count ( * ) from reservations where firstname = `` roy '' and lastname = `` sweazy '' ;
select t2.roomname , t1.rate , t1.checkin , t1.checkout from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by t1.rate desc limit 1 ;
select t2.roomname , t1.rate , t1.checkin , t1.checkout from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by t1.rate desc limit 1 ;
select adults from reservations where checkin = `` 2010-10-23 '' and firstname = `` conrad '' and lastname = `` selbig '' ;
select adults from reservations where checkin = `` 2010-10-23 '' and firstname = `` conrad '' and lastname = `` selbig '' ;
select kids from reservations where checkin = `` 2010-09-21 '' and firstname = `` damien '' and lastname = `` trachsel '' ;
select kids from reservations where checkin = `` 2010-09-21 '' and firstname = `` damien '' and lastname = `` trachsel '' ;
select sum ( beds ) from rooms where bedtype = 'king ' ;
select sum ( beds ) from rooms where bedtype = 'king ' ;
select roomname , decor from rooms where bedtype = 'king ' order by baseprice ;
select roomname , decor from rooms where bedtype = 'king ' order by baseprice ;
select roomname , baseprice from rooms order by baseprice asc limit 1 ;
select roomname , baseprice from rooms order by baseprice asc limit 1 ;
select decor from rooms where roomname = `` recluse and defiance '' ;
select decor from rooms where roomname = `` recluse and defiance '' ;
select bedtype , avg ( baseprice ) from rooms group by bedtype ;
select bedtype , avg ( baseprice ) from rooms group by bedtype ;
select sum ( maxoccupancy ) from rooms where decor = 'modern ' ;
select sum ( maxoccupancy ) from rooms where decor = 'modern ' ;
select t2.decor from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t2.decor order by count ( t2.decor ) asc limit 1 ;
select t2.decor from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t2.decor order by count ( t2.decor ) asc limit 1 ;
select count ( * ) from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t2.maxoccupancy = t1.adults + t1.kids ;
select count ( * ) from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t2.maxoccupancy = t1.adults + t1.kids ;
select t1.firstname , t1.lastname from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t1.rate - t2.baseprice > 0
select t1.firstname , t1.lastname from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t1.rate - t2.baseprice > 0
select count ( * ) from rooms ;
select count ( * ) from rooms ;
select count ( * ) from rooms where bedtype = `` king '' ;
select count ( * ) from rooms where bedtype = `` king '' ;
select bedtype , count ( * ) from rooms group by bedtype ;
select bedtype , count ( * ) from rooms group by bedtype ;
select roomname from rooms order by maxoccupancy desc limit 1 ;
select roomname from rooms order by maxoccupancy desc limit 1 ;
select roomid , roomname from rooms order by baseprice desc limit 1 ;
select roomid , roomname from rooms order by baseprice desc limit 1 ;
select roomname , bedtype from rooms where decor = `` traditional '' ;
select roomname , bedtype from rooms where decor = `` traditional '' ;
select decor , count ( * ) from rooms where bedtype = `` king '' group by decor ;
select decor , count ( * ) from rooms where bedtype = `` king '' group by decor ;
select decor , avg ( baseprice ) , min ( baseprice ) from rooms group by decor ;
select decor , avg ( baseprice ) , min ( baseprice ) from rooms group by decor ;
select roomname from rooms order by baseprice ;
select roomname from rooms order by baseprice ;
select decor , count ( * ) from rooms where baseprice > 120 group by decor ;
select decor , count ( * ) from rooms where baseprice > 120 group by decor ;
select bedtype , avg ( baseprice ) from rooms group by bedtype ;
select bedtype , avg ( baseprice ) from rooms group by bedtype ;
select roomname from rooms where bedtype = `` king '' or bedtype = `` queen '' ;
select roomname from rooms where bedtype = `` king '' or bedtype = `` queen '' ;
select count ( distinct bedtype ) from rooms ;
select count ( distinct bedtype ) from rooms ;
select roomid , roomname from rooms order by baseprice desc limit 3 ;
select roomid , roomname from rooms order by baseprice desc limit 3 ;
select roomname from rooms where baseprice > ( select avg ( baseprice ) from rooms ) ;
select roomname from rooms where baseprice > ( select avg ( baseprice ) from rooms ) ;
select count ( * ) from rooms where roomid not in ( select distinct room from reservations )
select count ( * ) from rooms where roomid not in ( select distinct room from reservations )
select t2.roomname , count ( * ) , t1.room from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room
select t2.roomname , count ( * ) , t1.room from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room
select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room having count ( * ) > 60
select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room having count ( * ) > 60
select roomname from rooms where baseprice between 120 and 150
select roomname from rooms where baseprice between 120 and 150
select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid where firstname like ' % roy % '
select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid where firstname like ' % roy % '
select t1.cmi_details from customer_master_index as t1 join cmi_cross_references as t2 on t1.master_customer_id = t2.master_customer_id where t2.source_system_code = 'tax '
select t1.cmi_cross_ref_id , t1.source_system_code from cmi_cross_references as t1 join council_tax as t2 on t1.cmi_cross_ref_id = t2.cmi_cross_ref_id group by t1.cmi_cross_ref_id having count ( * ) > = 1
select t2.cmi_cross_ref_id , t2.master_customer_id , count ( * ) from business_rates as t1 join cmi_cross_references as t2 on t1.cmi_cross_ref_id = t2.cmi_cross_ref_id group by t2.cmi_cross_ref_id
select t1.source_system_code , t2.council_tax_id from cmi_cross_references as t1 join benefits_overpayments as t2 on t1.cmi_cross_ref_id = t2.cmi_cross_ref_id order by t2.council_tax_id
select t1.source_system_code , t1.master_customer_id , t2.council_tax_id from cmi_cross_references as t1 join parking_fines as t2 on t1.cmi_cross_ref_id = t2.cmi_cross_ref_id
select t1.council_tax_id from rent_arrears as t1 join cmi_cross_references as t2 on t1.cmi_cross_ref_id = t2.cmi_cross_ref_id join customer_master_index as t3 on t3.master_customer_id = t2.master_customer_id where t3.cmi_details ! = 'schmidt , kertzmann and lubowitz '
select t1.electoral_register_id from electoral_register as t1 join cmi_cross_references as t2 on t1.cmi_cross_ref_id = t2.cmi_cross_ref_id where t2.source_system_code = 'electoral ' or t2.source_system_code = 'tax '
select count ( distinct source_system_code ) from cmi_cross_references
select * from customer_master_index order by cmi_details desc
select council_tax_id , cmi_cross_ref_id from parking_fines
select count ( * ) from rent_arrears
select distinct t2.source_system_code from customer_master_index as t1 join cmi_cross_references as t2 on t1.master_customer_id = t2.master_customer_id where t1.cmi_details = 'gottlieb , becker and wyman '
select cmi_cross_ref_id from cmi_cross_references except select cmi_cross_ref_id from parking_fines
select distinct source_system_code from cmi_cross_references where source_system_code like ' % en % '
select count ( * ) from party
select count ( * ) from party
select party_theme from party order by number_of_hosts asc
select party_theme from party order by number_of_hosts asc
select party_theme , location from party
select party_theme , location from party
select first_year , last_year from party where party_theme = `` spring '' or party_theme = `` teqnology ''
select first_year , last_year from party where party_theme = `` spring '' or party_theme = `` teqnology ''
select avg ( number_of_hosts ) from party
select avg ( number_of_hosts ) from party
select location from party order by number_of_hosts desc limit 1
select location from party order by number_of_hosts desc limit 1
select nationality , count ( * ) from host group by nationality
select nationality , count ( * ) from host group by nationality
select nationality from host group by nationality order by count ( * ) desc limit 1
select nationality from host group by nationality order by count ( * ) desc limit 1
select nationality from host where age > 45 intersect select nationality from host where age < 35
select nationality from host where age > 45 intersect select nationality from host where age < 35
select t3.party_theme , t2.name from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id
select t3.party_theme , t2.name from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id
select t3.location , t2.name from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id order by t2.age
select t3.location , t2.name from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id order by t2.age
select t3.location from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id where t2.age > 50
select t3.location from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id where t2.age > 50
select t2.name from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id where t3.number_of_hosts > 20
select t2.name from party_host as t1 join host as t2 on t1.host_id = t2.host_id join party as t3 on t1.party_id = t3.party_id where t3.number_of_hosts > 20
select name , nationality from host order by age desc limit 1
select name , nationality from host order by age desc limit 1
select name from host where host_id not in ( select host_id from party_host )
select name from host where host_id not in ( select host_id from party_host )
select count ( * ) from region
select count ( * ) from region
select region_code , region_name from region order by region_code
select region_code , region_name from region order by region_code
select region_name from region order by region_name
select region_name from region order by region_name
select region_name from region where region_name ! = 'denmark '
select region_name from region where region_name ! = 'denmark '
select count ( * ) from storm where number_deaths > 0
select count ( * ) from storm where number_deaths > 0
select name , dates_active , number_deaths from storm where number_deaths > = 1
select name , dates_active , number_deaths from storm where number_deaths > = 1
select avg ( damage_millions_usd ) , max ( damage_millions_usd ) from storm where max_speed > 1000
select avg ( damage_millions_usd ) , max ( damage_millions_usd ) from storm where max_speed > 1000
select sum ( number_deaths ) , sum ( damage_millions_usd ) from storm where max_speed > ( select avg ( max_speed ) from storm )
select sum ( number_deaths ) , sum ( damage_millions_usd ) from storm where max_speed > ( select avg ( max_speed ) from storm )
select name , damage_millions_usd from storm order by max_speed desc
select name , damage_millions_usd from storm order by max_speed desc
select count ( distinct region_id ) from affected_region
select count ( distinct region_id ) from affected_region
select region_name from region where region_id not in ( select region_id from affected_region )
select region_name from region where region_id not in ( select region_id from affected_region )
select t1.region_name , count ( * ) from region as t1 join affected_region as t2 on t1.region_id = t2.region_id group by t1.region_id
select t1.region_name , count ( * ) from region as t1 join affected_region as t2 on t1.region_id = t2.region_id group by t1.region_id
select t1.name , count ( * ) from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id
select t1.name , count ( * ) from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id
select t1.name , t1.max_speed from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id order by count ( * ) desc limit 1
select t1.name , t1.max_speed from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id order by count ( * ) desc limit 1
select name from storm where storm_id not in ( select storm_id from affected_region )
select name from storm where storm_id not in ( select storm_id from affected_region )
select t1.name from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id having count ( * ) > = 2 intersect select t1.name from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id having sum ( t2.number_city_affected ) > = 10
select t1.name from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id having count ( * ) > = 2 intersect select t1.name from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id having sum ( t2.number_city_affected ) > = 10
select name from storm except select t1.name from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id having count ( * ) > = 2
select name from storm except select t1.name from storm as t1 join affected_region as t2 on t1.storm_id = t2.storm_id group by t1.storm_id having count ( * ) > = 2
select t2.region_name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t3.number_deaths > = 10
select t2.region_name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t3.number_deaths > = 10
select t3.name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t2.region_name = 'denmark '
select t3.name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t2.region_name = 'denmark '
select t1.region_name from region as t1 join affected_region as t2 on t1.region_id = t2.region_id group by t1.region_id having count ( * ) > = 2
select t1.region_name from region as t1 join affected_region as t2 on t1.region_id = t2.region_id group by t1.region_id having count ( * ) > = 2
select t2.region_name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id order by t3.number_deaths desc limit 1
select t2.region_name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id order by t3.number_deaths desc limit 1
select t3.name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t2.region_name = 'afghanistan ' intersect select t3.name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t2.region_name = 'albania '
select t3.name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t2.region_name = 'afghanistan ' intersect select t3.name from affected_region as t1 join region as t2 on t1.region_id = t2.region_id join storm as t3 on t1.storm_id = t3.storm_id where t2.region_name = 'albania '
select count ( * ) from county
select count ( * ) from county
select county_name , population from county
select county_name , population from county
select avg ( population ) from county
select avg ( population ) from county
select max ( population ) , min ( population ) from county
select max ( population ) , min ( population ) from county
select distinct district from election
select distinct district from election
select zip_code from county where county_name = `` howard ''
select zip_code from county where county_name = `` howard ''
select delegate from election where district = 1
select delegate from election where district = 1
select delegate , committee from election
select delegate , committee from election
select count ( distinct governor ) from party
select count ( distinct governor ) from party
select lieutenant_governor , comptroller from party where party = `` democratic ''
select lieutenant_governor , comptroller from party where party = `` democratic ''
select distinct year from party where governor = `` eliot spitzer ''
select distinct year from party where governor = `` eliot spitzer ''
select * from election
select * from election
select t2.delegate , t1.county_name from county as t1 join election as t2 on t1.county_id = t2.district
select t2.delegate , t1.county_name from county as t1 join election as t2 on t1.county_id = t2.district
select t2.delegate from county as t1 join election as t2 on t1.county_id = t2.district where t1.population < 100000
select t2.delegate from county as t1 join election as t2 on t1.county_id = t2.district where t1.population < 100000
select count ( distinct t2.delegate ) from county as t1 join election as t2 on t1.county_id = t2.district where t1.population > 50000
select count ( distinct t2.delegate ) from county as t1 join election as t2 on t1.county_id = t2.district where t1.population > 50000
select t1.county_name from county as t1 join election as t2 on t1.county_id = t2.district where t2.committee = `` appropriations ''
select t1.county_name from county as t1 join election as t2 on t1.county_id = t2.district where t2.committee = `` appropriations ''
select t1.delegate , t2.party from election as t1 join party as t2 on t1.party = t2.party_id
select t1.delegate , t2.party from election as t1 join party as t2 on t1.party = t2.party_id
select t2.governor from election as t1 join party as t2 on t1.party = t2.party_id where t1.district = 1
select t2.governor from election as t1 join party as t2 on t1.party = t2.party_id where t1.district = 1
select t2.comptroller from election as t1 join party as t2 on t1.party = t2.party_id where t1.district = 1 or t1.district = 2
select t2.comptroller from election as t1 join party as t2 on t1.party = t2.party_id where t1.district = 1 or t1.district = 2
select t1.committee from election as t1 join party as t2 on t1.party = t2.party_id where t2.party = `` democratic ''
select t1.committee from election as t1 join party as t2 on t1.party = t2.party_id where t2.party = `` democratic ''
select t1.county_name , count ( * ) from county as t1 join election as t2 on t1.county_id = t2.district group by t1.county_id
select t1.county_name , count ( * ) from county as t1 join election as t2 on t1.county_id = t2.district group by t1.county_id
select t2.party , count ( * ) from election as t1 join party as t2 on t1.party = t2.party_id group by t1.party
select t2.party , count ( * ) from election as t1 join party as t2 on t1.party = t2.party_id group by t1.party
select county_name from county order by population asc
select county_name from county order by population asc
select county_name from county order by county_name desc
select county_name from county order by county_name desc
select county_name from county order by population desc limit 1
select county_name from county order by population desc limit 1
select county_name from county order by population asc limit 3
select county_name from county order by population asc limit 3
select t1.county_name from county as t1 join election as t2 on t1.county_id = t2.district group by t1.county_id having count ( * ) > = 2
select t1.county_name from county as t1 join election as t2 on t1.county_id = t2.district group by t1.county_id having count ( * ) > = 2
select party from party group by party having count ( * ) > = 2
select party from party group by party having count ( * ) > = 2
select t2.party from election as t1 join party as t2 on t1.party = t2.party_id group by t1.party order by count ( * ) desc limit 1
select t2.party from election as t1 join party as t2 on t1.party = t2.party_id group by t1.party order by count ( * ) desc limit 1
select governor from party group by governor order by count ( * ) desc limit 1
select governor from party group by governor order by count ( * ) desc limit 1
select comptroller , count ( * ) from party group by comptroller order by count ( * ) desc limit 1
select comptroller , count ( * ) from party group by comptroller order by count ( * ) desc limit 1
select party from party where party_id not in ( select party from election )
select party from party where party_id not in ( select party from election )
select t2.party from election as t1 join party as t2 on t1.party = t2.party_id where t1.committee = `` appropriations '' intersect select t2.party from election as t1 join party as t2 on t1.party = t2.party_id where t1.committee = `` economic matters ''
select t2.party from election as t1 join party as t2 on t1.party = t2.party_id where t1.committee = `` appropriations '' intersect select t2.party from election as t1 join party as t2 on t1.party = t2.party_id where t1.committee = `` economic matters ''
select t1.committee from election as t1 join party as t2 on t1.party = t2.party_id where t2.party = `` democratic '' intersect select t1.committee from election as t1 join party as t2 on t1.party = t2.party_id where t2.party = `` liberal ''
select t1.committee from election as t1 join party as t2 on t1.party = t2.party_id where t2.party = `` democratic '' intersect select t1.committee from election as t1 join party as t2 on t1.party = t2.party_id where t2.party = `` liberal ''
select count ( * ) from journalist
select name from journalist order by years_working asc
select nationality , age from journalist
select name from journalist where nationality = `` england '' or nationality = `` wales ''
select avg ( years_working ) from journalist
select nationality from journalist order by years_working desc limit 1
select nationality , count ( * ) from journalist group by nationality
select nationality from journalist group by nationality order by count ( * ) desc limit 1
select nationality from journalist where years_working > 10 intersect select nationality from journalist where years_working < 3
select date , name , venue from event order by event_attendance desc
select t3.name , t2.date from news_report as t1 join event as t2 on t1.event_id = t2.event_id join journalist as t3 on t1.journalist_id = t3.journalist_id
select t3.name , t2.name from news_report as t1 join event as t2 on t1.event_id = t2.event_id join journalist as t3 on t1.journalist_id = t3.journalist_id order by t2.event_attendance asc
select t3.name , count ( * ) from news_report as t1 join event as t2 on t1.event_id = t2.event_id join journalist as t3 on t1.journalist_id = t3.journalist_id group by t3.name
select t3.name from news_report as t1 join event as t2 on t1.event_id = t2.event_id join journalist as t3 on t1.journalist_id = t3.journalist_id group by t3.name having count ( * ) > 1
select name from journalist where journalist_id not in ( select journalist_id from news_report )
select avg ( event_attendance ) , max ( event_attendance ) from event
select avg ( t1.age ) , avg ( years_working ) , t2.work_type from journalist as t1 join news_report as t2 on t1.journalist_id = t2.journalist_id group by t2.work_type
select venue , name from event order by event_attendance desc limit 2
select resname from restaurant ;
select address from restaurant where resname = `` subway '' ;
select rating from restaurant where resname = `` subway '' ;
select restypename from restaurant_type ;
select restypedescription from restaurant_type where restypename = `` sandwich '' ;
select resname , rating from restaurant order by rating desc limit 1 ;
select age from student where fname = `` linda '' and lname = `` smith '' ;
select sex from student where fname = `` linda '' and lname = `` smith '' ;
select fname , lname from student where major = 600 ;
select city_code from student where fname = `` linda '' and lname = `` smith '' ;
select count ( * ) from student where advisor = 1121 ;
select advisor , count ( * ) from student group by advisor order by count ( advisor ) desc limit 1 ;
select major , count ( * ) from student group by major order by count ( major ) asc limit 1 ;
select major , count ( * ) from student group by major having count ( major ) between 2 and 30 ;
select fname , lname from student where age > 18 and major = 600 ;
select fname , lname from student where age > 18 and major ! = 600 and sex = 'f ' ;
select count ( * ) from restaurant join type_of_restaurant on restaurant.resid = type_of_restaurant.resid join restaurant_type on type_of_restaurant.restypeid = restaurant_type.restypeid group by type_of_restaurant.restypeid having restaurant_type.restypename = 'sandwich '
select sum ( spent ) from student join visits_restaurant on student.stuid = visits_restaurant.stuid where student.fname = `` linda '' and student.lname = `` smith '' ;
select count ( * ) from student join visits_restaurant on student.stuid = visits_restaurant.stuid join restaurant on visits_restaurant.resid = restaurant.resid where student.fname = `` linda '' and student.lname = `` smith '' and restaurant.resname = `` subway '' ;
select time from student join visits_restaurant on student.stuid = visits_restaurant.stuid join restaurant on visits_restaurant.resid = restaurant.resid where student.fname = `` linda '' and student.lname = `` smith '' and restaurant.resname = `` subway '' ;
select restaurant.resname , sum ( visits_restaurant.spent ) from visits_restaurant join restaurant on visits_restaurant.resid = restaurant.resid group by restaurant.resid order by sum ( visits_restaurant.spent ) asc limit 1 ;
select student.fname , student.lname from student join visits_restaurant on student.stuid = visits_restaurant.stuid group by student.stuid order by count ( * ) desc limit 1 ;
select actual_order_id from actual_orders where order_status_code = 'success '
select t1.product_name , t1.product_price from products as t1 join regular_order_products as t2 on t1.product_id = t2.product_id group by t2.product_id order by count ( * ) desc limit 1
select count ( * ) from customers
select count ( distinct payment_method ) from customers
select truck_details from trucks order by truck_licence_number
select product_name from products order by product_price desc limit 1
select customer_name from customers except select t1.customer_name from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.state_province_county = 'california '
select customer_email , customer_name from customers where payment_method = 'visa '
select t1.customer_name , t1.customer_phone from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.state_province_county = 'california '
select state_province_county from addresses where address_id not in ( select employee_address_id from employees )
select customer_name , customer_phone , customer_email from customers order by date_became_customer
select customer_name from customers order by date_became_customer limit 5
select payment_method from customers group by payment_method order by count ( * ) desc limit 1
select route_name from delivery_routes order by route_name
select t1.route_name from delivery_routes as t1 join delivery_route_locations as t2 on t1.route_id = t2.route_id group by t1.route_id order by count ( * ) desc limit 1
select t2.state_province_county , count ( * ) from customer_addresses as t1 join addresses as t2 on t1.address_id = t2.address_id group by t2.state_province_county
select count ( * ) from authors
select count ( * ) from authors
select count ( * ) from inst
select count ( * ) from inst
select count ( * ) from papers
select count ( * ) from papers
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` jeremy '' and t1.lname = `` gibbons ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` jeremy '' and t1.lname = `` gibbons ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` aaron '' and t1.lname = `` turon ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` aaron '' and t1.lname = `` turon ''
select count ( * ) from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` atsushi '' and t1.lname = `` ohori ''
select count ( * ) from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` atsushi '' and t1.lname = `` ohori ''
select distinct t3.name from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t1.fname = `` matthias '' and t1.lname = `` blume ''
select distinct t3.name from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t1.fname = `` matthias '' and t1.lname = `` blume ''
select distinct t3.name from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t1.fname = `` katsuhiro '' and t1.lname = `` ueno ''
select distinct t3.name from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t1.fname = `` katsuhiro '' and t1.lname = `` ueno ''
select distinct t1.fname , t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t3.name = `` university of oxford ''
select distinct t1.fname , t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t3.name = `` university of oxford ''
select distinct t1.fname , t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t3.name = `` google ''
select distinct t1.fname , t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join inst as t3 on t2.instid = t3.instid where t3.name = `` google ''
select t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title = `` binders unbound ''
select t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title = `` binders unbound ''
select t1.fname , t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title = `` nameless , painless ''
select t1.fname , t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title = `` nameless , painless ''
select distinct t1.title from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` indiana university ''
select distinct t1.title from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` indiana university ''
select distinct t1.title from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` google ''
select distinct t1.title from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` google ''
select count ( distinct t1.title ) from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` tokohu university ''
select count ( distinct t1.title ) from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` tokohu university ''
select count ( distinct t1.title ) from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` university of pennsylvania ''
select count ( distinct t1.title ) from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = `` university of pennsylvania ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` olin '' and t1.lname = `` shivers ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` olin '' and t1.lname = `` shivers ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` stephanie '' and t1.lname = `` weirich ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = `` stephanie '' and t1.lname = `` weirich ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid join inst as t4 on t2.instid = t4.instid where t4.country = `` usa '' and t2.authorder = 2 and t1.lname = `` turon ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid join inst as t4 on t2.instid = t4.instid where t4.country = `` usa '' and t2.authorder = 2 and t1.lname = `` turon ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid join inst as t4 on t2.instid = t4.instid where t4.country = `` japan '' and t2.authorder = 1 and t1.lname = `` ohori ''
select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid join inst as t4 on t2.instid = t4.instid where t4.country = `` japan '' and t2.authorder = 1 and t1.lname = `` ohori ''
select t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid group by t1.fname , t1.lname order by count ( * ) desc limit 1
select t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid group by t1.fname , t1.lname order by count ( * ) desc limit 1
select t1.country from inst as t1 join authorship as t2 on t1.instid = t2.instid join papers as t3 on t2.paperid = t3.paperid group by t1.country order by count ( * ) desc limit 1
select t1.country from inst as t1 join authorship as t2 on t1.instid = t2.instid join papers as t3 on t2.paperid = t3.paperid group by t1.country order by count ( * ) desc limit 1
select t1.name from inst as t1 join authorship as t2 on t1.instid = t2.instid join papers as t3 on t2.paperid = t3.paperid group by t1.name order by count ( * ) desc limit 1
select t1.name from inst as t1 join authorship as t2 on t1.instid = t2.instid join papers as t3 on t2.paperid = t3.paperid group by t1.name order by count ( * ) desc limit 1
select title from papers where title like `` % ml % ''
select title from papers where title like `` % ml % ''
select title from papers where title like `` % database % ''
select title from papers where title like `` % database % ''
select t1.fname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title like `` % functional % ''
select t1.fname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title like `` % functional % ''
select t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title like `` % monadic % ''
select t1.lname from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t3.title like `` % monadic % ''
select t2.title from authorship as t1 join papers as t2 on t1.paperid = t2.paperid where t1.authorder = ( select max ( authorder ) from authorship )
select t2.title from authorship as t1 join papers as t2 on t1.paperid = t2.paperid where t1.authorder = ( select max ( authorder ) from authorship )
select fname from authors where lname = `` ueno ''
select fname from authors where lname = `` ueno ''
select lname from authors where fname = `` amal ''
select lname from authors where fname = `` amal ''
select fname from authors order by fname
select fname from authors order by fname
select lname from authors order by lname
select lname from authors order by lname
select fname , lname from authors order by lname
select fname , lname from authors order by lname
select count ( distinct last_name ) from actor
select count ( distinct last_name ) from actor
select first_name from actor group by first_name order by count ( * ) desc limit 1
select first_name from actor group by first_name order by count ( * ) desc limit 1
select first_name , last_name from actor group by first_name , last_name order by count ( * ) desc limit 1
select first_name , last_name from actor group by first_name , last_name order by count ( * ) desc limit 1
select district from address group by district having count ( * ) > = 2
select district from address group by district having count ( * ) > = 2
select phone , postal_code from address where address = '1031 daugavpils parkway '
select phone , postal_code from address where address = '1031 daugavpils parkway '
select t2.city , count ( * ) , t1.city_id from address as t1 join city as t2 on t1.city_id = t2.city_id group by t1.city_id order by count ( * ) desc limit 1
select t2.city , count ( * ) , t1.city_id from address as t1 join city as t2 on t1.city_id = t2.city_id group by t1.city_id order by count ( * ) desc limit 1
select count ( * ) from address where district = 'california '
select count ( * ) from address where district = 'california '
select title , film_id from film where rental_rate = 0.99 intersect select t1.title , t1.film_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id group by t1.film_id having count ( * ) < 3
select title , film_id from film where rental_rate = 0.99 intersect select t1.title , t1.film_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id group by t1.film_id having count ( * ) < 3
select count ( * ) from city as t1 join country as t2 on t1.country_id = t2.country_id where t2.country = 'australia '
select count ( * ) from city as t1 join country as t2 on t1.country_id = t2.country_id where t2.country = 'australia '
select t2.country from city as t1 join country as t2 on t1.country_id = t2.country_id group by t2.country_id having count ( * ) > = 3
select t2.country from city as t1 join country as t2 on t1.country_id = t2.country_id group by t2.country_id having count ( * ) > = 3
select payment_date from payment where amount > 10 union select t1.payment_date from payment as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = 'elsa '
select payment_date from payment where amount > 10 union select t1.payment_date from payment as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = 'elsa '
select count ( * ) from customer where active = '1 '
select count ( * ) from customer where active = '1 '
select title , rental_rate from film order by rental_rate desc limit 1
select title , rental_rate from film order by rental_rate desc limit 1
select t2.title , t2.film_id , t2.description from film_actor as t1 join film as t2 on t1.film_id = t2.film_id group by t2.film_id order by count ( * ) desc limit 1
select t2.title , t2.film_id , t2.description from film_actor as t1 join film as t2 on t1.film_id = t2.film_id group by t2.film_id order by count ( * ) desc limit 1
select t2.first_name , t2.last_name , t2.actor_id from film_actor as t1 join actor as t2 on t1.actor_id = t2.actor_id group by t2.actor_id order by count ( * ) desc limit 1
select t2.first_name , t2.last_name , t2.actor_id from film_actor as t1 join actor as t2 on t1.actor_id = t2.actor_id group by t2.actor_id order by count ( * ) desc limit 1
select t2.first_name , t2.last_name from film_actor as t1 join actor as t2 on t1.actor_id = t2.actor_id group by t2.actor_id having count ( * ) > 30
select t2.first_name , t2.last_name from film_actor as t1 join actor as t2 on t1.actor_id = t2.actor_id group by t2.actor_id having count ( * ) > 30
select store_id from inventory group by store_id order by count ( * ) desc limit 1
select store_id from inventory group by store_id order by count ( * ) desc limit 1
select sum ( amount ) from payment
select sum ( amount ) from payment
select t1.first_name , t1.last_name , t1.customer_id from customer as t1 join payment as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by sum ( amount ) asc limit 1
select t1.first_name , t1.last_name , t1.customer_id from customer as t1 join payment as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by sum ( amount ) asc limit 1
select t1.name from category as t1 join film_category as t2 on t1.category_id = t2.category_id join film as t3 on t2.film_id = t3.film_id where t3.title = 'hunger roof '
select t1.name from category as t1 join film_category as t2 on t1.category_id = t2.category_id join film as t3 on t2.film_id = t3.film_id where t3.title = 'hunger roof '
select t2.name , t1.category_id , count ( * ) from film_category as t1 join category as t2 on t1.category_id = t2.category_id group by t1.category_id
select t2.name , t1.category_id , count ( * ) from film_category as t1 join category as t2 on t1.category_id = t2.category_id group by t1.category_id
select t1.title , t1.film_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id group by t1.film_id order by count ( * ) desc limit 1
select t1.title , t1.film_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id group by t1.film_id order by count ( * ) desc limit 1
select t1.title , t2.inventory_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id join rental as t3 on t2.inventory_id = t3.inventory_id group by t2.inventory_id order by count ( * ) desc limit 1
select t1.title , t2.inventory_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id join rental as t3 on t2.inventory_id = t3.inventory_id group by t2.inventory_id order by count ( * ) desc limit 1
select count ( distinct language_id ) from film
select count ( distinct language_id ) from film
select title from film where rating = 'r '
select title from film where rating = 'r '
select t2.address from store as t1 join address as t2 on t1.address_id = t2.address_id where store_id = 1
select t2.address from store as t1 join address as t2 on t1.address_id = t2.address_id where store_id = 1
select t1.first_name , t1.last_name , t1.staff_id from staff as t1 join payment as t2 on t1.staff_id = t2.staff_id group by t1.staff_id order by count ( * ) asc limit 1
select t1.first_name , t1.last_name , t1.staff_id from staff as t1 join payment as t2 on t1.staff_id = t2.staff_id group by t1.staff_id order by count ( * ) asc limit 1
select t2.name from film as t1 join language as t2 on t1.language_id = t2.language_id where t1.title = 'airport pollock '
select t2.name from film as t1 join language as t2 on t1.language_id = t2.language_id where t1.title = 'airport pollock '
select count ( * ) from store
select count ( * ) from store
select count ( distinct rating ) from film
select count ( distinct rating ) from film
select title from film where special_features like ' % deleted scenes % '
select title from film where special_features like ' % deleted scenes % '
select count ( * ) from inventory where store_id = 1
select count ( * ) from inventory where store_id = 1
select payment_date from payment order by payment_date asc limit 1
select payment_date from payment order by payment_date asc limit 1
select t2.address , t1.email from customer as t1 join address as t2 on t2.address_id = t1.address_id where t1.first_name = 'linda '
select t2.address , t1.email from customer as t1 join address as t2 on t2.address_id = t1.address_id where t1.first_name = 'linda '
select title from film where length > 100 or rating = 'pg ' except select title from film where replacement_cost > 200
select title from film where length > 100 or rating = 'pg ' except select title from film where replacement_cost > 200
select t1.first_name , t1.last_name from customer as t1 join rental as t2 on t1.customer_id = t2.customer_id order by t2.rental_date asc limit 1
select t1.first_name , t1.last_name from customer as t1 join rental as t2 on t1.customer_id = t2.customer_id order by t2.rental_date asc limit 1
select distinct t1.first_name , t1.last_name from staff as t1 join rental as t2 on t1.staff_id = t2.staff_id join customer as t3 on t2.customer_id = t3.customer_id where t3.first_name = 'april ' and t3.last_name = 'burns '
select distinct t1.first_name , t1.last_name from staff as t1 join rental as t2 on t1.staff_id = t2.staff_id join customer as t3 on t2.customer_id = t3.customer_id where t3.first_name = 'april ' and t3.last_name = 'burns '
select store_id from customer group by store_id order by count ( * ) desc limit 1
select store_id from customer group by store_id order by count ( * ) desc limit 1
select amount from payment order by amount desc limit 1
select amount from payment order by amount desc limit 1
select t2.address from staff as t1 join address as t2 on t1.address_id = t2.address_id where t1.first_name = 'elsa '
select t2.address from staff as t1 join address as t2 on t1.address_id = t2.address_id where t1.first_name = 'elsa '
select first_name from customer where customer_id not in ( select customer_id from rental where rental_date > '2005-08-23 02:06:01 ' )
select first_name from customer where customer_id not in ( select customer_id from rental where rental_date > '2005-08-23 02:06:01 ' )
select count ( * ) from bank
select count ( * ) from bank
select sum ( no_of_customers ) from bank
select sum ( no_of_customers ) from bank
select sum ( no_of_customers ) from bank where city = 'new york city '
select sum ( no_of_customers ) from bank where city = 'new york city '
select avg ( no_of_customers ) from bank where state = 'utah '
select avg ( no_of_customers ) from bank where state = 'utah '
select avg ( no_of_customers ) from bank
select avg ( no_of_customers ) from bank
select city , state from bank where bname = 'morningside '
select city , state from bank where bname = 'morningside '
select bname from bank where state = 'new york '
select bname from bank where state = 'new york '
select cust_name from customer order by acc_bal
select cust_name from customer order by acc_bal
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name order by sum ( t2.amount )
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name order by sum ( t2.amount )
select state , acc_type , credit_score from customer where no_of_loans = 0
select state , acc_type , credit_score from customer where no_of_loans = 0
select count ( distinct city ) from bank
select count ( distinct city ) from bank
select count ( distinct state ) from bank
select count ( distinct state ) from bank
select count ( distinct acc_type ) from customer
select count ( distinct acc_type ) from customer
select cust_name , acc_bal from customer where cust_name like ' % a % '
select cust_name , acc_bal from customer where cust_name like ' % a % '
select sum ( acc_bal ) from customer where state = 'utah ' or state = 'texas '
select sum ( acc_bal ) from customer where state = 'utah ' or state = 'texas '
select cust_name from customer where acc_type = 'saving ' intersect select cust_name from customer where acc_type = 'checking '
select cust_name from customer where acc_type = 'saving ' intersect select cust_name from customer where acc_type = 'checking '
select cust_name from customer except select cust_name from customer where acc_type = 'saving '
select cust_name from customer except select cust_name from customer where acc_type = 'saving '
select cust_name from customer except select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where t2.loan_type = 'mortgages '
select cust_name from customer except select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where t2.loan_type = 'mortgages '
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where loan_type = 'mortgages ' intersect select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where loan_type = 'auto '
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where loan_type = 'mortgages ' intersect select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where loan_type = 'auto '
select cust_name from customer where credit_score < ( select avg ( credit_score ) from customer )
select cust_name from customer where credit_score < ( select avg ( credit_score ) from customer )
select bname from bank order by no_of_customers desc limit 1
select bname from bank order by no_of_customers desc limit 1
select cust_name from customer order by credit_score limit 1
select cust_name from customer order by credit_score limit 1
select cust_name , acc_type , acc_bal from customer order by credit_score desc limit 1
select cust_name , acc_type , acc_bal from customer order by credit_score desc limit 1
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name order by sum ( t2.amount ) desc limit 1
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name order by sum ( t2.amount ) desc limit 1
select state from bank group by state order by sum ( no_of_customers ) desc limit 1
select state from bank group by state order by sum ( no_of_customers ) desc limit 1
select avg ( acc_bal ) , acc_type from customer where credit_score < 50 group by acc_type
select avg ( acc_bal ) , acc_type from customer where credit_score < 50 group by acc_type
select sum ( acc_bal ) , state from customer where credit_score > 100 group by state
select sum ( acc_bal ) , state from customer where credit_score > 100 group by state
select sum ( amount ) , t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id group by t1.bname
select sum ( amount ) , t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id group by t1.bname
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name having count ( * ) > 1
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name having count ( * ) > 1
select t1.cust_name , t1.acc_type from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name having sum ( t2.amount ) > 5000
select t1.cust_name , t1.acc_type from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name having sum ( t2.amount ) > 5000
select t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id group by t1.bname order by sum ( t2.amount ) desc limit 1
select t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id group by t1.bname order by sum ( t2.amount ) desc limit 1
select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100 group by t2.bname order by sum ( t1.amount ) desc limit 1
select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100 group by t2.bname order by sum ( t1.amount ) desc limit 1
select distinct t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id
select distinct t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id
select distinct t1.cust_name , t1.credit_score from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id
select distinct t1.cust_name , t1.credit_score from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where amount > 3000
select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where amount > 3000
select t1.bname , t1.city from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id where t2.loan_type = 'business '
select t1.bname , t1.city from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id where t2.loan_type = 'business '
select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100
select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100
select sum ( t2.amount ) from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id where t1.state = 'new york '
select sum ( t2.amount ) from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id where t1.state = 'new york '
select avg ( credit_score ) from customer where cust_id in ( select cust_id from loan )
select avg ( credit_score ) from customer where cust_id in ( select cust_id from loan )
select avg ( credit_score ) from customer where cust_id not in ( select cust_id from loan )
select avg ( credit_score ) from customer where cust_id not in ( select cust_id from loan )
select count ( * ) from assessment_notes
select date_of_notes from assessment_notes
select count ( * ) from addresses where zip_postcode = `` 197 ''
select count ( distinct incident_type_code ) from behavior_incident
select distinct detention_type_code from detention
select date_incident_start , date_incident_end from behavior_incident where incident_type_code = `` noise ''
select detention_summary from detention
select cell_mobile_number , email_address from students
select email_address from students where first_name = `` emma '' and last_name = `` rohan ''
select count ( distinct student_id ) from students_in_detention
select gender from teachers where last_name = `` medhurst ''
select incident_type_description from ref_incident_type where incident_type_code = `` violence ''
select max ( monthly_rental ) , min ( monthly_rental ) from student_addresses
select first_name from teachers where email_address like ' % man % '
select * from assessment_notes order by date_of_notes asc
select city from addresses order by city
select first_name , last_name from teachers order by last_name
select * from student_addresses order by monthly_rental desc
select t1.student_id , t2.first_name from assessment_notes as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count ( * ) desc limit 1
select t1.teacher_id , t2.first_name from assessment_notes as t1 join teachers as t2 on t1.teacher_id = t2.teacher_id group by t1.teacher_id order by count ( * ) desc limit 3
select t1.student_id , t2.last_name from behavior_incident as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count ( * ) desc limit 1
select t1.teacher_id , t2.last_name from detention as t1 join teachers as t2 on t1.teacher_id = t2.teacher_id where t1.detention_type_code = `` after '' group by t1.teacher_id order by count ( * ) desc limit 1
select t1.student_id , t2.first_name from student_addresses as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by avg ( monthly_rental ) desc limit 1
select t2.address_id , t1.city from addresses as t1 join student_addresses as t2 on t1.address_id = t2.address_id group by t2.address_id order by avg ( monthly_rental ) desc limit 1
select t1.incident_type_code , t2.incident_type_description from behavior_incident as t1 join ref_incident_type as t2 on t1.incident_type_code = t2.incident_type_code group by t1.incident_type_code order by count ( * ) desc limit 1
select t1.detention_type_code , t2.detention_type_description from detention as t1 join ref_detention_type as t2 on t1.detention_type_code = t2.detention_type_code group by t1.detention_type_code order by count ( * ) asc limit 1
select t1.date_of_notes from assessment_notes as t1 join students as t2 on t1.student_id = t2.student_id where t2.first_name = `` fanny ''
select t1.text_of_notes from assessment_notes as t1 join teachers as t2 on t1.teacher_id = t2.teacher_id where t2.last_name = `` schuster ''
select t1.date_incident_start , date_incident_end from behavior_incident as t1 join students as t2 on t1.student_id = t2.student_id where t2.last_name = `` fahey ''
select t1.datetime_detention_start , datetime_detention_end from detention as t1 join teachers as t2 on t1.teacher_id = t2.teacher_id where t2.last_name = `` schultz ''
select t2.address_id , t1.zip_postcode from addresses as t1 join student_addresses as t2 on t1.address_id = t2.address_id order by monthly_rental desc limit 1
select t2.cell_mobile_number from student_addresses as t1 join students as t2 on t1.student_id = t2.student_id order by t1.monthly_rental asc limit 1
select t2.monthly_rental from addresses as t1 join student_addresses as t2 on t1.address_id = t2.address_id where t1.state_province_county = `` texas ''
select t2.first_name , t2.last_name from addresses as t1 join students as t2 on t1.address_id = t2.address_id where t1.state_province_county = `` wisconsin ''
select t1.line_1 , avg ( t2.monthly_rental ) from addresses as t1 join student_addresses as t2 on t1.address_id = t2.address_id group by t2.address_id
select t1.zip_postcode from addresses as t1 join teachers as t2 on t1.address_id = t2.address_id where t2.first_name = `` lyla ''
select t2.email_address from addresses as t1 join teachers as t2 on t1.address_id = t2.address_id where t1.zip_postcode = `` 918 ''
select count ( * ) from students where student_id not in ( select student_id from behavior_incident )
select last_name from teachers except select t1.last_name from teachers as t1 join detention as t2 on t1.teacher_id = t2.teacher_id
select t1.line_1 from addresses as t1 join students as t2 on t1.address_id = t2.address_id intersect select t1.line_1 from addresses as t1 join teachers as t2 on t1.address_id = t2.address_id
select t1.asset_id , t1.asset_details from assets as t1 join asset_parts as t2 on t1.asset_id = t2.asset_id group by t1.asset_id having count ( * ) = 2 intersect select t1.asset_id , t1.asset_details from assets as t1 join fault_log as t2 on t1.asset_id = t2.asset_id group by t1.asset_id having count ( * ) < 2
select count ( * ) , t1.maintenance_contract_id from maintenance_contracts as t1 join assets as t2 on t1.maintenance_contract_id = t2.maintenance_contract_id group by t1.maintenance_contract_id
select count ( * ) , t1.company_id from third_party_companies as t1 join assets as t2 on t1.company_id = t2.supplier_company_id group by t1.company_id
select t1.company_id , t1.company_name from third_party_companies as t1 join maintenance_engineers as t2 on t1.company_id = t2.company_id group by t1.company_id having count ( * ) > = 2 union select t3.company_id , t3.company_name from third_party_companies as t3 join maintenance_contracts as t4 on t3.company_id = t4.maintenance_contract_company_id group by t3.company_id having count ( * ) > = 2
select t1.staff_name , t1.staff_id from staff as t1 join fault_log as t2 on t1.staff_id = t2.recorded_by_staff_id except select t3.staff_name , t3.staff_id from staff as t3 join engineer_visits as t4 on t3.staff_id = t4.contact_staff_id
select t1.engineer_id , t1.first_name , t1.last_name from maintenance_engineers as t1 join engineer_visits as t2 group by t1.engineer_id order by count ( * ) desc limit 1
select t1.part_name , t1.part_id from parts as t1 join part_faults as t2 on t1.part_id = t2.part_id group by t1.part_id having count ( * ) > 2
select t1.first_name , t1.last_name , t1.other_details , t3.skill_description from maintenance_engineers as t1 join engineer_skills as t2 on t1.engineer_id = t2.engineer_id join skills as t3 on t2.skill_id = t3.skill_id
select t1.fault_short_name , t3.skill_description from part_faults as t1 join skills_required_to_fix as t2 on t1.part_fault_id = t2.part_fault_id join skills as t3 on t2.skill_id = t3.skill_id
select t1.part_name , count ( * ) from parts as t1 join asset_parts as t2 on t1.part_id = t2.part_id group by t1.part_name
select t1.fault_description , t2.fault_status from fault_log as t1 join fault_log_parts as t2 on t1.fault_log_entry_id = t2.fault_log_entry_id
select count ( * ) , t1.fault_log_entry_id from fault_log as t1 join engineer_visits as t2 on t1.fault_log_entry_id = t2.fault_log_entry_id group by t1.fault_log_entry_id order by count ( * ) desc limit 1
select distinct last_name from maintenance_engineers
select distinct fault_status from fault_log_parts
select first_name , last_name from maintenance_engineers where engineer_id not in ( select engineer_id from engineer_visits )
select asset_id , asset_details , asset_make , asset_model from assets
select asset_acquired_date from assets order by asset_acquired_date asc limit 1
select t1.part_id , t1.part_name from parts as t1 join part_faults as t2 on t1.part_id = t2.part_id join skills_required_to_fix as t3 on t2.part_fault_id = t3.part_fault_id group by t1.part_id order by count ( * ) desc limit 1
select t1.part_name from parts as t1 join part_faults as t2 on t1.part_id = t2.part_id group by t1.part_name order by count ( * ) asc limit 1
select t1.engineer_id , t1.first_name , t1.last_name from maintenance_engineers as t1 join engineer_visits as t2 on t1.engineer_id = t2.engineer_id group by t1.engineer_id order by count ( * ) asc limit 1
select t1.staff_name , t3.first_name , t3.last_name from staff as t1 join engineer_visits as t2 on t1.staff_id = t2.contact_staff_id join maintenance_engineers as t3 on t2.engineer_id = t3.engineer_id
select t1.fault_log_entry_id , t1.fault_description , t1.fault_log_entry_datetime from fault_log as t1 join fault_log_parts as t2 on t1.fault_log_entry_id = t2.fault_log_entry_id group by t1.fault_log_entry_id order by count ( * ) desc limit 1
select t1.skill_id , t1.skill_description from skills as t1 join skills_required_to_fix as t2 on t1.skill_id = t2.skill_id group by t1.skill_id order by count ( * ) desc limit 1
select distinct asset_model from assets
select asset_make , asset_model , asset_details from assets order by asset_disposed_date asc
select part_id , chargeable_amount from parts order by chargeable_amount asc limit 1
select t1.company_name from third_party_companies as t1 join maintenance_contracts as t2 on t1.company_id = t2.maintenance_contract_company_id order by t2.contract_start_date asc limit 1
select t1.company_name from third_party_companies as t1 join maintenance_contracts as t2 on t1.company_id = t2.maintenance_contract_company_id join ref_company_types as t3 on t1.company_type_code = t3.company_type_code order by t2.contract_end_date desc limit 1
select gender from staff group by gender order by count ( * ) desc limit 1
select t1.staff_name , count ( * ) from staff as t1 join engineer_visits as t2 on t1.staff_id = t2.contact_staff_id group by t1.staff_name
select asset_model from assets where asset_id not in ( select asset_id from fault_log )
select local_authority , services from station
select train_number , name from train order by time
select time , train_number from train where destination = 'chennai ' order by time
select count ( * ) from train where name like `` % express % ''
select train_number , time from train where origin = 'chennai ' and destination = 'guruvayur '
select origin , count ( * ) from train group by origin
select t1.name from train as t1 join route as t2 on t1.id = t2.train_id group by t2.train_id order by count ( * ) desc limit 1
select count ( * ) , t1.network_name , t1.services from station as t1 join route as t2 on t1.id = t2.station_id group by t2.station_id
select avg ( high_temperature ) , day_of_week from weekly_weather group by day_of_week
select max ( t1.low_temperature ) , avg ( t1.precipitation ) from weekly_weather as t1 join station as t2 on t1.station_id = t2.id where t2.network_name = `` amersham ''
select t3.name , t3.time from station as t1 join route as t2 on t1.id = t2.station_id join train as t3 on t2.train_id = t3.id where t1.local_authority = `` chiltern ''
select count ( distinct services ) from station
select t2.id , t2.local_authority from weekly_weather as t1 join station as t2 on t1.station_id = t2.id group by t1.station_id order by avg ( high_temperature ) desc limit 1
select t2.id , t2.local_authority from weekly_weather as t1 join station as t2 on t1.station_id = t2.id group by t1.station_id having max ( t1.precipitation ) > 50
select min ( low_temperature ) , max ( wind_speed_mph ) from weekly_weather
select origin from train group by origin having count ( * ) > 1
select count ( * ) from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where dept_name = `` accounting ''
select count ( * ) from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where dept_name = `` accounting ''
select count ( distinct prof_num ) from class where crs_code = `` acct-211 ''
select count ( distinct prof_num ) from class where crs_code = `` acct-211 ''
select t3.emp_fname , t3.emp_lname from professor as t1 join department as t2 on t1.dept_code = t2.dept_code join employee as t3 on t1.emp_num = t3.emp_num where dept_name = `` biology ''
select t3.emp_fname , t3.emp_lname from professor as t1 join department as t2 on t1.dept_code = t2.dept_code join employee as t3 on t1.emp_num = t3.emp_num where dept_name = `` biology ''
select distinct t1.emp_fname , t1.emp_dob from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where crs_code = `` acct-211 ''
select distinct t1.emp_fname , t1.emp_dob from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where crs_code = `` acct-211 ''
select count ( * ) from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where t1.emp_lname = 'graztevski '
select count ( * ) from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where t1.emp_lname = 'graztevski '
select school_code from department where dept_name = `` accounting ''
select school_code from department where dept_name = `` accounting ''
select crs_credit , crs_description from course where crs_code = 'cis-220 '
select crs_credit , crs_description from course where crs_code = 'cis-220 '
select dept_address from department where dept_name = 'history '
select dept_address from department where dept_name = 'history '
select count ( distinct dept_address ) from department where school_code = 'bus '
select count ( distinct dept_address ) from department where school_code = 'bus '
select count ( distinct dept_address ) , school_code from department group by school_code
select count ( distinct dept_address ) , school_code from department group by school_code
select crs_credit , crs_description from course where crs_code = 'qm-261 '
select crs_credit , crs_description from course where crs_code = 'qm-261 '
select count ( distinct dept_name ) , school_code from department group by school_code
select count ( distinct dept_name ) , school_code from department group by school_code
select count ( distinct dept_name ) , school_code from department group by school_code having count ( distinct dept_name ) < 5
select count ( distinct dept_name ) , school_code from department group by school_code having count ( distinct dept_name ) < 5
select count ( * ) , crs_code from class group by crs_code
select count ( * ) , crs_code from class group by crs_code
select sum ( crs_credit ) , dept_code from course group by dept_code
select sum ( crs_credit ) , dept_code from course group by dept_code
select count ( * ) , class_room from class group by class_room having count ( * ) > = 2
select count ( * ) , class_room from class group by class_room having count ( * ) > = 2
select count ( * ) , dept_code from class as t1 join course as t2 on t1.crs_code = t2.crs_code group by dept_code
select count ( * ) , dept_code from class as t1 join course as t2 on t1.crs_code = t2.crs_code group by dept_code
select count ( * ) , t3.school_code from class as t1 join course as t2 on t1.crs_code = t2.crs_code join department as t3 on t2.dept_code = t3.dept_code group by t3.school_code
select count ( * ) , t3.school_code from class as t1 join course as t2 on t1.crs_code = t2.crs_code join department as t3 on t2.dept_code = t3.dept_code group by t3.school_code
select count ( * ) , t1.school_code from department as t1 join professor as t2 on t1.dept_code = t2.dept_code group by t1.school_code
select count ( * ) , t1.school_code from department as t1 join professor as t2 on t1.dept_code = t2.dept_code group by t1.school_code
select emp_jobcode , count ( * ) from employee group by emp_jobcode order by count ( * ) desc limit 1
select emp_jobcode , count ( * ) from employee group by emp_jobcode order by count ( * ) desc limit 1
select t1.school_code from department as t1 join professor as t2 on t1.dept_code = t2.dept_code group by t1.school_code order by count ( * ) limit 1
select t1.school_code from department as t1 join professor as t2 on t1.dept_code = t2.dept_code group by t1.school_code order by count ( * ) limit 1
select count ( * ) , dept_code from professor where prof_high_degree = 'ph.d . ' group by dept_code
select count ( * ) , dept_code from professor where prof_high_degree = 'ph.d . ' group by dept_code
select count ( * ) , dept_code from student group by dept_code
select count ( * ) , dept_code from student group by dept_code
select sum ( stu_hrs ) , dept_code from student group by dept_code
select sum ( stu_hrs ) , dept_code from student group by dept_code
select max ( stu_gpa ) , avg ( stu_gpa ) , min ( stu_gpa ) , dept_code from student group by dept_code
select max ( stu_gpa ) , avg ( stu_gpa ) , min ( stu_gpa ) , dept_code from student group by dept_code
select t2.dept_name , avg ( t1.stu_gpa ) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by avg ( t1.stu_gpa ) desc limit 1
select t2.dept_name , avg ( t1.stu_gpa ) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by avg ( t1.stu_gpa ) desc limit 1
select count ( distinct school_code ) from department
select count ( distinct school_code ) from department
select count ( distinct class_code ) from class
select count ( distinct class_code ) from class
select count ( distinct crs_code ) from class
select count ( distinct crs_code ) from class
select count ( distinct dept_name ) from department
select count ( distinct dept_name ) from department
select count ( * ) from department as t1 join course as t2 on t1.dept_code = t2.dept_code where dept_name = `` computer info . systems ''
select count ( * ) from department as t1 join course as t2 on t1.dept_code = t2.dept_code where dept_name = `` computer info . systems ''
select count ( distinct class_section ) from class where crs_code = 'acct-211 '
select count ( distinct class_section ) from class where crs_code = 'acct-211 '
select sum ( t1.crs_credit ) , t1.dept_code from course as t1 join class as t2 on t1.crs_code = t2.crs_code group by t1.dept_code
select sum ( t1.crs_credit ) , t1.dept_code from course as t1 join class as t2 on t1.crs_code = t2.crs_code group by t1.dept_code
select t3.dept_name from course as t1 join class as t2 on t1.crs_code = t2.crs_code join department as t3 on t1.dept_code = t3.dept_code group by t1.dept_code order by sum ( t1.crs_credit ) desc limit 1
select t3.dept_name from course as t1 join class as t2 on t1.crs_code = t2.crs_code join department as t3 on t1.dept_code = t3.dept_code group by t1.dept_code order by sum ( t1.crs_credit ) desc limit 1
select count ( * ) from class as t1 join enroll as t2 on t1.class_code = t2.class_code where t1.crs_code = 'acct-211 '
select count ( * ) from class as t1 join enroll as t2 on t1.class_code = t2.class_code where t1.crs_code = 'acct-211 '
select t3.stu_fname from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t2.stu_num = t3.stu_num where t1.crs_code = 'acct-211 '
select t3.stu_fname from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t2.stu_num = t3.stu_num where t1.crs_code = 'acct-211 '
select t3.stu_fname from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t2.stu_num = t3.stu_num where t1.crs_code = 'acct-211 ' and t2.enroll_grade = 'c '
select t3.stu_fname from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t2.stu_num = t3.stu_num where t1.crs_code = 'acct-211 ' and t2.enroll_grade = 'c '
select count ( * ) from employee
select count ( * ) from employee
select count ( * ) from professor where prof_high_degree = 'ph.d . '
select count ( * ) from professor where prof_high_degree = 'ph.d . '
select count ( * ) from class as t1 join enroll as t2 on t1.class_code = t2.class_code join course as t3 on t1.crs_code = t3.crs_code join department as t4 on t3.dept_code = t4.dept_code where t4.dept_name = 'accounting '
select count ( * ) from class as t1 join enroll as t2 on t1.class_code = t2.class_code join course as t3 on t1.crs_code = t3.crs_code join department as t4 on t3.dept_code = t4.dept_code where t4.dept_name = 'accounting '
select t4.dept_name from class as t1 join enroll as t2 on t1.class_code = t2.class_code join course as t3 on t1.crs_code = t3.crs_code join department as t4 on t3.dept_code = t4.dept_code group by t3.dept_code order by count ( * ) desc limit 1
select t4.dept_name from class as t1 join enroll as t2 on t1.class_code = t2.class_code join course as t3 on t1.crs_code = t3.crs_code join department as t4 on t3.dept_code = t4.dept_code group by t3.dept_code order by count ( * ) desc limit 1
select dept_name from department order by dept_name
select dept_name from department order by dept_name
select class_code from class where class_room = 'klr209 '
select class_code from class where class_room = 'klr209 '
select emp_fname from employee where emp_jobcode = 'prof ' order by emp_dob
select emp_fname from employee where emp_jobcode = 'prof ' order by emp_dob
select t2.emp_fname , t1.prof_office from professor as t1 join employee as t2 on t1.emp_num = t2.emp_num order by t2.emp_fname
select t2.emp_fname , t1.prof_office from professor as t1 join employee as t2 on t1.emp_num = t2.emp_num order by t2.emp_fname
select emp_fname , emp_lname from employee order by emp_dob limit 1
select emp_fname , emp_lname from employee order by emp_dob limit 1
select stu_fname , stu_lname , stu_gpa from student where stu_gpa > 3 order by stu_dob desc limit 1
select stu_fname , stu_lname , stu_gpa from student where stu_gpa > 3 order by stu_dob desc limit 1
select distinct stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where enroll_grade = 'c '
select distinct stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where enroll_grade = 'c '
select t2.dept_name from professor as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count ( * ) limit 1
select t2.dept_name from professor as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count ( * ) limit 1
select t2.dept_name , t1.dept_code from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.prof_high_degree = 'ph.d . ' group by t1.dept_code order by count ( * ) desc limit 1
select t2.dept_name , t1.dept_code from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.prof_high_degree = 'ph.d . ' group by t1.dept_code order by count ( * ) desc limit 1
select emp_fname from employee where emp_jobcode = 'prof ' except select t1.emp_fname from employee as t1 join class as t2 on t1.emp_num = t2.prof_num
select emp_fname from employee where emp_jobcode = 'prof ' except select t1.emp_fname from employee as t1 join class as t2 on t1.emp_num = t2.prof_num
select t1.emp_fname from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t2.dept_code = t3.dept_code where t3.dept_name = 'history ' except select t4.emp_fname from employee as t4 join class as t5 on t4.emp_num = t5.prof_num
select t1.emp_fname from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t2.dept_code = t3.dept_code where t3.dept_name = 'history ' except select t4.emp_fname from employee as t4 join class as t5 on t4.emp_num = t5.prof_num
select t1.emp_lname , t2.prof_office from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t2.dept_code = t3.dept_code where t3.dept_name = 'history '
select t1.emp_lname , t2.prof_office from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t2.dept_code = t3.dept_code where t3.dept_name = 'history '
select t3.dept_name , t2.prof_office from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t2.dept_code = t3.dept_code where t1.emp_lname = 'heffington '
select t3.dept_name , t2.prof_office from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t2.dept_code = t3.dept_code where t1.emp_lname = 'heffington '
select t1.emp_lname , t1.emp_hiredate from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num where t2.prof_office = 'dre 102 '
select t1.emp_lname , t1.emp_hiredate from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num where t2.prof_office = 'dre 102 '
select t1.crs_code from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t3.stu_num = t2.stu_num where t3.stu_lname = 'smithson '
select t1.crs_code from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t3.stu_num = t2.stu_num where t3.stu_lname = 'smithson '
select t4.crs_description , t4.crs_credit from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t3.stu_num = t2.stu_num join course as t4 on t4.crs_code = t1.crs_code where t3.stu_lname = 'smithson '
select t4.crs_description , t4.crs_credit from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t3.stu_num = t2.stu_num join course as t4 on t4.crs_code = t1.crs_code where t3.stu_lname = 'smithson '
select count ( * ) from professor where prof_high_degree = 'ph.d . ' or prof_high_degree = 'ma '
select count ( * ) from professor where prof_high_degree = 'ph.d . ' or prof_high_degree = 'ma '
select count ( * ) from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t2.dept_name = 'accounting ' or t2.dept_name = 'biology '
select count ( * ) from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t2.dept_name = 'accounting ' or t2.dept_name = 'biology '
select t1.emp_fname from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where crs_code = 'cis-220 ' intersect select t1.emp_fname from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where crs_code = 'qm-261 '
select t1.emp_fname from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where crs_code = 'cis-220 ' intersect select t1.emp_fname from employee as t1 join class as t2 on t1.emp_num = t2.prof_num where crs_code = 'qm-261 '
select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code join course as t4 on t3.crs_code = t4.crs_code join department as t5 on t5.dept_code = t4.dept_code where t5.dept_name = 'accounting ' intersect select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code join course as t4 on t3.crs_code = t4.crs_code join department as t5 on t5.dept_code = t4.dept_code where t5.dept_name = 'computer info . systems '
select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code join course as t4 on t3.crs_code = t4.crs_code join department as t5 on t5.dept_code = t4.dept_code where t5.dept_name = 'accounting ' intersect select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code join course as t4 on t3.crs_code = t4.crs_code join department as t5 on t5.dept_code = t4.dept_code where t5.dept_name = 'computer info . systems '
select avg ( t2.stu_gpa ) from enroll as t1 join student as t2 on t1.stu_num = t2.stu_num join class as t3 on t1.class_code = t3.class_code where t3.crs_code = 'acct-211 '
select avg ( t2.stu_gpa ) from enroll as t1 join student as t2 on t1.stu_num = t2.stu_num join class as t3 on t1.class_code = t3.class_code where t3.crs_code = 'acct-211 '
select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit 5
select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit 5
select t2.dept_name from student as t1 join department as t2 on t1.dept_code = t2.dept_code order by stu_gpa limit 1
select t2.dept_name from student as t1 join department as t2 on t1.dept_code = t2.dept_code order by stu_gpa limit 1
select stu_fname , stu_gpa from student where stu_gpa < ( select avg ( stu_gpa ) from student )
select stu_fname , stu_gpa from student where stu_gpa < ( select avg ( stu_gpa ) from student )
select t2.dept_name , t2.dept_address from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count ( * ) desc limit 1
select t2.dept_name , t2.dept_address from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count ( * ) desc limit 1
select t2.dept_name , t2.dept_address , count ( * ) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count ( * ) desc limit 3
select t2.dept_name , t2.dept_address , count ( * ) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count ( * ) desc limit 3
select t1.emp_fname , t2.prof_office from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t3.dept_code = t2.dept_code where t3.dept_name = 'history ' and t2.prof_high_degree = 'ph.d . '
select t1.emp_fname , t2.prof_office from employee as t1 join professor as t2 on t1.emp_num = t2.emp_num join department as t3 on t3.dept_code = t2.dept_code where t3.dept_name = 'history ' and t2.prof_high_degree = 'ph.d . '
select t2.emp_fname , t1.crs_code from class as t1 join employee as t2 on t1.prof_num = t2.emp_num
select t2.emp_fname , t1.crs_code from class as t1 join employee as t2 on t1.prof_num = t2.emp_num
select t2.emp_fname , t3.crs_description from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join course as t3 on t1.crs_code = t3.crs_code
select t2.emp_fname , t3.crs_description from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join course as t3 on t1.crs_code = t3.crs_code
select t2.emp_fname , t4.prof_office , t3.crs_description from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join course as t3 on t1.crs_code = t3.crs_code join professor as t4 on t2.emp_num = t4.emp_num
select t2.emp_fname , t4.prof_office , t3.crs_description from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join course as t3 on t1.crs_code = t3.crs_code join professor as t4 on t2.emp_num = t4.emp_num
select t2.emp_fname , t4.prof_office , t3.crs_description , t5.dept_name from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join course as t3 on t1.crs_code = t3.crs_code join professor as t4 on t2.emp_num = t4.emp_num join department as t5 on t4.dept_code = t5.dept_code
select t2.emp_fname , t4.prof_office , t3.crs_description , t5.dept_name from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join course as t3 on t1.crs_code = t3.crs_code join professor as t4 on t2.emp_num = t4.emp_num join department as t5 on t4.dept_code = t5.dept_code
select t1.stu_fname , t1.stu_lname , t4.crs_description from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code join course as t4 on t3.crs_code = t4.crs_code
select t1.stu_fname , t1.stu_lname , t4.crs_description from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code join course as t4 on t3.crs_code = t4.crs_code
select t1.stu_fname , t1.stu_lname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where t2.enroll_grade = 'c ' or t2.enroll_grade = 'a '
select t1.stu_fname , t1.stu_lname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where t2.enroll_grade = 'c ' or t2.enroll_grade = 'a '
select t2.emp_fname , t1.class_room from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join professor as t3 on t2.emp_num = t3.emp_num join department as t4 on t4.dept_code = t3.dept_code where t4.dept_name = 'accounting '
select t2.emp_fname , t1.class_room from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join professor as t3 on t2.emp_num = t3.emp_num join department as t4 on t4.dept_code = t3.dept_code where t4.dept_name = 'accounting '
select distinct t2.emp_fname , t3.prof_high_degree from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join professor as t3 on t2.emp_num = t3.emp_num join department as t4 on t4.dept_code = t3.dept_code where t4.dept_name = 'computer info . systems '
select distinct t2.emp_fname , t3.prof_high_degree from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join professor as t3 on t2.emp_num = t3.emp_num join department as t4 on t4.dept_code = t3.dept_code where t4.dept_name = 'computer info . systems '
select t1.stu_lname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where t2.enroll_grade = 'a ' and t2.class_code = 10018
select t1.stu_lname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where t2.enroll_grade = 'a ' and t2.class_code = 10018
select t2.emp_fname , t1.prof_office from professor as t1 join employee as t2 on t1.emp_num = t2.emp_num join department as t3 on t1.dept_code = t3.dept_code where t3.dept_name = 'history ' and t1.prof_high_degree ! = 'ph.d . '
select t2.emp_fname , t1.prof_office from professor as t1 join employee as t2 on t1.emp_num = t2.emp_num join department as t3 on t1.dept_code = t3.dept_code where t3.dept_name = 'history ' and t1.prof_high_degree ! = 'ph.d . '
select t2.emp_fname from class as t1 join employee as t2 on t1.prof_num = t2.emp_num group by t1.prof_num having count ( * ) > 1
select t2.emp_fname from class as t1 join employee as t2 on t1.prof_num = t2.emp_num group by t1.prof_num having count ( * ) > 1
select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num group by t2.stu_num having count ( * ) = 1
select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num group by t2.stu_num having count ( * ) = 1
select t2.dept_name from course as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.crs_description like ' % statistics % '
select t2.dept_name from course as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.crs_description like ' % statistics % '
select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code where t3.crs_code = 'acct-211 ' and t1.stu_lname like 's % '
select t1.stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num join class as t3 on t2.class_code = t3.class_code where t3.crs_code = 'acct-211 ' and t1.stu_lname like 's % '
select count ( * ) from club
select count ( * ) from club
select distinct region from club order by region asc
select distinct region from club order by region asc
select avg ( gold ) from club_rank
select avg ( gold ) from club_rank
select competition_type , country from competition
select competition_type , country from competition
select distinct year from competition where competition_type ! = `` tournament ''
select distinct year from competition where competition_type ! = `` tournament ''
select max ( silver ) , min ( silver ) from club_rank
select max ( silver ) , min ( silver ) from club_rank
select count ( * ) from club_rank where total < 10
select count ( * ) from club_rank where total < 10
select name from club order by start_year asc
select name from club order by start_year asc
select name from club order by name desc
select name from club order by name desc
select t1.name , t2.player_id from club as t1 join player as t2 on t1.club_id = t2.club_id
select t1.name , t2.player_id from club as t1 join player as t2 on t1.club_id = t2.club_id
select t1.name from club as t1 join player as t2 on t1.club_id = t2.club_id where t2.position = `` right wing ''
select t1.name from club as t1 join player as t2 on t1.club_id = t2.club_id where t2.position = `` right wing ''
select avg ( t2.points ) from club as t1 join player as t2 on t1.club_id = t2.club_id where t1.name = `` aib ''
select avg ( t2.points ) from club as t1 join player as t2 on t1.club_id = t2.club_id where t1.name = `` aib ''
select position , avg ( points ) from player group by position
select position , avg ( points ) from player group by position
select position from player group by name having avg ( points ) > = 20
select position from player group by name having avg ( points ) > = 20
select competition_type , count ( * ) from competition group by competition_type
select competition_type , count ( * ) from competition group by competition_type
select competition_type from competition group by competition_type order by count ( * ) desc limit 1
select competition_type from competition group by competition_type order by count ( * ) desc limit 1
select competition_type from competition group by competition_type having count ( * ) < = 5
select competition_type from competition group by competition_type having count ( * ) < = 5
select name from club where club_id not in ( select club_id from player )
select name from club where club_id not in ( select club_id from player )
select position from player where points > 20 intersect select position from player where points < 10
select position from player where points > 20 intersect select position from player where points < 10
select sum ( points ) from player
select sum ( points ) from player
select count ( distinct position ) from player
select count ( distinct position ) from player
select name from player where points > ( select avg ( points ) from player )
select name from player where points > ( select avg ( points ) from player )
select count ( * ) , position from player where points < 30 group by position
select count ( * ) , position from player where points < 30 group by position
select country from competition where competition_type = 'tournament ' group by country order by count ( * ) desc limit 1
select country from competition where competition_type = 'tournament ' group by country order by count ( * ) desc limit 1
select country from competition where competition_type = 'friendly ' intersect select country from competition where competition_type = 'tournament '
select country from competition where competition_type = 'friendly ' intersect select country from competition where competition_type = 'tournament '
select country from competition except select country from competition where competition_type = 'friendly '
select country from competition except select country from competition where competition_type = 'friendly '
select sum ( num_of_component ) from furniture
select name , furniture_id from furniture order by market_rate desc limit 1
select sum ( market_rate ) from furniture order by market_rate desc limit 2
select num_of_component , name from furniture where num_of_component > 10
select name , num_of_component from furniture order by market_rate limit 1
select t1.name from furniture as t1 join furniture_manufacte as t2 on t1.furniture_id = t2.furniture_id where t2.price_in_dollar < ( select max ( price_in_dollar ) from furniture_manufacte )
select open_year , name from manufacturer order by num_of_shops desc limit 1
select avg ( num_of_factories ) from manufacturer where num_of_shops > 20
select name , manufacturer_id from manufacturer order by open_year
select name , open_year from manufacturer where num_of_shops > 10 or num_of_factories < 10
select max ( num_of_shops ) , avg ( num_of_factories ) from manufacturer where open_year < 1990
select t1.manufacturer_id , t1.num_of_shops from manufacturer as t1 join furniture_manufacte as t2 on t1.manufacturer_id = t2.manufacturer_id order by t2.price_in_dollar desc limit 1
select count ( * ) , t1.name from manufacturer as t1 join furniture_manufacte as t2 on t1.manufacturer_id = t2.manufacturer_id group by t1.manufacturer_id
select t1.name , t2.price_in_dollar from furniture as t1 join furniture_manufacte as t2 on t1.furniture_id = t2.furniture_id
select market_rate , name from furniture where furniture_id not in ( select furniture_id from furniture_manufacte )
select t3.name from furniture as t1 join furniture_manufacte as t2 on t1.furniture_id = t2.furniture_id join manufacturer as t3 on t2.manufacturer_id = t3.manufacturer_id where t1.num_of_component < 6 intersect select t3.name from furniture as t1 join furniture_manufacte as t2 on t1.furniture_id = t2.furniture_id join manufacturer as t3 on t2.manufacturer_id = t3.manufacturer_id where t1.num_of_component > 10
select t1.first_name , t2.department_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id
select t1.first_name , t2.department_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id
select first_name , last_name , salary from employees where salary < 6000
select first_name , last_name , salary from employees where salary < 6000
select first_name , department_id from employees where last_name = 'mcewen '
select first_name , department_id from employees where last_name = 'mcewen '
select * from employees where department_id = `` null ''
select * from employees where department_id = `` null ''
select * from departments where department_name = 'marketing '
select * from departments where department_name = 'marketing '
select hire_date from employees where first_name not like ' % m % '
select hire_date from employees where first_name not like ' % m % '
select first_name , last_name , hire_date , salary , department_id from employees where first_name not like ' % m % '
select first_name , last_name , hire_date , salary , department_id from employees where first_name not like ' % m % '
select first_name , last_name , hire_date , salary , department_id from employees where first_name not like ' % m % ' order by department_id
select first_name , last_name , hire_date , salary , department_id from employees where first_name not like ' % m % ' order by department_id
select phone_number from employees where salary between 8000 and 12000
select phone_number from employees where salary between 8000 and 12000
select * from employees where salary between 8000 and 12000 and commission_pct ! = `` null '' or department_id ! = 40
select * from employees where salary between 8000 and 12000 and commission_pct ! = `` null '' or department_id ! = 40
select first_name , last_name , salary from employees where commission_pct = `` null ''
select first_name , last_name , salary from employees where commission_pct = `` null ''
select first_name , last_name , salary from employees where first_name like ' % m '
select first_name , last_name , salary from employees where first_name like ' % m '
select job_id , hire_date from employees where hire_date between '2007-11-05 ' and '2009-07-05 '
select job_id , hire_date from employees where hire_date between '2007-11-05 ' and '2009-07-05 '
select first_name , last_name from employees where department_id = 70 or department_id = 90
select first_name , last_name from employees where department_id = 70 or department_id = 90
select salary , manager_id from employees where manager_id ! = `` null ''
select salary , manager_id from employees where manager_id ! = `` null ''
select * from employees where hire_date < '2002-06-21 '
select * from employees where hire_date < '2002-06-21 '
select * from employees where first_name like ' % d % ' or first_name like ' % s % ' order by salary desc
select * from employees where first_name like ' % d % ' or first_name like ' % s % ' order by salary desc
select * from employees where hire_date > '1987-09-07 '
select * from employees where hire_date > '1987-09-07 '
select job_title from jobs where min_salary > 9000
select job_title from jobs where min_salary > 9000
select job_title , max_salary - min_salary from jobs where max_salary between 12000 and 18000
select job_title , max_salary - min_salary from jobs where max_salary between 12000 and 18000
select email from employees where commission_pct = `` null '' and salary between 7000 and 12000 and department_id = 50
select email from employees where commission_pct = `` null '' and salary between 7000 and 12000 and department_id = 50
select employee_id , max ( end_date ) from job_history group by employee_id
select employee_id , max ( end_date ) from job_history group by employee_id
select department_id from employees group by department_id having count ( commission_pct ) > 10
select department_id from employees group by department_id having count ( commission_pct ) > 10
select distinct department_id from employees group by department_id , manager_id having count ( employee_id ) > = 4
select distinct department_id from employees group by department_id , manager_id having count ( employee_id ) > = 4
select department_id , avg ( salary ) from employees where commission_pct ! = `` null '' group by department_id
select department_id , avg ( salary ) from employees where commission_pct ! = `` null '' group by department_id
select country_id , count ( * ) from locations group by country_id
select country_id , count ( * ) from locations group by country_id
select job_id from job_history where end_date - start_date > 300 group by job_id having count ( * ) > = 2
select job_id from job_history where end_date - start_date > 300 group by job_id having count ( * ) > = 2
select employee_id from job_history group by employee_id having count ( * ) > = 2
select employee_id from job_history group by employee_id having count ( * ) > = 2
select t1.employee_id , t4.country_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id
select t1.employee_id , t4.country_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id
select t2.department_name , count ( * ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id group by t2.department_name
select t2.department_name , count ( * ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id group by t2.department_name
select * from job_history as t1 join employees as t2 on t1.employee_id = t2.employee_id where t2.salary > = 12000
select * from job_history as t1 join employees as t2 on t1.employee_id = t2.employee_id where t2.salary > = 12000
select job_title , avg ( salary ) from employees as t1 join jobs as t2 on t1.job_id = t2.job_id group by t2.job_title
select job_title , avg ( salary ) from employees as t1 join jobs as t2 on t1.job_id = t2.job_id group by t2.job_title
select first_name , last_name from employees where salary > ( select salary from employees where employee_id = 163 )
select first_name , last_name from employees where salary > ( select salary from employees where employee_id = 163 )
select min ( salary ) , department_id from employees group by department_id
select min ( salary ) , department_id from employees group by department_id
select first_name , last_name , department_id from employees where salary in ( select min ( salary ) from employees group by department_id )
select first_name , last_name , department_id from employees where salary in ( select min ( salary ) from employees group by department_id )
select employee_id from employees where salary > ( select avg ( salary ) from employees )
select employee_id from employees where salary > ( select avg ( salary ) from employees )
select employee_id , salary from employees where manager_id = ( select employee_id from employees where first_name = 'payam ' )
select employee_id , salary from employees where manager_id = ( select employee_id from employees where first_name = 'payam ' )
select distinct t2.department_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id
select distinct t2.department_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id
select distinct * from employees as t1 join departments as t2 on t1.department_id = t2.department_id where t1.employee_id = t2.manager_id
select distinct * from employees as t1 join departments as t2 on t1.department_id = t2.department_id where t1.employee_id = t2.manager_id
select * from departments where department_name = 'marketing '
select * from departments where department_name = 'marketing '
select employee_id from job_history group by employee_id having count ( * ) > = 2
select employee_id from job_history group by employee_id having count ( * ) > = 2
select distinct department_id from employees group by department_id , manager_id having count ( employee_id ) > = 4
select distinct department_id from employees group by department_id , manager_id having count ( employee_id ) > = 4
select job_id from employees group by job_id having avg ( salary ) > 8000
select job_id from employees group by job_id having avg ( salary ) > 8000
select t1.employee_id , t2.job_title from employees as t1 join jobs as t2 on t1.job_id = t2.job_id where t1.department_id = 80
select t1.employee_id , t2.job_title from employees as t1 join jobs as t2 on t1.job_id = t2.job_id where t1.department_id = 80
select t1.first_name , t1.job_id from employees as t1 join departments as t2 on t1.department_id = t2.department_id where t2.department_name = 'finance '
select t1.first_name , t1.job_id from employees as t1 join departments as t2 on t1.department_id = t2.department_id where t2.department_name = 'finance '
select * from employees where salary between ( select min ( salary ) from employees ) and 2500
select * from employees where salary between ( select min ( salary ) from employees ) and 2500
select * from employees where department_id not in ( select department_id from departments where manager_id between 100 and 200 )
select * from employees where department_id not in ( select department_id from departments where manager_id between 100 and 200 )
select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = `` clara '' )
select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = `` clara '' )
select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = `` clara '' ) and first_name ! = `` clara ''
select first_name , last_name , hire_date from employees where department_id = ( select department_id from employees where first_name = `` clara '' ) and first_name ! = `` clara ''
select employee_id , first_name , last_name from employees where department_id in ( select department_id from employees where first_name like ' % t % ' )
select employee_id , first_name , last_name from employees where department_id in ( select department_id from employees where first_name like ' % t % ' )
select employee_id , first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) and department_id in ( select department_id from employees where first_name like ' % j % ' )
select employee_id , first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) and department_id in ( select department_id from employees where first_name like ' % j % ' )
select employee_id , job_id from employees where salary < ( select min ( salary ) from employees where job_id = 'mk_man ' )
select employee_id , job_id from employees where salary < ( select min ( salary ) from employees where job_id = 'mk_man ' )
select employee_id , first_name , last_name , job_id from employees where salary > ( select max ( salary ) from employees where job_id = 'pu_man ' )
select employee_id , first_name , last_name , job_id from employees where salary > ( select max ( salary ) from employees where job_id = 'pu_man ' )
select department_id , sum ( salary ) from employees group by department_id having count ( * ) > = 2
select department_id , sum ( salary ) from employees group by department_id having count ( * ) > = 2
select * from employees where employee_id not in ( select employee_id from job_history )
select * from employees where employee_id not in ( select employee_id from job_history )
select first_name , last_name , salary , department_id , max ( salary ) from employees group by department_id
select first_name , last_name , salary , department_id , max ( salary ) from employees group by department_id
select t1.first_name , t1.last_name , t2.department_name , t3.city , t3.state_province from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id
select t1.first_name , t1.last_name , t2.department_name , t3.city , t3.state_province from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id
select t1.first_name , t1.last_name , t3.city from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id where t1.first_name like ' % z % '
select t1.first_name , t1.last_name , t3.city from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id where t1.first_name like ' % z % '
select t1.department_name , t2.city , t2.state_province from departments as t1 join locations as t2 on t2.location_id = t1.location_id
select t1.department_name , t2.city , t2.state_province from departments as t1 join locations as t2 on t2.location_id = t1.location_id
select t1.first_name , t1.last_name , t1.employee_id , t4.country_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id
select t1.first_name , t1.last_name , t1.employee_id , t4.country_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id join countries as t4 on t3.country_id = t4.country_id
select department_name , count ( * ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id group by department_name
select department_name , count ( * ) from employees as t1 join departments as t2 on t1.department_id = t2.department_id group by department_name
select first_name , last_name , salary from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id where t3.city = 'london '
select first_name , last_name , salary from employees as t1 join departments as t2 on t1.department_id = t2.department_id join locations as t3 on t2.location_id = t3.location_id where t3.city = 'london '
select song_name , releasedate from song order by releasedate desc limit 1
select song_name , releasedate from song order by releasedate desc limit 1
select f_id from files order by duration desc limit 1
select f_id from files order by duration desc limit 1
select song_name from song where languages = `` english ''
select song_name from song where languages = `` english ''
select f_id from files where formats = `` mp3 ''
select f_id from files where formats = `` mp3 ''
select distinct t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.rating > 9
select distinct t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.rating > 9
select distinct t1.file_size , t1.formats from files as t1 join song as t2 on t1.f_id = t2.f_id where t2.resolution < 800
select distinct t1.file_size , t1.formats from files as t1 join song as t2 on t1.f_id = t2.f_id where t2.resolution < 800
select t1.artist_name from song as t1 join files as t2 on t1.f_id = t2.f_id order by t2.duration limit 1
select t1.artist_name from song as t1 join files as t2 on t1.f_id = t2.f_id order by t2.duration limit 1
select t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name order by t2.rating desc limit 3
select t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name order by t2.rating desc limit 3
select count ( * ) from files where duration like `` 4 : % ''
select count ( * ) from files where duration like `` 4 : % ''
select count ( * ) from artist where country = `` bangladesh ''
select count ( * ) from artist where country = `` bangladesh ''
select avg ( t2.rating ) from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t1.gender = `` female ''
select avg ( t2.rating ) from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t1.gender = `` female ''
select formats from files group by formats order by count ( * ) desc limit 1
select formats from files group by formats order by count ( * ) desc limit 1
select artist_name from artist where country = `` uk '' intersect select artist_name from song where languages = `` english ''
select artist_name from artist where country = `` uk '' intersect select artist_name from song where languages = `` english ''
select f_id from files where formats = `` mp4 '' intersect select f_id from song where resolution < 1000
select f_id from files where formats = `` mp4 '' intersect select f_id from song where resolution < 1000
select t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t1.gender = `` female '' and t2.languages = `` bangla ''
select t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t1.gender = `` female '' and t2.languages = `` bangla ''
select avg ( t1.duration ) from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.formats = `` mp3 '' and t2.resolution < 800
select avg ( t1.duration ) from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.formats = `` mp3 '' and t2.resolution < 800
select count ( * ) , gender from artist group by gender
select count ( * ) , gender from artist group by gender
select avg ( rating ) , languages from song group by languages
select avg ( rating ) , languages from song group by languages
select t1.gender , t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name order by t2.resolution limit 1
select t1.gender , t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name order by t2.resolution limit 1
select count ( * ) , formats from files group by formats
select count ( * ) , formats from files group by formats
select distinct song_name from song where resolution > ( select min ( resolution ) from song where languages = `` english '' )
select distinct song_name from song where resolution > ( select min ( resolution ) from song where languages = `` english '' )
select song_name from song where rating < ( select max ( rating ) from song where genre_is = `` blues '' )
select song_name from song where rating < ( select max ( rating ) from song where genre_is = `` blues '' )
select t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.song_name like `` % love % ''
select t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.song_name like `` % love % ''
select t1.artist_name , t1.gender from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.releasedate like `` % mar % ''
select t1.artist_name , t1.gender from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.releasedate like `` % mar % ''
select g_name , rating from genre order by g_name
select g_name , rating from genre order by g_name
select song_name from song order by resolution
select song_name from song order by resolution
select f_id from files where formats = `` mp4 '' union select f_id from song where resolution > 720
select f_id from files where formats = `` mp4 '' union select f_id from song where resolution > 720
select t2.song_name from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.duration like `` 4 : % '' union select song_name from song where languages = `` english ''
select t2.song_name from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.duration like `` 4 : % '' union select song_name from song where languages = `` english ''
select languages from song group by languages order by count ( * ) desc limit 1
select languages from song group by languages order by count ( * ) desc limit 1
select artist_name from song where resolution > 500 group by languages order by count ( * ) desc limit 1
select artist_name from song where resolution > 500 group by languages order by count ( * ) desc limit 1
select artist_name from artist where country = `` uk '' and gender = `` male ''
select artist_name from artist where country = `` uk '' and gender = `` male ''
select song_name from song where genre_is = `` modern '' or languages = `` english ''
select song_name from song where genre_is = `` modern '' or languages = `` english ''
select t2.song_name from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.formats = `` mp3 '' intersect select song_name from song where resolution < 1000
select t2.song_name from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.formats = `` mp3 '' intersect select song_name from song where resolution < 1000
select artist_name from artist where country = `` uk '' intersect select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = `` english ''
select artist_name from artist where country = `` uk '' intersect select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = `` english ''
select avg ( rating ) , avg ( resolution ) from song where languages = `` bangla ''
select avg ( rating ) , avg ( resolution ) from song where languages = `` bangla ''
select max ( t2.resolution ) , min ( t2.resolution ) from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.duration like `` 3 : % ''
select max ( t2.resolution ) , min ( t2.resolution ) from files as t1 join song as t2 on t1.f_id = t2.f_id where t1.duration like `` 3 : % ''
select max ( t1.duration ) , max ( t2.resolution ) , t2.languages from files as t1 join song as t2 on t1.f_id = t2.f_id group by t2.languages order by t2.languages
select max ( t1.duration ) , max ( t2.resolution ) , t2.languages from files as t1 join song as t2 on t1.f_id = t2.f_id group by t2.languages order by t2.languages
select min ( t1.duration ) , min ( t2.rating ) , t2.genre_is from files as t1 join song as t2 on t1.f_id = t2.f_id group by t2.genre_is order by t2.genre_is
select min ( t1.duration ) , min ( t2.rating ) , t2.genre_is from files as t1 join song as t2 on t1.f_id = t2.f_id group by t2.genre_is order by t2.genre_is
select t1.artist_name , count ( * ) from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = `` english '' group by t2.artist_name having count ( * ) > = 1
select t1.artist_name , count ( * ) from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = `` english '' group by t2.artist_name having count ( * ) > = 1
select t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.resolution > 900 group by t2.artist_name having count ( * ) > = 1
select t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.resolution > 900 group by t2.artist_name having count ( * ) > = 1
select t1.artist_name , count ( * ) from artist as t1 join song as t2 on t1.artist_name = t2.artist_name group by t2.artist_name order by count ( * ) desc limit 3
select t1.artist_name , count ( * ) from artist as t1 join song as t2 on t1.artist_name = t2.artist_name group by t2.artist_name order by count ( * ) desc limit 3
select t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name group by t2.artist_name order by count ( * ) limit 1
select t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name group by t2.artist_name order by count ( * ) limit 1
select song_name from song where rating < ( select min ( rating ) from song where languages = 'english ' )
select song_name from song where rating < ( select min ( rating ) from song where languages = 'english ' )
select f_id from song where resolution > ( select max ( resolution ) from song where rating < 8 )
select f_id from song where resolution > ( select max ( resolution ) from song where rating < 8 )
select f_id from song where resolution > ( select avg ( resolution ) from song where genre_is = `` modern '' )
select f_id from song where resolution > ( select avg ( resolution ) from song where genre_is = `` modern '' )
select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = `` bangla '' group by t2.artist_name order by count ( * ) desc limit 3
select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = `` bangla '' group by t2.artist_name order by count ( * ) desc limit 3
select f_id , genre_is , artist_name from song where languages = `` english '' order by rating
select f_id , genre_is , artist_name from song where languages = `` english '' order by rating
select t1.duration , t1.file_size , t1.formats from files as t1 join song as t2 on t1.f_id = t2.f_id where t2.genre_is = `` pop '' order by t2.song_name
select t1.duration , t1.file_size , t1.formats from files as t1 join song as t2 on t1.f_id = t2.f_id where t2.genre_is = `` pop '' order by t2.song_name
select distinct artist_name from song where languages = `` english '' except select distinct artist_name from song where rating > 8
select distinct artist_name from song where languages = `` english '' except select distinct artist_name from song where rating > 8
select distinct artist_name from artist where country = `` bangladesh '' except select distinct artist_name from song where rating > 7
select distinct artist_name from artist where country = `` bangladesh '' except select distinct artist_name from song where rating > 7
select t1.name_full , t1.college_id from college as t1 join player_college as t2 on t1.college_id = t2.college_id group by t1.college_id order by count ( * ) desc limit 1 ;
select t1.name_full , t1.college_id from college as t1 join player_college as t2 on t1.college_id = t2.college_id group by t1.college_id order by count ( * ) desc limit 1 ;
select avg ( t1.salary ) from salary as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings '
select avg ( t1.salary ) from salary as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings '
select name_first , name_last from player as t1 join all_star as t2 on t1.player_id = t2.player_id where year = 1998
select name_first , name_last from player as t1 join all_star as t2 on t1.player_id = t2.player_id where year = 1998
select t1.name_first , t1.name_last , t1.player_id , count ( * ) from player as t1 join all_star as t2 on t1.player_id = t2.player_id group by t1.player_id order by count ( * ) desc limit 1 ;
select t1.name_first , t1.name_last , t1.player_id , count ( * ) from player as t1 join all_star as t2 on t1.player_id = t2.player_id group by t1.player_id order by count ( * ) desc limit 1 ;
select yearid , count ( * ) from hall_of_fame group by yearid ;
select yearid , count ( * ) from hall_of_fame group by yearid ;
select year , avg ( attendance ) from home_game group by year ;
select year , avg ( attendance ) from home_game group by year ;
select t2.team_id , t2.rank from home_game as t1 join team as t2 on t1.team_id = t2.team_id where t1.year = 2014 group by t1.team_id order by avg ( t1.attendance ) desc limit 1 ;
select t2.team_id , t2.rank from home_game as t1 join team as t2 on t1.team_id = t2.team_id where t1.year = 2014 group by t1.team_id order by avg ( t1.attendance ) desc limit 1 ;
select t1.name_first , t1.name_last , t2.player_id from player as t1 join manager_award as t2 on t1.player_id = t2.player_id group by t2.player_id order by count ( * ) desc limit 1 ;
select t1.name_first , t1.name_last , t2.player_id from player as t1 join manager_award as t2 on t1.player_id = t2.player_id group by t2.player_id order by count ( * ) desc limit 1 ;
select count ( * ) from park where state = 'ny ' ;
select count ( * ) from park where state = 'ny ' ;
select t1.name_first , t1.name_last , t1.player_id from player as t1 join player_award as t2 on t1.player_id = t2.player_id group by t1.player_id order by count ( * ) desc limit 3 ;
select t1.name_first , t1.name_last , t1.player_id from player as t1 join player_award as t2 on t1.player_id = t2.player_id group by t1.player_id order by count ( * ) desc limit 3 ;
select birth_country from player group by birth_country order by count ( * ) asc limit 3 ;
select birth_country from player group by birth_country order by count ( * ) asc limit 3 ;
select name_first , name_last from player where death_year = '' ;
select name_first , name_last from player where death_year = '' ;
select count ( * ) from player where birth_country = 'usa ' and bats = 'r ' ;
select count ( * ) from player where birth_country = 'usa ' and bats = 'r ' ;
select avg ( t1.height ) from player as t1 join player_college as t2 on t1.player_id = t2.player_id join college as t3 on t3.college_id = t2.college_id where t3.name_full = 'yale university ' ;
select avg ( t1.height ) from player as t1 join player_college as t2 on t1.player_id = t2.player_id join college as t3 on t3.college_id = t2.college_id where t3.name_full = 'yale university ' ;
select t1.name , t1.team_id , max ( t2.salary ) from team as t1 join salary as t2 on t1.team_id = t2.team_id group by t1.team_id ;
select t1.name , t1.team_id , max ( t2.salary ) from team as t1 join salary as t2 on t1.team_id = t2.team_id group by t1.team_id ;
select t1.name , t1.team_id from team as t1 join salary as t2 on t1.team_id = t2.team_id group by t1.team_id order by avg ( t2.salary ) asc limit 1 ;
select t1.name , t1.team_id from team as t1 join salary as t2 on t1.team_id = t2.team_id group by t1.team_id order by avg ( t2.salary ) asc limit 1 ;
select t1.name_first , t1.name_last from player as t1 join player_award as t2 where t2.year = 1960 intersect select t1.name_first , t1.name_last from player as t1 join player_award as t2 where t2.year = 1961
select t1.name_first , t1.name_last from player as t1 join player_award as t2 where t2.year = 1960 intersect select t1.name_first , t1.name_last from player as t1 join player_award as t2 where t2.year = 1961
select name_first , name_last from player where weight > 220 or height < 75
select name_first , name_last from player where weight > 220 or height < 75
select max ( t1.wins ) from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t2.name = 'boston red stockings ' ;
select max ( t1.wins ) from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t2.name = 'boston red stockings ' ;
select count ( * ) from postseason as t1 join team as t2 on t1.team_id_loser = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year = 2009 ;
select count ( * ) from postseason as t1 join team as t2 on t1.team_id_loser = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year = 2009 ;
select t2.name , t1.team_id_winner from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t1.year = 2008 group by t1.team_id_winner order by count ( * ) desc limit 1 ;
select t2.name , t1.team_id_winner from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t1.year = 2008 group by t1.team_id_winner order by count ( * ) desc limit 1 ;
select count ( * ) , t1.year from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t2.name = 'boston red stockings ' group by t1.year
select count ( * ) , t1.year from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t2.name = 'boston red stockings ' group by t1.year
select count ( * ) from ( select * from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t2.name = 'boston red stockings ' union select * from postseason as t1 join team as t2 on t1.team_id_loser = t2.team_id_br where t2.name = 'boston red stockings ' ) ;
select count ( * ) from ( select * from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t2.name = 'boston red stockings ' union select * from postseason as t1 join team as t2 on t1.team_id_loser = t2.team_id_br where t2.name = 'boston red stockings ' ) ;
select count ( * ) from postseason where year = 1885 and ties = 1 ;
select count ( * ) from postseason where year = 1885 and ties = 1 ;
select sum ( t1.salary ) from salary as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year = 2010
select sum ( t1.salary ) from salary as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year = 2010
select count ( * ) from salary as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year = 2000
select count ( * ) from salary as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year = 2000
select salary from salary where year = 2001 order by salary desc limit 3 ;
select salary from salary where year = 2001 order by salary desc limit 3 ;
select salary from salary where year = 2010 union select salary from salary where year = 2001
select salary from salary where year = 2010 union select salary from salary where year = 2001
select yearid from hall_of_fame group by yearid order by count ( * ) asc limit 1 ;
select yearid from hall_of_fame group by yearid order by count ( * ) asc limit 1 ;
select count ( * ) from park where city = 'atlanta ' ;
select count ( * ) from park where city = 'atlanta ' ;
select count ( * ) from home_game as t1 join park as t2 on t1.park_id = t2.park_id where t1.year = 1907 and t2.park_name = 'columbia park ' ;
select count ( * ) from home_game as t1 join park as t2 on t1.park_id = t2.park_id where t1.year = 1907 and t2.park_name = 'columbia park ' ;
select count ( * ) from home_game as t1 join park as t2 on t1.park_id = t2.park_id where t1.year = 2000 and t2.city = 'atlanta ' ;
select count ( * ) from home_game as t1 join park as t2 on t1.park_id = t2.park_id where t1.year = 2000 and t2.city = 'atlanta ' ;
select sum ( t1.attendance ) from home_game as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year between 2000 and 2010 ;
select sum ( t1.attendance ) from home_game as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year between 2000 and 2010 ;
select sum ( t1.salary ) from salary as t1 join player as t2 on t1.player_id = t2.player_id where t2.name_first = 'len ' and t2.name_last = 'barker ' and t1.year between 1985 and 1990 ;
select sum ( t1.salary ) from salary as t1 join player as t2 on t1.player_id = t2.player_id where t2.name_first = 'len ' and t2.name_last = 'barker ' and t1.year between 1985 and 1990 ;
select t2.name_first , t2.name_last from salary as t1 join player as t2 on t1.player_id = t2.player_id join team as t3 on t3.team_id_br = t1.team_id where t1.year = 2005 and t3.name = 'washington nationals ' intersect select t2.name_first , t2.name_last from salary as t1 join player as t2 on t1.player_id = t2.player_id join team as t3 on t3.team_id_br = t1.team_id where t1.year = 2007 and t3.name = 'washington nationals '
select t2.name_first , t2.name_last from salary as t1 join player as t2 on t1.player_id = t2.player_id join team as t3 on t3.team_id_br = t1.team_id where t1.year = 2005 and t3.name = 'washington nationals ' intersect select t2.name_first , t2.name_last from salary as t1 join player as t2 on t1.player_id = t2.player_id join team as t3 on t3.team_id_br = t1.team_id where t1.year = 2007 and t3.name = 'washington nationals '
select sum ( t1.games ) from home_game as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year between 1990 and 2000 ;
select sum ( t1.games ) from home_game as t1 join team as t2 on t1.team_id = t2.team_id_br where t2.name = 'boston red stockings ' and t1.year between 1990 and 2000 ;
select t2.name from home_game as t1 join team as t2 on t1.team_id = t2.team_id_br where t1.year = 1980 order by t1.attendance asc limit 1 ;
select t2.name from home_game as t1 join team as t2 on t1.team_id = t2.team_id_br where t1.year = 1980 order by t1.attendance asc limit 1 ;
select state from park group by state having count ( * ) > 2 ;
select state from park group by state having count ( * ) > 2 ;
select count ( * ) from team_franchise where active = 'y ' ;
select count ( * ) from team_franchise where active = 'y ' ;
select city from park group by city having count ( * ) between 2 and 4 ;
select city from park group by city having count ( * ) between 2 and 4 ;
select t2.park_name from home_game as t1 join park as t2 on t1.park_id = t2.park_id where t1.year = 2008 order by t1.attendance desc limit 1 ;
select t2.park_name from home_game as t1 join park as t2 on t1.park_id = t2.park_id where t1.year = 2008 order by t1.attendance desc limit 1 ;
select count ( * ) from camera_lens where focal_length_mm > 15
select brand , name from camera_lens order by max_aperture desc
select id , color , name from photos
select max ( height ) , avg ( height ) from mountain
select avg ( prominence ) from mountain where country = 'morocco '
select name , height , prominence from mountain where range ! = 'aberdare range '
select t1.id , t1.name from mountain as t1 join photos as t2 on t1.id = t2.mountain_id where t1.height > 4000
select t1.id , t1.name from mountain as t1 join photos as t2 on t1.id = t2.mountain_id group by t1.id having count ( * ) > = 2
select t2.name from photos as t1 join camera_lens as t2 on t1.camera_lens_id = t2.id group by t2.id order by count ( * ) desc limit 1
select t1.name from camera_lens as t1 join photos as t2 on t2.camera_lens_id = t1.id where t1.brand = 'sigma ' or t1.brand = 'olympus '
select count ( distinct brand ) from camera_lens
select count ( * ) from camera_lens where id not in ( select camera_lens_id from photos )
select count ( distinct t2.camera_lens_id ) from mountain as t1 join photos as t2 on t1.id = t2.mountain_id where t1.country = 'ethiopia '
select t3.brand from mountain as t1 join photos as t2 on t1.id = t2.mountain_id join camera_lens as t3 on t2.camera_lens_id = t3.id where t1.range = 'toubkal atlas ' intersect select t3.brand from mountain as t1 join photos as t2 on t1.id = t2.mountain_id join camera_lens as t3 on t2.camera_lens_id = t3.id where t1.range = 'lasta massif '
select name , prominence from mountain except select t1.name , t1.prominence from mountain as t1 join photos as t2 on t1.id = t2.mountain_id join camera_lens as t3 on t2.camera_lens_id = t3.id where t3.brand = 'sigma '
select name from camera_lens where name like `` % digital % ''
select t1.name , count ( * ) from camera_lens as t1 join photos as t2 on t1.id = t2.camera_lens_id group by t1.id order by count ( * )
select name from channel where owner ! = 'cctv '
select name from channel where owner ! = 'cctv '
select name from channel order by rating_in_percent desc
select name from channel order by rating_in_percent desc
select owner from channel order by rating_in_percent desc limit 1
select owner from channel order by rating_in_percent desc limit 1
select count ( * ) from program
select count ( * ) from program
select name from program order by launch
select name from program order by launch
select name , origin , owner from program
select name , origin , owner from program
select name from program order by launch desc limit 1
select name from program order by launch desc limit 1
select sum ( share_in_percent ) from channel where owner = 'cctv '
select sum ( share_in_percent ) from channel where owner = 'cctv '
select t1.name from channel as t1 join broadcast as t2 on t1.channel_id = t2.channel_id where t2.time_of_day = 'morning '
select t1.name from channel as t1 join broadcast as t2 on t1.channel_id = t2.channel_id where t2.time_of_day = 'morning '
select t1.name from channel as t1 join broadcast as t2 on t1.channel_id = t2.channel_id where t2.time_of_day = 'morning ' intersect select t1.name from channel as t1 join broadcast as t2 on t1.channel_id = t2.channel_id where t2.time_of_day = 'night '
select t1.name from channel as t1 join broadcast as t2 on t1.channel_id = t2.channel_id where t2.time_of_day = 'morning ' intersect select t1.name from channel as t1 join broadcast as t2 on t1.channel_id = t2.channel_id where t2.time_of_day = 'night '
select count ( * ) , time_of_day from broadcast group by time_of_day
select count ( * ) , time_of_day from broadcast group by time_of_day
select count ( distinct program_id ) from broadcast where time_of_day = 'night '
select count ( distinct program_id ) from broadcast where time_of_day = 'night '
select name from program except select t1.name from program as t1 join broadcast as t2 on t1.program_id = t2.program_id where t2.time_of_day = `` morning ''
select name from program except select t1.name from program as t1 join broadcast as t2 on t1.program_id = t2.program_id where t2.time_of_day = `` morning ''
select t1.owner from program as t1 join broadcast as t2 on t1.program_id = t2.program_id where t2.time_of_day = `` morning '' intersect select t1.owner from program as t1 join broadcast as t2 on t1.program_id = t2.program_id where t2.time_of_day = `` night ''
select t1.owner from program as t1 join broadcast as t2 on t1.program_id = t2.program_id where t2.time_of_day = `` morning '' intersect select t1.owner from program as t1 join broadcast as t2 on t1.program_id = t2.program_id where t2.time_of_day = `` night ''
select origin from program order by origin
select origin from program order by origin
select count ( distinct owner ) from channel
select count ( distinct owner ) from channel
select name from program where origin ! = 'beijing '
select name from program where origin ! = 'beijing '
select name from channel where owner = 'cctv ' or owner = 'hbs '
select name from channel where owner = 'cctv ' or owner = 'hbs '
select sum ( rating_in_percent ) , owner from channel group by owner
select sum ( rating_in_percent ) , owner from channel group by owner
select t1.name from program as t1 join broadcast as t2 on t1.program_id = t2.program_id group by t2.program_id order by count ( * ) desc limit 1
select t1.name from program as t1 join broadcast as t2 on t1.program_id = t2.program_id group by t2.program_id order by count ( * ) desc limit 1
select count ( * ) from courses
select count ( * ) from courses
select course_description from courses where course_name = `` database ''
select course_description from courses where course_name = `` database ''
select address_line_1 from course_authors_and_tutors where personal_name = `` cathrine ''
select address_line_1 from course_authors_and_tutors where personal_name = `` cathrine ''
select address_line_1 from course_authors_and_tutors
select address_line_1 from course_authors_and_tutors
select login_name , family_name from course_authors_and_tutors
select login_name , family_name from course_authors_and_tutors
select date_of_enrolment , date_of_completion from student_course_enrolment
select date_of_enrolment , date_of_completion from student_course_enrolment
select count ( distinct student_id ) from student_course_enrolment
select count ( distinct student_id ) from student_course_enrolment
select count ( course_id ) from student_course_enrolment
select count ( course_id ) from student_course_enrolment
select date_test_taken from student_tests_taken where test_result = `` pass ''
select date_test_taken from student_tests_taken where test_result = `` pass ''
select count ( * ) from student_tests_taken where test_result = `` fail ''
select count ( * ) from student_tests_taken where test_result = `` fail ''
select login_name from students where family_name = `` ward ''
select login_name from students where family_name = `` ward ''
select date_of_latest_logon from students where family_name = `` jaskolski '' or family_name = `` langosh ''
select date_of_latest_logon from students where family_name = `` jaskolski '' or family_name = `` langosh ''
select count ( * ) from students where personal_name like `` % son % ''
select count ( * ) from students where personal_name like `` % son % ''
select subject_name from subjects
select subject_name from subjects
select * from course_authors_and_tutors order by personal_name
select * from course_authors_and_tutors order by personal_name
select personal_name , family_name from students order by family_name
select personal_name , family_name from students order by family_name
select test_result , count ( * ) from student_tests_taken group by test_result order by count ( * ) desc
select test_result , count ( * ) from student_tests_taken group by test_result order by count ( * ) desc
select t1.login_name from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id where t2.course_name = `` advanced database ''
select t1.login_name from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id where t2.course_name = `` advanced database ''
select t1.address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id where t2.course_name = `` operating system '' or t2.course_name = `` data structure ''
select t1.address_line_1 from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id where t2.course_name = `` operating system '' or t2.course_name = `` data structure ''
select t1.personal_name , t1.family_name , t2.author_id from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id group by t2.author_id order by count ( * ) desc limit 1
select t1.personal_name , t1.family_name , t2.author_id from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id group by t2.author_id order by count ( * ) desc limit 1
select t1.address_line_1 , t2.author_id from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id group by t2.author_id having count ( * ) > = 2
select t1.address_line_1 , t2.author_id from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id group by t2.author_id having count ( * ) > = 2
select t2.course_name from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id where t1.personal_name = `` julio ''
select t2.course_name from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id where t1.personal_name = `` julio ''
select t1.course_name , t1.course_description from courses as t1 join subjects as t2 on t1.subject_id = t2.subject_id where t2.subject_name = `` computer science ''
select t1.course_name , t1.course_description from courses as t1 join subjects as t2 on t1.subject_id = t2.subject_id where t2.subject_name = `` computer science ''
select t1.subject_id , t2.subject_name , count ( * ) from courses as t1 join subjects as t2 on t1.subject_id = t2.subject_id group by t1.subject_id
select t1.subject_id , t2.subject_name , count ( * ) from courses as t1 join subjects as t2 on t1.subject_id = t2.subject_id group by t1.subject_id
select t1.subject_id , t2.subject_name , count ( * ) from courses as t1 join subjects as t2 on t1.subject_id = t2.subject_id group by t1.subject_id order by count ( * ) asc
select t1.subject_id , t2.subject_name , count ( * ) from courses as t1 join subjects as t2 on t1.subject_id = t2.subject_id group by t1.subject_id order by count ( * ) asc
select t2.date_of_enrolment from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id where t1.course_name = `` spanish ''
select t2.date_of_enrolment from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id where t1.course_name = `` spanish ''
select t1.course_name from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name order by count ( * ) desc limit 1
select t1.course_name from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name order by count ( * ) desc limit 1
select t1.course_name from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name having count ( * ) = 1
select t1.course_name from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name having count ( * ) = 1
select t1.course_description , t1.course_name from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name having count ( * ) > 2
select t1.course_description , t1.course_name from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name having count ( * ) > 2
select t1.course_name , count ( * ) from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name
select t1.course_name , count ( * ) from courses as t1 join student_course_enrolment as t2 on t1.course_id = t2.course_id group by t1.course_name
select t1.date_of_enrolment from student_course_enrolment as t1 join student_tests_taken as t2 on t1.registration_id = t2.registration_id where t2.test_result = `` pass ''
select t1.date_of_enrolment from student_course_enrolment as t1 join student_tests_taken as t2 on t1.registration_id = t2.registration_id where t2.test_result = `` pass ''
select t1.date_of_completion from student_course_enrolment as t1 join student_tests_taken as t2 on t1.registration_id = t2.registration_id where t2.test_result = `` fail ''
select t1.date_of_completion from student_course_enrolment as t1 join student_tests_taken as t2 on t1.registration_id = t2.registration_id where t2.test_result = `` fail ''
select t1.date_of_enrolment , t1.date_of_completion from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t2.personal_name = `` karson ''
select t1.date_of_enrolment , t1.date_of_completion from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t2.personal_name = `` karson ''
select t1.date_of_enrolment , t1.date_of_completion from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t2.family_name = `` zieme '' and t2.personal_name = `` bernie ''
select t1.date_of_enrolment , t1.date_of_completion from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id where t2.family_name = `` zieme '' and t2.personal_name = `` bernie ''
select t1.student_id , t2.login_name from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count ( * ) desc limit 1
select t1.student_id , t2.login_name from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id order by count ( * ) desc limit 1
select t1.student_id , t2.personal_name from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id having count ( * ) > = 2
select t1.student_id , t2.personal_name from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id having count ( * ) > = 2
select t1.student_id , t2.middle_name from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id having count ( * ) < = 2
select t1.student_id , t2.middle_name from student_course_enrolment as t1 join students as t2 on t1.student_id = t2.student_id group by t1.student_id having count ( * ) < = 2
select personal_name from students except select t1.personal_name from students as t1 join student_course_enrolment as t2 on t1.student_id = t2.student_id
select personal_name from students except select t1.personal_name from students as t1 join student_course_enrolment as t2 on t1.student_id = t2.student_id
select count ( * ) from students where student_id not in ( select student_id from student_course_enrolment )
select count ( * ) from students where student_id not in ( select student_id from student_course_enrolment )
select login_name from course_authors_and_tutors intersect select login_name from students
select login_name from course_authors_and_tutors intersect select login_name from students
select personal_name from course_authors_and_tutors intersect select personal_name from students
select personal_name from course_authors_and_tutors intersect select personal_name from students
select t1.date_claim_made , t1.claim_id from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id having count ( * ) > 2 union select t1.date_claim_made , t1.claim_id from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id where t1.amount_claimed = ( select max ( amount_claimed ) from claims )
select t1.date_claim_made , t1.claim_id from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id having count ( * ) > 2 union select t1.date_claim_made , t1.claim_id from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id where t1.amount_claimed = ( select max ( amount_claimed ) from claims )
select t1.customer_details , t1.customer_id from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > = 2 except select t1.customer_details , t1.customer_id from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id join claims as t3 on t2.policy_id = t3.policy_id
select t1.customer_details , t1.customer_id from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > = 2 except select t1.customer_details , t1.customer_id from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id join claims as t3 on t2.policy_id = t3.policy_id
select payment_method_code , date_payment_made , amount_payment from payments order by date_payment_made asc
select payment_method_code , date_payment_made , amount_payment from payments order by date_payment_made asc
select amount_settled , amount_claimed from claims order by amount_claimed desc limit 1
select amount_settled , amount_claimed from claims order by amount_claimed desc limit 1
select amount_settled , amount_claimed from claims order by amount_settled asc limit 1
select amount_settled , amount_claimed from claims order by amount_settled asc limit 1
select date_claim_made , date_claim_settled from claims where amount_claimed > ( select avg ( amount_claimed ) from claims )
select date_claim_made , date_claim_settled from claims where amount_claimed > ( select avg ( amount_claimed ) from claims )
select date_claim_made from claims where amount_settled < = ( select avg ( amount_settled ) from claims )
select date_claim_made from claims where amount_settled < = ( select avg ( amount_settled ) from claims )
select t1.claim_id , count ( * ) from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id
select t1.claim_id , count ( * ) from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id
select t1.claim_id , t1.date_claim_made , count ( * ) from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id order by count ( * ) desc limit 1
select t1.claim_id , t1.date_claim_made , count ( * ) from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id order by count ( * ) desc limit 1
select count ( * ) , t1.claim_id from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id order by t1.date_claim_settled desc limit 1
select count ( * ) , t1.claim_id from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id order by t1.date_claim_settled desc limit 1
select date_claim_made from claims order by date_claim_made asc limit 1
select date_claim_made from claims order by date_claim_made asc limit 1
select sum ( amount_settled ) from settlements
select sum ( amount_settled ) from settlements
select t1.customer_details , t1.customer_id from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > 1
select t1.customer_details , t1.customer_id from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > 1
select date_claim_made , date_claim_settled from settlements
select date_claim_made , date_claim_settled from settlements
select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit 1
select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit 1
select payment_method_code from payments group by payment_method_code order by count ( * ) asc limit 1
select payment_method_code from payments group by payment_method_code order by count ( * ) asc limit 1
select sum ( amount_payment ) from payments
select sum ( amount_payment ) from payments
select distinct customer_details from customers
select distinct customer_details from customers
select policy_type_code from customer_policies group by policy_type_code order by count ( * ) desc limit 1
select policy_type_code from customer_policies group by policy_type_code order by count ( * ) desc limit 1
select count ( * ) from settlements
select count ( * ) from settlements
select payment_id , date_payment_made , amount_payment from payments where payment_method_code = 'visa '
select payment_id , date_payment_made , amount_payment from payments where payment_method_code = 'visa '
select customer_details from customers except select t1.customer_details from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id
select customer_details from customers except select t1.customer_details from customers as t1 join customer_policies as t2 on t1.customer_id = t2.customer_id
select t1.claim_id , t1.date_claim_made , t1.date_claim_settled from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id having count ( * ) = 1
select t1.claim_id , t1.date_claim_made , t1.date_claim_settled from claims as t1 join settlements as t2 on t1.claim_id = t2.claim_id group by t1.claim_id having count ( * ) = 1
select sum ( amount_claimed ) from claims
select sum ( amount_claimed ) from claims
select name from department group by departmentid order by count ( departmentid ) desc limit 1 ;
select name from department group by departmentid order by count ( departmentid ) desc limit 1 ;
select head from department group by departmentid order by count ( departmentid ) limit 1 ;
select head from department group by departmentid order by count ( departmentid ) limit 1 ;
select t2.name , t2.position from department as t1 join physician as t2 on t1.head = t2.employeeid group by departmentid order by count ( departmentid ) limit 1 ;
select t2.name , t2.position from department as t1 join physician as t2 on t1.head = t2.employeeid group by departmentid order by count ( departmentid ) limit 1 ;
select name from appointment as t1 join patient as t2 on t1.patient = t2.ssn
select name from appointment as t1 join patient as t2 on t1.patient = t2.ssn
select name , phone from appointment as t1 join patient as t2 on t1.patient = t2.ssn group by t1.patient having count ( * ) > 1
select name , phone from appointment as t1 join patient as t2 on t1.patient = t2.ssn group by t1.patient having count ( * ) > 1
select appointmentid from appointment order by start desc limit 1
select appointmentid from appointment order by start desc limit 1
select t2.name from appointment as t1 join physician as t2 on t1.physician = t2.employeeid
select t2.name from appointment as t1 join physician as t2 on t1.physician = t2.employeeid
select name from physician except select t2.name from appointment as t1 join physician as t2 on t1.physician = t2.employeeid
select name from physician except select t2.name from appointment as t1 join physician as t2 on t1.physician = t2.employeeid
select t1.name , t3.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t2.primaryaffiliation = 1
select t1.name , t3.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t2.primaryaffiliation = 1
select t1.name from patient as t1 join appointment as t2 on t1.ssn = t2.patient order by t2.start desc limit 1
select t1.name from patient as t1 join appointment as t2 on t1.ssn = t2.patient order by t2.start desc limit 1
select count ( patient ) from stay where room = 112
select count ( patient ) from stay where room = 112
select count ( t1.ssn ) from patient as t1 join prescribes as t2 on t1.ssn = t2.patient join physician as t3 on t2.physician = t3.employeeid where t3.name = `` john dorian ''
select count ( t1.ssn ) from patient as t1 join prescribes as t2 on t1.ssn = t2.patient join physician as t3 on t2.physician = t3.employeeid where t3.name = `` john dorian ''
select t4.name from stay as t1 join patient as t2 on t1.patient = t2.ssn join prescribes as t3 on t3.patient = t2.ssn join medication as t4 on t3.medication = t4.code where room = 111
select t4.name from stay as t1 join patient as t2 on t1.patient = t2.ssn join prescribes as t3 on t3.patient = t2.ssn join medication as t4 on t3.medication = t4.code where room = 111
select patient from stay where room = 111 order by staystart desc limit 1
select patient from stay where room = 111 order by staystart desc limit 1
select t1.name from nurse as t1 join appointment as t2 on t1.employeeid = t2.prepnurse group by t1.employeeid order by count ( * ) desc limit 1
select t1.name from nurse as t1 join appointment as t2 on t1.employeeid = t2.prepnurse group by t1.employeeid order by count ( * ) desc limit 1
select t1.name , count ( * ) from physician as t1 join patient as t2 on t1.employeeid = t2.pcp group by t1.employeeid
select t1.name , count ( * ) from physician as t1 join patient as t2 on t1.employeeid = t2.pcp group by t1.employeeid
select t1.name from physician as t1 join patient as t2 on t1.employeeid = t2.pcp group by t1.employeeid having count ( * ) > 1
select t1.name from physician as t1 join patient as t2 on t1.employeeid = t2.pcp group by t1.employeeid having count ( * ) > 1
select count ( * ) , t1.blockfloor from block as t1 join room as t2 on t1.blockfloor = t2.blockfloor and t1.blockcode = t2.blockcode group by t1.blockfloor
select count ( * ) , t1.blockfloor from block as t1 join room as t2 on t1.blockfloor = t2.blockfloor and t1.blockcode = t2.blockcode group by t1.blockfloor
select count ( * ) , t1.blockcode from block as t1 join room as t2 on t1.blockfloor = t2.blockfloor and t1.blockcode = t2.blockcode group by t1.blockcode
select count ( * ) , t1.blockcode from block as t1 join room as t2 on t1.blockfloor = t2.blockfloor and t1.blockcode = t2.blockcode group by t1.blockcode
select distinct blockcode from room where unavailable = 0
select distinct blockcode from room where unavailable = 0
select count ( distinct roomtype ) from room
select count ( distinct roomtype ) from room
select distinct t1.name from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician join medication as t3 on t3.code = t2.medication where t3.name = `` thesisin ''
select distinct t1.name from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician join medication as t3 on t3.code = t2.medication where t3.name = `` thesisin ''
select distinct t1.name , t1.position from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician join medication as t3 on t3.code = t2.medication where t3.brand = `` x ''
select distinct t1.name , t1.position from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician join medication as t3 on t3.code = t2.medication where t3.brand = `` x ''
select count ( * ) , t1.name from medication as t1 join prescribes as t2 on t1.code = t2.medication group by t1.brand
select count ( * ) , t1.name from medication as t1 join prescribes as t2 on t1.code = t2.medication group by t1.brand
select name from physician where position like ' % senior % '
select name from physician where position like ' % senior % '
select patient from undergoes order by dateundergoes limit 1
select patient from undergoes order by dateundergoes limit 1
select distinct t2.name from undergoes as t1 join patient as t2 on t1.patient = t2.ssn join stay as t3 on t1.stay = t3.stayid where t3.room = 111
select distinct t2.name from undergoes as t1 join patient as t2 on t1.patient = t2.ssn join stay as t3 on t1.stay = t3.stayid where t3.room = 111
select distinct name from nurse order by name
select distinct name from nurse order by name
select distinct t2.name from undergoes as t1 join nurse as t2 on t1.assistingnurse = t2.employeeid
select distinct t2.name from undergoes as t1 join nurse as t2 on t1.assistingnurse = t2.employeeid
select distinct name from medication order by name
select distinct name from medication order by name
select t1.name from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician order by t2.dose desc limit 1
select t1.name from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician order by t2.dose desc limit 1
select physician , department from affiliated_with where primaryaffiliation = 1
select physician , department from affiliated_with where primaryaffiliation = 1
select distinct t2.name from affiliated_with as t1 join department as t2 on t1.department = t2.departmentid where primaryaffiliation = 1
select distinct t2.name from affiliated_with as t1 join department as t2 on t1.department = t2.departmentid where primaryaffiliation = 1
select nurse from on_call where blockfloor = 1 and blockcode = 1
select nurse from on_call where blockfloor = 1 and blockcode = 1
select max ( cost ) , min ( cost ) , avg ( cost ) from procedures
select max ( cost ) , min ( cost ) , avg ( cost ) from procedures
select name , cost from procedures order by cost desc
select name , cost from procedures order by cost desc
select name from procedures order by cost limit 3
select name from procedures order by cost limit 3
select t1.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t3.cost > 5000
select t1.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t3.cost > 5000
select t1.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment order by t3.cost desc limit 1
select t1.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment order by t3.cost desc limit 1
select avg ( t3.cost ) from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select avg ( t3.cost ) from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select name from procedures where cost > 1000 union select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select name from procedures where cost > 1000 union select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select name from procedures where cost > 1000 except select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select name from procedures where cost > 1000 except select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select name from procedures where cost < 5000 intersect select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select name from procedures where cost < 5000 intersect select t3.name from physician as t1 join trained_in as t2 on t1.employeeid = t2.physician join procedures as t3 on t3.code = t2.treatment where t1.name = `` john wen ''
select t1.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t3.name = 'surgery ' intersect select t1.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t3.name = 'psychiatry '
select t1.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t3.name = 'surgery ' intersect select t1.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t3.name = 'psychiatry '
select t1.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t3.name = 'surgery ' or t3.name = 'psychiatry '
select t1.name from physician as t1 join affiliated_with as t2 on t1.employeeid = t2.physician join department as t3 on t2.department = t3.departmentid where t3.name = 'surgery ' or t3.name = 'psychiatry '
select name from patient except select t1.name from patient as t1 join prescribes as t2 on t2.patient = t1.ssn join medication as t3 on t2.medication = t3.code where t3.name = 'procrastin-x '
select name from patient except select t1.name from patient as t1 join prescribes as t2 on t2.patient = t1.ssn join medication as t3 on t2.medication = t3.code where t3.name = 'procrastin-x '
select count ( * ) from patient where ssn not in ( select t1.patient from prescribes as t1 join medication as t2 on t1.medication = t2.code where t2.name = 'procrastin-x ' )
select count ( * ) from patient where ssn not in ( select t1.patient from prescribes as t1 join medication as t2 on t1.medication = t2.code where t2.name = 'procrastin-x ' )
select count ( * ) from appointment
select count ( * ) from appointment
select distinct t1.name from nurse as t1 join on_call as t2 on t1.employeeid = t2.nurse
select distinct t1.name from nurse as t1 join on_call as t2 on t1.employeeid = t2.nurse
select count ( * ) from ship
select count ( * ) from ship
select name from ship order by tonnage asc
select name from ship order by tonnage asc
select type , nationality from ship
select type , nationality from ship
select name from ship where nationality ! = `` united states ''
select name from ship where nationality ! = `` united states ''
select name from ship where nationality = `` united states '' or nationality = `` united kingdom ''
select name from ship where nationality = `` united states '' or nationality = `` united kingdom ''
select name from ship order by tonnage desc limit 1
select name from ship order by tonnage desc limit 1
select type , count ( * ) from ship group by type
select type , count ( * ) from ship group by type
select type from ship group by type order by count ( * ) desc limit 1
select type from ship group by type order by count ( * ) desc limit 1
select nationality from ship group by nationality having count ( * ) > 2
select nationality from ship group by nationality having count ( * ) > 2
select type , avg ( tonnage ) from ship group by type
select type , avg ( tonnage ) from ship group by type
select t1.code , t1.fate , t2.name from mission as t1 join ship as t2 on t1.ship_id = t2.ship_id
select t1.code , t1.fate , t2.name from mission as t1 join ship as t2 on t1.ship_id = t2.ship_id
select t2.name from mission as t1 join ship as t2 on t1.ship_id = t2.ship_id where t1.launched_year > 1928
select t2.name from mission as t1 join ship as t2 on t1.ship_id = t2.ship_id where t1.launched_year > 1928
select distinct t1.fate from mission as t1 join ship as t2 on t1.ship_id = t2.ship_id where t2.nationality = `` united states ''
select distinct t1.fate from mission as t1 join ship as t2 on t1.ship_id = t2.ship_id where t2.nationality = `` united states ''
select name from ship where ship_id not in ( select ship_id from mission )
select name from ship where ship_id not in ( select ship_id from mission )
select type from ship where tonnage > 6000 intersect select type from ship where tonnage < 4000
select type from ship where tonnage > 6000 intersect select type from ship where tonnage < 4000
select count ( * ) from list
select count ( * ) from list
select lastname from list where classroom = 111
select lastname from list where classroom = 111
select firstname from list where classroom = 108
select firstname from list where classroom = 108
select distinct firstname from list where classroom = 107
select distinct firstname from list where classroom = 107
select distinct classroom , grade from list
select distinct classroom , grade from list
select distinct grade from list where classroom = 103
select distinct grade from list where classroom = 103
select distinct grade from list where classroom = 105
select distinct grade from list where classroom = 105
select distinct classroom from list where grade = 4
select distinct classroom from list where grade = 4
select distinct classroom from list where grade = 5
select distinct classroom from list where grade = 5
select distinct t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where grade = 5
select distinct t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where grade = 5
select distinct t2.firstname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where grade = 1
select distinct t2.firstname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where grade = 1
select firstname from teachers where classroom = 110
select firstname from teachers where classroom = 110
select lastname from teachers where classroom = 109
select lastname from teachers where classroom = 109
select distinct firstname , lastname from teachers
select distinct firstname , lastname from teachers
select distinct firstname , lastname from list
select distinct firstname , lastname from list
select t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` otha '' and t2.lastname = `` moyer ''
select t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` otha '' and t2.lastname = `` moyer ''
select t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` marrotte '' and t2.lastname = `` kirk ''
select t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` marrotte '' and t2.lastname = `` kirk ''
select t2.firstname , t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` evelina '' and t1.lastname = `` bromley ''
select t2.firstname , t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` evelina '' and t1.lastname = `` bromley ''
select t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` gell '' and t1.lastname = `` tami ''
select t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` gell '' and t1.lastname = `` tami ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` loria '' and t2.lastname = `` ondersma ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` loria '' and t2.lastname = `` ondersma ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` kawa '' and t2.lastname = `` gordon ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` kawa '' and t2.lastname = `` gordon ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` tarring '' and t2.lastname = `` leia ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` tarring '' and t2.lastname = `` leia ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` chrissy '' and t1.lastname = `` nabozny ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` chrissy '' and t1.lastname = `` nabozny ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` madlock '' and t1.lastname = `` ray ''
select count ( * ) from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.firstname = `` madlock '' and t1.lastname = `` ray ''
select distinct t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.grade = 1 except select t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` otha '' and t2.lastname = `` moyer ''
select distinct t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.grade = 1 except select t1.firstname , t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t2.firstname = `` otha '' and t2.lastname = `` moyer ''
select distinct t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.grade = 3 and t2.firstname ! = `` covin '' and t2.lastname ! = `` jerome ''
select distinct t1.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom where t1.grade = 3 and t2.firstname ! = `` covin '' and t2.lastname ! = `` jerome ''
select grade , count ( distinct classroom ) , count ( * ) from list group by grade
select grade , count ( distinct classroom ) , count ( * ) from list group by grade
select classroom , count ( distinct grade ) from list group by classroom
select classroom , count ( distinct grade ) from list group by classroom
select classroom from list group by classroom order by count ( * ) desc limit 1
select classroom from list group by classroom order by count ( * ) desc limit 1
select classroom , count ( * ) from list group by classroom
select classroom , count ( * ) from list group by classroom
select classroom , count ( * ) from list where grade = `` 0 '' group by classroom
select classroom , count ( * ) from list where grade = `` 0 '' group by classroom
select classroom , count ( * ) from list where grade = `` 4 '' group by classroom
select classroom , count ( * ) from list where grade = `` 4 '' group by classroom
select t2.firstname , t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom group by t2.firstname , t2.lastname order by count ( * ) desc limit 1
select t2.firstname , t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom group by t2.firstname , t2.lastname order by count ( * ) desc limit 1
select count ( * ) , classroom from list group by classroom
select count ( * ) , classroom from list group by classroom
select count ( * ) from company where headquarters = 'usa '
select name from company order by sales_in_billion asc
select headquarters , industry from company
select name from company where industry = `` banking '' or industry = `` retailing ''
select max ( market_value_in_billion ) , min ( market_value_in_billion ) from company
select headquarters from company order by sales_in_billion desc limit 1
select headquarters , count ( * ) from company group by headquarters
select headquarters from company group by headquarters order by count ( * ) desc limit 1
select headquarters from company group by headquarters having count ( * ) > = 2
select headquarters from company where industry = `` banking '' intersect select headquarters from company where industry = `` oil and gas ''
select t3.name , t2.name from employment as t1 join people as t2 on t1.people_id = t2.people_id join company as t3 on t1.company_id = t3.company_id
select t3.name , t2.name from employment as t1 join people as t2 on t1.people_id = t2.people_id join company as t3 on t1.company_id = t3.company_id order by t1.year_working
select t2.name from employment as t1 join people as t2 on t1.people_id = t2.people_id join company as t3 on t1.company_id = t3.company_id where t3.sales_in_billion > 200
select t3.name , count ( * ) from employment as t1 join people as t2 on t1.people_id = t2.people_id join company as t3 on t1.company_id = t3.company_id group by t3.name
select name from people where people_id not in ( select people_id from employment )
select name from company where sales_in_billion > 200 order by sales_in_billion , profits_in_billion desc
select count ( * ) from film
select count ( * ) from film
select distinct director from film
select distinct director from film
select avg ( gross_in_dollar ) from film
select avg ( gross_in_dollar ) from film
select low_estimate , high_estimate from film_market_estimation
select low_estimate , high_estimate from film_market_estimation
select type from film_market_estimation where year = 1995
select type from film_market_estimation where year = 1995
select max ( number_cities ) , min ( number_cities ) from market
select max ( number_cities ) , min ( number_cities ) from market
select count ( * ) from market where number_cities < 300
select count ( * ) from market where number_cities < 300
select country from market order by country asc
select country from market order by country asc
select country from market order by number_cities desc
select country from market order by number_cities desc
select t1.title , t2.type from film as t1 join film_market_estimation as t2 on t1.film_id = t2.film_id
select t1.title , t2.type from film as t1 join film_market_estimation as t2 on t1.film_id = t2.film_id
select distinct t1.director from film as t1 join film_market_estimation as t2 on t1.film_id = t2.film_id where t2.year = 1995
select distinct t1.director from film as t1 join film_market_estimation as t2 on t1.film_id = t2.film_id where t2.year = 1995
select avg ( t2.number_cities ) from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id where t1.low_estimate > 10000
select avg ( t2.number_cities ) from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id where t1.low_estimate > 10000
select t2.country , t1.year from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id
select t2.country , t1.year from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id
select t1.year from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id where t2.country = `` japan '' order by t1.year desc
select t1.year from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id where t2.country = `` japan '' order by t1.year desc
select studio , count ( * ) from film group by studio
select studio , count ( * ) from film group by studio
select studio from film group by studio order by count ( * ) desc limit 1
select studio from film group by studio order by count ( * ) desc limit 1
select studio from film group by studio having count ( * ) > = 2
select studio from film group by studio having count ( * ) > = 2
select title from film where film_id not in ( select film_id from film_market_estimation )
select title from film where film_id not in ( select film_id from film_market_estimation )
select studio from film where director = `` nicholas meyer '' intersect select studio from film where director = `` walter hill ''
select studio from film where director = `` nicholas meyer '' intersect select studio from film where director = `` walter hill ''
select title , studio from film where studio like `` % universal % ''
select title , studio from film where studio like `` % universal % ''
select studio from film except select studio from film where director = `` walter hill ''
select studio from film except select studio from film where director = `` walter hill ''
select studio from film group by studio having avg ( gross_in_dollar ) > = 4500000
select studio from film group by studio having avg ( gross_in_dollar ) > = 4500000
select t1.title from film as t1 join film_market_estimation as t2 on t1.film_id = t2.film_id order by high_estimate desc limit 1
select t1.title from film as t1 join film_market_estimation as t2 on t1.film_id = t2.film_id order by high_estimate desc limit 1
select title , director from film where film_id not in ( select film_id from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id where country = 'china ' )
select title , director from film where film_id not in ( select film_id from film_market_estimation as t1 join market as t2 on t1.market_id = t2.market_id where country = 'china ' )
select count ( * ) from ref_calendar
select count ( * ) from ref_calendar
select calendar_date , day_number from ref_calendar
select calendar_date , day_number from ref_calendar
select count ( * ) from ref_document_types
select count ( * ) from ref_document_types
select document_type_code , document_type_name from ref_document_types
select document_type_code , document_type_name from ref_document_types
select document_type_name , document_type_description from ref_document_types where document_type_code = `` rv ''
select document_type_name , document_type_description from ref_document_types where document_type_code = `` rv ''
select document_type_code from ref_document_types where document_type_name = `` paper ''
select document_type_code from ref_document_types where document_type_name = `` paper ''
select count ( * ) from all_documents where document_type_code = `` cv '' or document_type_code = `` bk ''
select count ( * ) from all_documents where document_type_code = `` cv '' or document_type_code = `` bk ''
select date_stored from all_documents where document_name = `` marry cv ''
select date_stored from all_documents where document_name = `` marry cv ''
select t2.day_number , t1.date_stored from all_documents as t1 join ref_calendar as t2 on t1.date_stored = t2.calendar_date
select t2.day_number , t1.date_stored from all_documents as t1 join ref_calendar as t2 on t1.date_stored = t2.calendar_date
select t2.document_type_name from all_documents as t1 join ref_document_types as t2 on t1.document_type_code = t2.document_type_code where t1.document_name = `` how to read a book ''
select t2.document_type_name from all_documents as t1 join ref_document_types as t2 on t1.document_type_code = t2.document_type_code where t1.document_name = `` how to read a book ''
select count ( * ) from ref_locations
select count ( * ) from ref_locations
select location_code , location_name from ref_locations
select location_code , location_name from ref_locations
select location_name , location_description from ref_locations where location_code = `` x ''
select location_name , location_description from ref_locations where location_code = `` x ''
select location_code from ref_locations where location_name = `` canada ''
select location_code from ref_locations where location_name = `` canada ''
select count ( * ) from roles
select count ( * ) from roles
select role_code , role_name , role_description from roles
select role_code , role_name , role_description from roles
select role_name , role_description from roles where role_code = `` mg ''
select role_name , role_description from roles where role_code = `` mg ''
select role_description from roles where role_name = `` proof reader ''
select role_description from roles where role_name = `` proof reader ''
select count ( * ) from employees
select count ( * ) from employees
select employee_name , role_code , date_of_birth from employees where employee_name = 'armani '
select employee_name , role_code , date_of_birth from employees where employee_name = 'armani '
select employee_id from employees where employee_name = `` ebba ''
select employee_id from employees where employee_name = `` ebba ''
select employee_name from employees where role_code = `` hr ''
select employee_name from employees where role_code = `` hr ''
select role_code , count ( * ) from employees group by role_code
select role_code , count ( * ) from employees group by role_code
select role_code from employees group by role_code order by count ( * ) desc limit 1
select role_code from employees group by role_code order by count ( * ) desc limit 1
select role_code from employees group by role_code having count ( * ) > = 3
select role_code from employees group by role_code having count ( * ) > = 3
select role_code from employees group by role_code order by count ( * ) asc limit 1
select role_code from employees group by role_code order by count ( * ) asc limit 1
select t2.role_name , t2.role_description from employees as t1 join roles as t2 on t1.role_code = t2.role_code where t1.employee_name = `` ebba ''
select t2.role_name , t2.role_description from employees as t1 join roles as t2 on t1.role_code = t2.role_code where t1.employee_name = `` ebba ''
select t1.employee_name from employees as t1 join roles as t2 on t1.role_code = t2.role_code where t2.role_name = `` editor ''
select t1.employee_name from employees as t1 join roles as t2 on t1.role_code = t2.role_code where t2.role_name = `` editor ''
select t1.employee_id from employees as t1 join roles as t2 on t1.role_code = t2.role_code where t2.role_name = `` human resource '' or t2.role_name = `` manager ''
select t1.employee_id from employees as t1 join roles as t2 on t1.role_code = t2.role_code where t2.role_name = `` human resource '' or t2.role_name = `` manager ''
select distinct location_code from document_locations
select distinct location_code from document_locations
select t3.location_name from all_documents as t1 join document_locations as t2 on t1.document_id = t2.document_id join ref_locations as t3 on t2.location_code = t3.location_code where t1.document_name = `` robin cv ''
select t3.location_name from all_documents as t1 join document_locations as t2 on t1.document_id = t2.document_id join ref_locations as t3 on t2.location_code = t3.location_code where t1.document_name = `` robin cv ''
select location_code , date_in_location_from , date_in_locaton_to from document_locations
select location_code , date_in_location_from , date_in_locaton_to from document_locations
select t1.date_in_location_from , t1.date_in_locaton_to from document_locations as t1 join all_documents as t2 on t1.document_id = t2.document_id where t2.document_name = `` robin cv ''
select t1.date_in_location_from , t1.date_in_locaton_to from document_locations as t1 join all_documents as t2 on t1.document_id = t2.document_id where t2.document_name = `` robin cv ''
select location_code , count ( * ) from document_locations group by location_code
select location_code , count ( * ) from document_locations group by location_code
select location_code from document_locations group by location_code order by count ( * ) desc limit 1
select location_code from document_locations group by location_code order by count ( * ) desc limit 1
select location_code from document_locations group by location_code having count ( * ) > = 3
select location_code from document_locations group by location_code having count ( * ) > = 3
select t2.location_name , t1.location_code from document_locations as t1 join ref_locations as t2 on t1.location_code = t2.location_code group by t1.location_code order by count ( * ) asc limit 1
select t2.location_name , t1.location_code from document_locations as t1 join ref_locations as t2 on t1.location_code = t2.location_code group by t1.location_code order by count ( * ) asc limit 1
select t2.employee_name , t3.employee_name from documents_to_be_destroyed as t1 join employees as t2 on t1.destruction_authorised_by_employee_id = t2.employee_id join employees as t3 on t1.destroyed_by_employee_id = t3.employee_id ;
select t2.employee_name , t3.employee_name from documents_to_be_destroyed as t1 join employees as t2 on t1.destruction_authorised_by_employee_id = t2.employee_id join employees as t3 on t1.destroyed_by_employee_id = t3.employee_id ;
select destruction_authorised_by_employee_id , count ( * ) from documents_to_be_destroyed group by destruction_authorised_by_employee_id
select destruction_authorised_by_employee_id , count ( * ) from documents_to_be_destroyed group by destruction_authorised_by_employee_id
select destroyed_by_employee_id , count ( * ) from documents_to_be_destroyed group by destroyed_by_employee_id
select destroyed_by_employee_id , count ( * ) from documents_to_be_destroyed group by destroyed_by_employee_id
select employee_id from employees except select destruction_authorised_by_employee_id from documents_to_be_destroyed
select employee_id from employees except select destruction_authorised_by_employee_id from documents_to_be_destroyed
select distinct destruction_authorised_by_employee_id from documents_to_be_destroyed
select distinct destruction_authorised_by_employee_id from documents_to_be_destroyed
select distinct destroyed_by_employee_id from documents_to_be_destroyed
select distinct destroyed_by_employee_id from documents_to_be_destroyed
select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed
select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed
select destroyed_by_employee_id from documents_to_be_destroyed union select destruction_authorised_by_employee_id from documents_to_be_destroyed
select destroyed_by_employee_id from documents_to_be_destroyed union select destruction_authorised_by_employee_id from documents_to_be_destroyed
select count ( * ) from club
select count ( * ) from club
select clubname from club
select clubname from club
select count ( * ) from student
select count ( * ) from student
select distinct fname from student
select distinct fname from student
select t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore ''
select t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore ''
select t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises ''
select t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` tennis club ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` tennis club ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` pen and paper gaming ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` pen and paper gaming ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` linda '' and t3.lname = `` smith ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` linda '' and t3.lname = `` smith ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` tracy '' and t3.lname = `` kim ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` tracy '' and t3.lname = `` kim ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.sex = `` f ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.sex = `` f ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises '' and t3.sex = `` m ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises '' and t3.sex = `` m ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.major = `` 600 ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.major = `` 600 ''
select t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.major = `` 600 '' group by t1.clubname order by count ( * ) desc limit 1
select t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.major = `` 600 '' group by t1.clubname order by count ( * ) desc limit 1
select t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.sex = `` f '' group by t1.clubname order by count ( * ) desc limit 1
select t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.sex = `` f '' group by t1.clubname order by count ( * ) desc limit 1
select clubdesc from club where clubname = `` tennis club ''
select clubdesc from club where clubname = `` tennis club ''
select clubdesc from club where clubname = `` pen and paper gaming ''
select clubdesc from club where clubname = `` pen and paper gaming ''
select clublocation from club where clubname = `` tennis club ''
select clublocation from club where clubname = `` tennis club ''
select clublocation from club where clubname = `` pen and paper gaming ''
select clublocation from club where clubname = `` pen and paper gaming ''
select clublocation from club where clubname = `` hopkins student enterprises ''
select clublocation from club where clubname = `` hopkins student enterprises ''
select clubname from club where clublocation = `` akw ''
select clubname from club where clublocation = `` akw ''
select count ( * ) from club where clublocation = `` hhh ''
select count ( * ) from club where clublocation = `` hhh ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t2.position = `` president ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t2.position = `` president ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises '' and t2.position = `` cto ''
select t3.fname , t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises '' and t2.position = `` cto ''
select count ( distinct t2.position ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid where t1.clubname = `` bootup baltimore ''
select count ( distinct t2.position ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid where t1.clubname = `` bootup baltimore ''
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.age > 18
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.age > 18
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.age < 18
select count ( * ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore '' and t3.age < 18
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.city_code = `` bal ''
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.city_code = `` bal ''
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.city_code = `` hou ''
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.city_code = `` hou ''
select count ( distinct t1.clubname ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` eric '' and t3.lname = `` tai ''
select count ( distinct t1.clubname ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` eric '' and t3.lname = `` tai ''
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` davis '' and t3.lname = `` steven ''
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.fname = `` davis '' and t3.lname = `` steven ''
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.advisor = 1121
select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.advisor = 1121
select avg ( t3.age ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore ''
select avg ( t3.age ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` bootup baltimore ''
select avg ( t3.age ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises ''
select avg ( t3.age ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` hopkins student enterprises ''
select avg ( t3.age ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` tennis club ''
select avg ( t3.age ) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = `` tennis club ''
select t1.grant_amount from grants as t1 join documents as t2 on t1.grant_id = t2.grant_id where t2.sent_date < '1986-08-26 20:49:27 ' intersect select grant_amount from grants where grant_end_date > '1989-03-16 18:27:16 '
select t1.grant_amount from grants as t1 join documents as t2 on t1.grant_id = t2.grant_id where t2.sent_date < '1986-08-26 20:49:27 ' intersect select grant_amount from grants where grant_end_date > '1989-03-16 18:27:16 '
select t1.project_details from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id where t2.outcome_code = 'paper ' intersect select t1.project_details from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id where t2.outcome_code = 'patent '
select t1.project_details from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id where t2.outcome_code = 'paper ' intersect select t1.project_details from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id where t2.outcome_code = 'patent '
select sum ( grant_amount ) from grants as t1 join organisations as t2 on t1.organisation_id = t2.organisation_id join organisation_types as t3 on t2.organisation_type = t3.organisation_type where t3.organisation_type_description = 'research '
select sum ( grant_amount ) from grants as t1 join organisations as t2 on t1.organisation_id = t2.organisation_id join organisation_types as t3 on t2.organisation_type = t3.organisation_type where t3.organisation_type_description = 'research '
select date_from , date_to from project_staff where project_id in ( select project_id from project_staff group by project_id order by count ( * ) desc limit 1 ) union select date_from , date_to from project_staff where role_code = 'leader '
select date_from , date_to from project_staff where project_id in ( select project_id from project_staff group by project_id order by count ( * ) desc limit 1 ) union select date_from , date_to from project_staff where role_code = 'leader '
select t2.organisation_id , t2.organisation_details from grants as t1 join organisations as t2 on t1.organisation_id = t2.organisation_id group by t2.organisation_id having sum ( t1.grant_amount ) > 6000
select t2.organisation_id , t2.organisation_details from grants as t1 join organisations as t2 on t1.organisation_id = t2.organisation_id group by t2.organisation_id having sum ( t1.grant_amount ) > 6000
select t1.organisation_type , t1.organisation_id from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_id order by count ( * ) desc limit 1
select t1.organisation_type , t1.organisation_id from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_id order by count ( * ) desc limit 1
select t1.organisation_type from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_type order by count ( * ) desc limit 1
select t1.organisation_type from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_type order by count ( * ) desc limit 1
select t1.sent_date from documents as t1 join grants as t2 on t1.grant_id = t2.grant_id join organisations as t3 on t2.organisation_id = t3.organisation_id join organisation_types as t4 on t3.organisation_type = t4.organisation_type where t2.grant_amount > 5000 and t4.organisation_type_description = 'research '
select t1.sent_date from documents as t1 join grants as t2 on t1.grant_id = t2.grant_id join organisations as t3 on t2.organisation_id = t3.organisation_id join organisation_types as t4 on t3.organisation_type = t4.organisation_type where t2.grant_amount > 5000 and t4.organisation_type_description = 'research '
select t1.response_received_date from documents as t1 join document_types as t2 on t1.document_type_code = t2.document_type_code join grants as t3 on t1.grant_id = t3.grant_id where t2.document_description = 'regular ' or t3.grant_amount > 100
select t1.response_received_date from documents as t1 join document_types as t2 on t1.document_type_code = t2.document_type_code join grants as t3 on t1.grant_id = t3.grant_id where t2.document_description = 'regular ' or t3.grant_amount > 100
select project_details from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher ' )
select project_details from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher ' )
select t1.task_details , t1.task_id , t2.project_id from tasks as t1 join projects as t2 on t1.project_id = t2.project_id where t2.project_details = 'omnis ' union select t1.task_details , t1.task_id , t2.project_id from tasks as t1 join projects as t2 on t1.project_id = t2.project_id join project_outcomes as t3 on t2.project_id = t3.project_id group by t2.project_id having count ( * ) > 2
select t1.task_details , t1.task_id , t2.project_id from tasks as t1 join projects as t2 on t1.project_id = t2.project_id where t2.project_details = 'omnis ' union select t1.task_details , t1.task_id , t2.project_id from tasks as t1 join projects as t2 on t1.project_id = t2.project_id join project_outcomes as t3 on t2.project_id = t3.project_id group by t2.project_id having count ( * ) > 2
select date_from , date_to from project_staff where role_code = 'researcher '
select date_from , date_to from project_staff where role_code = 'researcher '
select count ( distinct role_code ) from project_staff
select count ( distinct role_code ) from project_staff
select sum ( grant_amount ) , organisation_id from grants group by organisation_id
select sum ( grant_amount ) , organisation_id from grants group by organisation_id
select t1.project_details from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id join research_outcomes as t3 on t2.outcome_code = t3.outcome_code where t3.outcome_description like ' % published % '
select t1.project_details from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id join research_outcomes as t3 on t2.outcome_code = t3.outcome_code where t3.outcome_description like ' % published % '
select t1.project_id , count ( * ) from project_staff as t1 join projects as t2 on t1.project_id = t2.project_id group by t1.project_id order by count ( * ) asc
select t1.project_id , count ( * ) from project_staff as t1 join projects as t2 on t1.project_id = t2.project_id group by t1.project_id order by count ( * ) asc
select role_description from staff_roles where role_code = 'researcher '
select role_description from staff_roles where role_code = 'researcher '
select date_from from project_staff order by date_from asc limit 1
select date_from from project_staff order by date_from asc limit 1
select t1.project_details , t1.project_id from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.project_id order by count ( * ) desc limit 1
select t1.project_details , t1.project_id from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.project_id order by count ( * ) desc limit 1
select project_details from projects where project_id not in ( select project_id from project_outcomes )
select project_details from projects where project_id not in ( select project_id from project_outcomes )
select t1.organisation_id , t1.organisation_type , t1.organisation_details from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_id order by count ( * ) desc limit 1
select t1.organisation_id , t1.organisation_type , t1.organisation_details from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_id order by count ( * ) desc limit 1
select t1.role_description , t2.staff_id from staff_roles as t1 join project_staff as t2 on t1.role_code = t2.role_code join project_outcomes as t3 on t2.project_id = t3.project_id group by t2.staff_id order by count ( * ) desc limit 1
select t1.role_description , t2.staff_id from staff_roles as t1 join project_staff as t2 on t1.role_code = t2.role_code join project_outcomes as t3 on t2.project_id = t3.project_id group by t2.staff_id order by count ( * ) desc limit 1
select document_type_code from document_types where document_description like 'initial % '
select document_type_code from document_types where document_description like 'initial % '
select t1.grant_start_date from grants as t1 join documents as t2 on t1.grant_id = t2.grant_id join document_types as t3 on t2.document_type_code = t3.document_type_code where t3.document_description = 'regular ' intersect select t1.grant_start_date from grants as t1 join documents as t2 on t1.grant_id = t2.grant_id join document_types as t3 on t2.document_type_code = t3.document_type_code where t3.document_description = 'initial application '
select t1.grant_start_date from grants as t1 join documents as t2 on t1.grant_id = t2.grant_id join document_types as t3 on t2.document_type_code = t3.document_type_code where t3.document_description = 'regular ' intersect select t1.grant_start_date from grants as t1 join documents as t2 on t1.grant_id = t2.grant_id join document_types as t3 on t2.document_type_code = t3.document_type_code where t3.document_description = 'initial application '
select grant_id , count ( * ) from documents group by grant_id order by count ( * ) desc limit 1
select grant_id , count ( * ) from documents group by grant_id order by count ( * ) desc limit 1
select t1.organisation_type_description from organisation_types as t1 join organisations as t2 on t1.organisation_type = t2.organisation_type where t2.organisation_details = 'quo '
select t1.organisation_type_description from organisation_types as t1 join organisations as t2 on t1.organisation_type = t2.organisation_type where t2.organisation_details = 'quo '
select organisation_details from organisations as t1 join organisation_types as t2 on t1.organisation_type = t2.organisation_type where t2.organisation_type_description = 'sponsor ' order by organisation_details
select organisation_details from organisations as t1 join organisation_types as t2 on t1.organisation_type = t2.organisation_type where t2.organisation_type_description = 'sponsor ' order by organisation_details
select count ( * ) from project_outcomes where outcome_code = 'patent '
select count ( * ) from project_outcomes where outcome_code = 'patent '
select count ( * ) from project_staff where role_code = 'leader ' or date_from < '1989-04-24 23:51:54 '
select count ( * ) from project_staff where role_code = 'leader ' or date_from < '1989-04-24 23:51:54 '
select date_to from project_staff order by date_to desc limit 1
select date_to from project_staff order by date_to desc limit 1
select t1.outcome_description from research_outcomes as t1 join project_outcomes as t2 on t1.outcome_code = t2.outcome_code join projects as t3 on t2.project_id = t3.project_id where t3.project_details = 'sint '
select t1.outcome_description from research_outcomes as t1 join project_outcomes as t2 on t1.outcome_code = t2.outcome_code join projects as t3 on t2.project_id = t3.project_id where t3.project_details = 'sint '
select t1.organisation_id , count ( * ) from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.organisation_id order by count ( * ) desc limit 1
select t1.organisation_id , count ( * ) from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.organisation_id order by count ( * ) desc limit 1
select project_details from projects where organisation_id in ( select organisation_id from projects group by organisation_id order by count ( * ) desc limit 1 )
select project_details from projects where organisation_id in ( select organisation_id from projects group by organisation_id order by count ( * ) desc limit 1 )
select staff_details from research_staff order by staff_details asc
select staff_details from research_staff order by staff_details asc
select count ( * ) from tasks
select count ( * ) from tasks
select count ( * ) , t1.project_details from projects as t1 join tasks as t2 on t1.project_id = t2.project_id group by t1.project_id
select count ( * ) , t1.project_details from projects as t1 join tasks as t2 on t1.project_id = t2.project_id group by t1.project_id
select role_code from project_staff where date_from > '2003-04-19 15:06:20 ' and date_to < '2016-03-15 00:33:18 '
select role_code from project_staff where date_from > '2003-04-19 15:06:20 ' and date_to < '2016-03-15 00:33:18 '
select t1.outcome_description from research_outcomes as t1 join project_outcomes as t2 on t1.outcome_code = t2.outcome_code
select t1.outcome_description from research_outcomes as t1 join project_outcomes as t2 on t1.outcome_code = t2.outcome_code
select role_code from project_staff group by role_code order by count ( * ) desc limit 1
select role_code from project_staff group by role_code order by count ( * ) desc limit 1
select count ( t2.friend ) from person as t1 join personfriend as t2 on t1.name = t2.name where t1.name = 'dan '
select count ( t2.friend ) from person as t1 join personfriend as t2 on t1.name = t2.name where t1.name = 'dan '
select count ( * ) from person where gender = 'female '
select count ( * ) from person where gender = 'female '
select avg ( age ) from person
select avg ( age ) from person
select count ( distinct city ) from person
select count ( distinct city ) from person
select count ( distinct job ) from person
select count ( distinct job ) from person
select name from person where age = ( select max ( age ) from person )
select name from person where age = ( select max ( age ) from person )
select name from person where job = 'student ' and age = ( select max ( age ) from person where job = 'student ' )
select name from person where job = 'student ' and age = ( select max ( age ) from person where job = 'student ' )
select name from person where gender = 'male ' and age = ( select min ( age ) from person where gender = 'male ' )
select name from person where gender = 'male ' and age = ( select min ( age ) from person where gender = 'male ' )
select age from person where job = 'doctor ' and name = 'zach '
select age from person where job = 'doctor ' and name = 'zach '
select name from person where age < 30
select name from person where age < 30
select count ( * ) from person where age > 30 and job = 'engineer '
select count ( * ) from person where age > 30 and job = 'engineer '
select avg ( age ) , gender from person group by gender
select avg ( age ) , gender from person group by gender
select avg ( age ) , job from person group by job
select avg ( age ) , job from person group by job
select avg ( age ) , job from person where gender = 'male ' group by job
select avg ( age ) , job from person where gender = 'male ' group by job
select min ( age ) , job from person group by job
select min ( age ) , job from person group by job
select count ( * ) , gender from person where age < 40 group by gender
select count ( * ) , gender from person where age < 40 group by gender
select name from person where age > ( select min ( age ) from person where job = 'engineer ' ) order by age
select name from person where age > ( select min ( age ) from person where job = 'engineer ' ) order by age
select count ( * ) from person where age > ( select max ( age ) from person where job = 'engineer ' )
select count ( * ) from person where age > ( select max ( age ) from person where job = 'engineer ' )
select name , job from person order by name
select name , job from person order by name
select name from person order by age desc
select name from person order by age desc
select name from person where gender = 'male ' order by age
select name from person where gender = 'male ' order by age
select t1.name , t1.age from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'dan ' intersect select t1.name , t1.age from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'alice '
select t1.name , t1.age from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'dan ' intersect select t1.name , t1.age from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'alice '
select distinct t1.name , t1.age from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'dan ' or t2.friend = 'alice '
select distinct t1.name , t1.age from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'dan ' or t2.friend = 'alice '
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age > 40 ) intersect select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age < 30 )
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age > 40 ) intersect select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age < 30 )
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age > 40 ) except select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age < 30 )
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age > 40 ) except select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend in ( select name from person where age < 30 )
select name from person except select t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.job = 'student '
select name from person except select t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.job = 'student '
select name from personfriend group by name having count ( * ) = 1
select name from personfriend group by name having count ( * ) = 1
select t2.friend from person as t1 join personfriend as t2 on t1.name = t2.name where t1.name = 'bob '
select t2.friend from person as t1 join personfriend as t2 on t1.name = t2.name where t1.name = 'bob '
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'bob '
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'bob '
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'zach ' and t1.gender = 'female '
select t1.name from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'zach ' and t1.gender = 'female '
select t2.friend from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'alice ' and t1.gender = 'female '
select t2.friend from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'alice ' and t1.gender = 'female '
select t2.friend from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'alice ' and t1.gender = 'male ' and t1.job = 'doctor '
select t2.friend from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'alice ' and t1.gender = 'male ' and t1.job = 'doctor '
select t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.city = 'new york city '
select t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.city = 'new york city '
select distinct t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.age < ( select avg ( age ) from person )
select distinct t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.age < ( select avg ( age ) from person )
select distinct t2.name , t2.friend , t1.age from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.age > ( select avg ( age ) from person )
select distinct t2.name , t2.friend , t1.age from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.age > ( select avg ( age ) from person )
select friend from personfriend where name = 'zach ' and year = ( select max ( year ) from personfriend where name = 'zach ' )
select friend from personfriend where name = 'zach ' and year = ( select max ( year ) from personfriend where name = 'zach ' )
select t1.age from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'zach ' and t2.year = ( select max ( year ) from personfriend where name = 'zach ' )
select t1.age from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'zach ' and t2.year = ( select max ( year ) from personfriend where name = 'zach ' )
select name from personfriend where friend = 'alice ' and year = ( select min ( year ) from personfriend where friend = 'alice ' )
select name from personfriend where friend = 'alice ' and year = ( select min ( year ) from personfriend where friend = 'alice ' )
select t1.name , t1.age , t1.job from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'alice ' and t2.year = ( select max ( year ) from personfriend where friend = 'alice ' )
select t1.name , t1.age , t1.job from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'alice ' and t2.year = ( select max ( year ) from personfriend where friend = 'alice ' )
select name from person except select name from personfriend
select name from person except select name from personfriend
select t2.name , avg ( t1.age ) from person as t1 join personfriend as t2 on t1.name = t2.friend group by t2.name order by avg ( t1.age ) desc limit 1
select t2.name , avg ( t1.age ) from person as t1 join personfriend as t2 on t1.name = t2.friend group by t2.name order by avg ( t1.age ) desc limit 1
select count ( distinct name ) from personfriend where friend not in ( select name from person where city = 'austin ' )
select count ( distinct name ) from personfriend where friend not in ( select name from person where city = 'austin ' )
select distinct t4.name from personfriend as t1 join person as t2 on t1.name = t2.name join personfriend as t3 on t1.friend = t3.name join personfriend as t4 on t3.friend = t4.name where t2.name = 'alice ' and t4.name ! = 'alice '
select distinct t4.name from personfriend as t1 join person as t2 on t1.name = t2.name join personfriend as t3 on t1.friend = t3.name join personfriend as t4 on t3.friend = t4.name where t2.name = 'alice ' and t4.name ! = 'alice '
select count ( * ) from member
select name from member order by name asc
select name , country from member
select name from member where country = `` united states '' or country = `` canada ''
select country , count ( * ) from member group by country
select country from member group by country order by count ( * ) desc limit 1
select country from member group by country having count ( * ) > 2
select leader_name , college_location from college
select t2.name , t1.name from college as t1 join member as t2 on t1.college_id = t2.college_id
select t2.name , t1.college_location from college as t1 join member as t2 on t1.college_id = t2.college_id order by t2.name asc
select distinct t1.leader_name from college as t1 join member as t2 on t1.college_id = t2.college_id where t2.country = `` canada ''
select t1.name , t2.decoration_theme from member as t1 join round as t2 on t1.member_id = t2.member_id
select t1.name from member as t1 join round as t2 on t1.member_id = t2.member_id where t2.rank_in_round > 3
select t1.name from member as t1 join round as t2 on t1.member_id = t2.member_id order by rank_in_round asc
select name from member where member_id not in ( select member_id from round )
select document_name , access_count from documents order by document_name
select document_name , access_count from documents order by document_name
select document_name , access_count from documents order by access_count desc limit 1
select document_name , access_count from documents order by access_count desc limit 1
select document_type_code from documents group by document_type_code having count ( * ) > 4
select document_type_code from documents group by document_type_code having count ( * ) > 4
select sum ( access_count ) from documents group by document_type_code order by count ( * ) desc limit 1
select sum ( access_count ) from documents group by document_type_code order by count ( * ) desc limit 1
select avg ( access_count ) from documents
select avg ( access_count ) from documents
select t2.document_structure_description from documents as t1 join document_structures as t2 on t1.document_structure_code = t2.document_structure_code group by t1.document_structure_code order by count ( * ) desc limit 1
select t2.document_structure_description from documents as t1 join document_structures as t2 on t1.document_structure_code = t2.document_structure_code group by t1.document_structure_code order by count ( * ) desc limit 1
select document_type_code from documents where document_name = `` david cv ''
select document_type_code from documents where document_name = `` david cv ''
select document_name from documents group by document_type_code order by count ( * ) desc limit 3 intersect select document_name from documents group by document_structure_code order by count ( * ) desc limit 3
select document_name from documents group by document_type_code order by count ( * ) desc limit 3 intersect select document_name from documents group by document_structure_code order by count ( * ) desc limit 3
select document_type_code from documents group by document_type_code having sum ( access_count ) > 10000
select document_type_code from documents group by document_type_code having sum ( access_count ) > 10000
select t2.section_title from documents as t1 join document_sections as t2 on t1.document_code = t2.document_code where t1.document_name = `` david cv ''
select t2.section_title from documents as t1 join document_sections as t2 on t1.document_code = t2.document_code where t1.document_name = `` david cv ''
select document_name from documents where document_code not in ( select document_code from document_sections )
select document_name from documents where document_code not in ( select document_code from document_sections )
select user_name , password from users group by role_code order by count ( * ) desc limit 1
select user_name , password from users group by role_code order by count ( * ) desc limit 1
select avg ( t1.access_count ) from documents as t1 join document_functional_areas as t2 on t1.document_code = t2.document_code join functional_areas as t3 on t2.functional_area_code = t3.functional_area_code where t3.functional_area_description = `` acknowledgement ''
select avg ( t1.access_count ) from documents as t1 join document_functional_areas as t2 on t1.document_code = t2.document_code join functional_areas as t3 on t2.functional_area_code = t3.functional_area_code where t3.functional_area_description = `` acknowledgement ''
select document_name from documents except select t1.document_name from documents as t1 join document_sections as t2 on t1.document_code = t2.document_code join document_sections_images as t3 on t2.section_id = t3.section_id
select document_name from documents except select t1.document_name from documents as t1 join document_sections as t2 on t1.document_code = t2.document_code join document_sections_images as t3 on t2.section_id = t3.section_id
select t1.document_name from documents as t1 join document_sections as t2 on t1.document_code = t2.document_code group by t1.document_code order by count ( * ) desc limit 1
select t1.document_name from documents as t1 join document_sections as t2 on t1.document_code = t2.document_code group by t1.document_code order by count ( * ) desc limit 1
select document_name from documents where document_name like `` % cv % ''
select document_name from documents where document_name like `` % cv % ''
select count ( * ) from users where user_login = 1
select count ( * ) from users where user_login = 1
select role_description from roles where role_code = ( select role_code from users where user_login = 1 group by role_code order by count ( * ) desc limit 1 )
select role_description from roles where role_code = ( select role_code from users where user_login = 1 group by role_code order by count ( * ) desc limit 1 )
select avg ( access_count ) from documents group by document_structure_code order by count ( * ) asc limit 1
select avg ( access_count ) from documents group by document_structure_code order by count ( * ) asc limit 1
select image_name , image_url from images order by image_name
select image_name , image_url from images order by image_name
select count ( * ) , role_code from users group by role_code
select count ( * ) , role_code from users group by role_code
select document_type_code from documents group by document_type_code having count ( * ) > 2
select document_type_code from documents group by document_type_code having count ( * ) > 2
select count ( * ) from companies
select count ( * ) from companies
select name from companies order by market_value_billion desc
select name from companies order by market_value_billion desc
select name from companies where headquarters ! = 'usa '
select name from companies where headquarters ! = 'usa '
select name , assets_billion from companies order by name asc
select name , assets_billion from companies order by name asc
select avg ( profits_billion ) from companies
select avg ( profits_billion ) from companies
select max ( sales_billion ) , min ( sales_billion ) from companies where industry ! = `` banking ''
select max ( sales_billion ) , min ( sales_billion ) from companies where industry ! = `` banking ''
select count ( distinct industry ) from companies
select count ( distinct industry ) from companies
select name from buildings order by height desc
select name from buildings order by height desc
select stories from buildings order by height desc limit 1
select stories from buildings order by height desc limit 1
select t3.name , t2.name from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id
select t3.name , t2.name from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id
select t2.name from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t1.building_id having count ( * ) > 1
select t2.name from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t1.building_id having count ( * ) > 1
select t2.name from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t1.building_id order by count ( * ) desc limit 1
select t2.name from office_locations as t1 join buildings as t2 on t1.building_id = t2.id join companies as t3 on t1.company_id = t3.id group by t1.building_id order by count ( * ) desc limit 1
select name from buildings where status = `` on-hold '' order by stories asc
select name from buildings where status = `` on-hold '' order by stories asc
select industry , count ( * ) from companies group by industry
select industry , count ( * ) from companies group by industry
select industry from companies group by industry order by count ( * ) desc
select industry from companies group by industry order by count ( * ) desc
select industry from companies group by industry order by count ( * ) desc limit 1
select industry from companies group by industry order by count ( * ) desc limit 1
select name from buildings where id not in ( select building_id from office_locations )
select name from buildings where id not in ( select building_id from office_locations )
select industry from companies where headquarters = `` usa '' intersect select industry from companies where headquarters = `` china ''
select industry from companies where headquarters = `` usa '' intersect select industry from companies where headquarters = `` china ''
select count ( * ) from companies where industry = `` banking '' or industry = `` conglomerate ''
select count ( * ) from companies where industry = `` banking '' or industry = `` conglomerate ''
select headquarters from companies group by headquarters having count ( * ) > 2
select headquarters from companies group by headquarters having count ( * ) > 2
select count ( * ) from products
select product_name from products order by product_price asc
select product_name , product_type_code from products
select product_price from products where product_name = `` dining '' or product_name = `` trading policy ''
select avg ( product_price ) from products
select product_name from products order by product_price desc limit 1
select product_type_code , count ( * ) from products group by product_type_code
select product_type_code from products group by product_type_code order by count ( * ) desc limit 1
select product_type_code from products group by product_type_code having count ( * ) > = 2
select product_type_code from products where product_price > 4500 intersect select product_type_code from products where product_price < 3000
select t1.product_name , count ( * ) from products as t1 join products_in_events as t2 on t1.product_id = t2.product_id group by t1.product_name
select t1.product_name , count ( * ) from products as t1 join products_in_events as t2 on t1.product_id = t2.product_id group by t1.product_name order by count ( * ) desc
select t1.product_name from products as t1 join products_in_events as t2 on t1.product_id = t2.product_id group by t1.product_name having count ( * ) > = 2
select t1.product_name from products as t1 join products_in_events as t2 on t1.product_id = t2.product_id group by t1.product_name having count ( * ) > = 2 order by t1.product_name
select product_name from products where product_id not in ( select product_id from products_in_events )
select count ( * ) from artwork
select name from artwork order by name asc
select name from artwork where type ! = `` program talent show ''
select festival_name , location from festival_detail
select chair_name from festival_detail order by year asc
select location from festival_detail order by num_of_audience desc limit 1
select festival_name from festival_detail where year = 2007
select avg ( num_of_audience ) from festival_detail
select festival_name from festival_detail order by year desc limit 3
select t2.name , t3.festival_name from nomination as t1 join artwork as t2 on t1.artwork_id = t2.artwork_id join festival_detail as t3 on t1.festival_id = t3.festival_id
select distinct t2.type from nomination as t1 join artwork as t2 on t1.artwork_id = t2.artwork_id join festival_detail as t3 on t1.festival_id = t3.festival_id where t3.year = 2007
select t2.name from nomination as t1 join artwork as t2 on t1.artwork_id = t2.artwork_id join festival_detail as t3 on t1.festival_id = t3.festival_id order by t3.year
select t3.festival_name from nomination as t1 join artwork as t2 on t1.artwork_id = t2.artwork_id join festival_detail as t3 on t1.festival_id = t3.festival_id where t2.type = `` program talent show ''
select t1.festival_id , t3.festival_name from nomination as t1 join artwork as t2 on t1.artwork_id = t2.artwork_id join festival_detail as t3 on t1.festival_id = t3.festival_id group by t1.festival_id having count ( * ) > = 2
select t1.festival_id , t3.festival_name , count ( * ) from nomination as t1 join artwork as t2 on t1.artwork_id = t2.artwork_id join festival_detail as t3 on t1.festival_id = t3.festival_id group by t1.festival_id
select type , count ( * ) from artwork group by type
select type from artwork group by type order by count ( * ) desc limit 1
select year from festival_detail group by year having count ( * ) > 1
select name from artwork where artwork_id not in ( select artwork_id from nomination )
select num_of_audience from festival_detail where year = 2008 or year = 2010
select sum ( num_of_audience ) from festival_detail
select year from festival_detail where location = 'united states ' intersect select year from festival_detail where location ! = 'united states '
select count ( * ) from premises
select distinct premises_type from premises
select premises_type , premise_details from premises order by premises_type
select premises_type , count ( * ) from premises group by premises_type
select product_category , count ( * ) from mailshot_campaigns group by product_category
select customer_name , customer_phone from customers where customer_id not in ( select customer_id from mailshot_customers )
select t1.customer_name , t1.customer_phone from customers as t1 join mailshot_customers as t2 on t1.customer_id = t2.customer_id where t2.outcome_code = 'no response '
select outcome_code , count ( * ) from mailshot_customers group by outcome_code
select t2.customer_name from mailshot_customers as t1 join customers as t2 on t1.customer_id = t2.customer_id where outcome_code = 'order ' group by t1.customer_id having count ( * ) > = 2
select t2.customer_name from mailshot_customers as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t2.customer_name , t2.payment_method from mailshot_customers as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.outcome_code = 'order ' intersect select t2.customer_name , t2.payment_method from mailshot_customers as t1 join customers as t2 on t1.customer_id = t2.customer_id where t1.outcome_code = 'no response '
select t2.premises_type , t1.address_type_code from customer_addresses as t1 join premises as t2 on t1.premise_id = t2.premise_id
select distinct address_type_code from customer_addresses
select order_shipping_charges , customer_id from customer_orders where order_status_code = 'cancelled ' or order_status_code = 'paid '
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where shipping_method_code = 'fedex ' and order_status_code = 'paid '
select count ( * ) from course
select count ( * ) from course
select count ( * ) from course where credits > 2
select count ( * ) from course where credits > 2
select cname from course where credits = 1
select cname from course where credits = 1
select cname from course where days = `` mtw ''
select cname from course where days = `` mtw ''
select count ( * ) from department where division = `` as ''
select count ( * ) from department where division = `` as ''
select dphone from department where room = 268
select dphone from department where room = 268
select count ( distinct stuid ) from enrolled_in where grade = `` b ''
select count ( distinct stuid ) from enrolled_in where grade = `` b ''
select max ( gradepoint ) , min ( gradepoint ) from gradeconversion
select max ( gradepoint ) , min ( gradepoint ) from gradeconversion
select distinct fname from student where fname like ' % a % '
select distinct fname from student where fname like ' % a % '
select fname , lname from faculty where sex = `` m '' and building = `` neb ''
select fname , lname from faculty where sex = `` m '' and building = `` neb ''
select room from faculty where rank = `` professor '' and building = `` neb ''
select room from faculty where rank = `` professor '' and building = `` neb ''
select dname from department where building = `` mergenthaler ''
select dname from department where building = `` mergenthaler ''
select * from course order by credits
select * from course order by credits
select cname from course order by credits
select cname from course order by credits
select fname from student order by age desc
select fname from student order by age desc
select lname from student where sex = `` f '' order by age desc
select lname from student where sex = `` f '' order by age desc
select lname from faculty where building = `` barton '' order by lname
select lname from faculty where building = `` barton '' order by lname
select fname from faculty where rank = `` professor '' order by fname
select fname from faculty where rank = `` professor '' order by fname
select t1.dname from department as t1 join minor_in as t2 on t1.dno = t2.dno group by t2.dno order by count ( * ) desc limit 1
select t1.dname from department as t1 join minor_in as t2 on t1.dno = t2.dno group by t2.dno order by count ( * ) desc limit 1
select dname from department except select t1.dname from department as t1 join minor_in as t2 on t1.dno = t2.dno
select dname from department except select t1.dname from department as t1 join minor_in as t2 on t1.dno = t2.dno
select t1.dname from department as t1 join member_of as t2 on t1.dno = t2.dno group by t2.dno order by count ( * ) asc limit 1
select t1.dname from department as t1 join member_of as t2 on t1.dno = t2.dno group by t2.dno order by count ( * ) asc limit 1
select rank from faculty group by rank order by count ( * ) asc limit 1
select rank from faculty group by rank order by count ( * ) asc limit 1
select t2.fname , t2.lname from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count ( * ) desc limit 3
select t2.fname , t2.lname from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count ( * ) desc limit 3
select t2.building from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count ( * ) desc limit 1
select t2.building from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count ( * ) desc limit 1
select t1.cname from course as t1 join enrolled_in as t2 on t1.cid = t2.cid group by t2.cid having count ( * ) > = 5
select t1.cname from course as t1 join enrolled_in as t2 on t1.cid = t2.cid group by t2.cid having count ( * ) > = 5
select t2.fname , t2.lname from course as t1 join faculty as t2 on t1.instructor = t2.facid where t1.cname = `` computer literacy ''
select t2.fname , t2.lname from course as t1 join faculty as t2 on t1.instructor = t2.facid where t1.cname = `` computer literacy ''
select t2.dname , t2.room from course as t1 join department as t2 on t1.dno = t2.dno where t1.cname = `` introduction to computer science ''
select t2.dname , t2.room from course as t1 join department as t2 on t1.dno = t2.dno where t1.cname = `` introduction to computer science ''
select t3.fname , t3.lname , t2.gradepoint from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid
select t3.fname , t3.lname , t2.gradepoint from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid
select distinct t3.fname from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid where t2.gradepoint > = 3.8
select distinct t3.fname from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid where t2.gradepoint > = 3.8
select t1.fname , t1.lname from faculty as t1 join member_of as t2 on t1.facid = t2.facid where t2.dno = 520
select t1.fname , t1.lname from faculty as t1 join member_of as t2 on t1.facid = t2.facid where t2.dno = 520
select t2.fname , t2.lname from minor_in as t1 join student as t2 on t1.stuid = t2.stuid where t1.dno = 140
select t2.fname , t2.lname from minor_in as t1 join student as t2 on t1.stuid = t2.stuid where t1.dno = 140
select t2.lname from department as t1 join faculty as t2 on t1.dno = t3.dno join member_of as t3 on t2.facid = t3.facid where t1.dname = `` computer science ''
select t2.lname from department as t1 join faculty as t2 on t1.dno = t3.dno join member_of as t3 on t2.facid = t3.facid where t1.dname = `` computer science ''
select avg ( t2.gradepoint ) from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid where t3.lname = `` smith ''
select avg ( t2.gradepoint ) from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid where t3.lname = `` smith ''
select max ( t2.gradepoint ) , min ( t2.gradepoint ) from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid where t3.city_code = `` nyc ''
select max ( t2.gradepoint ) , min ( t2.gradepoint ) from enrolled_in as t1 join gradeconversion as t2 join student as t3 on t1.grade = t2.lettergrade and t1.stuid = t3.stuid where t3.city_code = `` nyc ''
select cname from course where credits = 3 union select cname from course where credits = 1 and hours = 4
select cname from course where credits = 3 union select cname from course where credits = 1 and hours = 4
select dname from department where division = `` as '' union select dname from department where division = `` en '' and building = `` neb ''
select dname from department where division = `` as '' union select dname from department where division = `` en '' and building = `` neb ''
select fname from student where stuid not in ( select stuid from enrolled_in )
select fname from student where stuid not in ( select stuid from enrolled_in )
select product_id from product_suppliers order by total_amount_purchased desc limit 3
select product_id from product_suppliers order by total_amount_purchased desc limit 3
select product_id , product_type_code from products order by product_price limit 1
select product_id , product_type_code from products order by product_price limit 1
select count ( distinct product_type_code ) from products
select count ( distinct product_type_code ) from products
select t1.address_details from addresses as t1 join customer_addresses as t2 on t1.address_id = t2.address_id where t2.customer_id = 10
select t1.address_details from addresses as t1 join customer_addresses as t2 on t1.address_id = t2.address_id where t2.customer_id = 10
select t1.staff_id , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.job_title_code = `` department manager ''
select t1.staff_id , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.job_title_code = `` department manager ''
select payment_method_code , count ( * ) from customers group by payment_method_code
select payment_method_code , count ( * ) from customers group by payment_method_code
select product_id from order_items group by product_id order by count ( * ) desc limit 1
select product_id from order_items group by product_id order by count ( * ) desc limit 1
select t1.customer_name , t1.customer_phone , t1.customer_email from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id group by t2.customer_id order by count ( * ) desc limit 1
select t1.customer_name , t1.customer_phone , t1.customer_email from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id group by t2.customer_id order by count ( * ) desc limit 1
select product_type_code , avg ( product_price ) from products group by product_type_code
select product_type_code , avg ( product_price ) from products group by product_type_code
select count ( * ) from department_stores as t1 join department_store_chain as t2 on t1.dept_store_chain_id = t2.dept_store_chain_id where t2.dept_store_chain_name = `` south ''
select count ( * ) from department_stores as t1 join department_store_chain as t2 on t1.dept_store_chain_id = t2.dept_store_chain_id where t2.dept_store_chain_name = `` south ''
select t1.staff_name , t2.job_title_code from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id order by t2.date_assigned_to desc limit 1
select t1.staff_name , t2.job_title_code from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id order by t2.date_assigned_to desc limit 1
select t2.product_type_code , t2.product_name , t2.product_price from product_suppliers as t1 join products as t2 on t1.product_id = t2.product_id where t1.supplier_id = 3
select t2.product_type_code , t2.product_name , t2.product_price from product_suppliers as t1 join products as t2 on t1.product_id = t2.product_id where t1.supplier_id = 3
select distinct t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = `` pending '' order by t2.customer_id
select distinct t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = `` pending '' order by t2.customer_id
select t1.customer_name , t1.customer_address from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = `` new '' intersect select t1.customer_name , t1.customer_address from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = `` pending ''
select t1.customer_name , t1.customer_address from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = `` new '' intersect select t1.customer_name , t1.customer_address from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = `` pending ''
select t1.product_id from product_suppliers as t1 join products as t2 on t1.product_id = t2.product_id where t1.supplier_id = 2 and t2.product_price > ( select avg ( product_price ) from products )
select t1.product_id from product_suppliers as t1 join products as t2 on t1.product_id = t2.product_id where t1.supplier_id = 2 and t2.product_price > ( select avg ( product_price ) from products )
select t2.dept_store_id , t2.store_name from departments as t1 join department_stores as t2 on t1.dept_store_id = t2.dept_store_id where t1.department_name = `` marketing '' intersect select t2.dept_store_id , t2.store_name from departments as t1 join department_stores as t2 on t1.dept_store_id = t2.dept_store_id where t1.department_name = `` managing ''
select t2.dept_store_id , t2.store_name from departments as t1 join department_stores as t2 on t1.dept_store_id = t2.dept_store_id where t1.department_name = `` marketing '' intersect select t2.dept_store_id , t2.store_name from departments as t1 join department_stores as t2 on t1.dept_store_id = t2.dept_store_id where t1.department_name = `` managing ''
select dept_store_chain_id from department_stores group by dept_store_chain_id order by count ( * ) desc limit 2
select dept_store_chain_id from department_stores group by dept_store_chain_id order by count ( * ) desc limit 2
select department_id from staff_department_assignments group by department_id order by count ( * ) limit 1
select department_id from staff_department_assignments group by department_id order by count ( * ) limit 1
select product_type_code , max ( product_price ) , min ( product_price ) from products group by product_type_code
select product_type_code , max ( product_price ) , min ( product_price ) from products group by product_type_code
select product_type_code from products group by product_type_code having avg ( product_price ) > ( select avg ( product_price ) from products )
select product_type_code from products group by product_type_code having avg ( product_price ) > ( select avg ( product_price ) from products )
select t1.staff_id , t1.staff_name from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id order by date_assigned_to - date_assigned_from limit 1
select t1.staff_id , t1.staff_name from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id order by date_assigned_to - date_assigned_from limit 1
select product_name , product_id from products where product_price between 600 and 700
select product_name , product_id from products where product_price between 600 and 700
select distinct customer_id from customer_orders where order_date > ( select min ( order_date ) from customer_orders where order_status_code = `` cancelled '' )
select distinct customer_id from customer_orders where order_date > ( select min ( order_date ) from customer_orders where order_status_code = `` cancelled '' )
select staff_id from staff_department_assignments where date_assigned_to < ( select max ( date_assigned_to ) from staff_department_assignments where job_title_code = 'clerical staff ' )
select staff_id from staff_department_assignments where date_assigned_to < ( select max ( date_assigned_to ) from staff_department_assignments where job_title_code = 'clerical staff ' )
select customer_name , customer_id from customers where customer_address like `` % tn % ''
select customer_name , customer_id from customers where customer_address like `` % tn % ''
select t1.staff_name , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.date_assigned_from like `` 2016 % ''
select t1.staff_name , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.date_assigned_from like `` 2016 % ''
select t1.staff_name from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id group by t2.staff_id having count ( * ) > 1
select t1.staff_name from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id group by t2.staff_id having count ( * ) > 1
select t1.supplier_name , t1.supplier_phone from suppliers as t1 join supplier_addresses as t2 on t1.supplier_id = t2.supplier_id join addresses as t3 on t2.address_id = t3.address_id order by t3.address_details
select t1.supplier_name , t1.supplier_phone from suppliers as t1 join supplier_addresses as t2 on t1.supplier_id = t2.supplier_id join addresses as t3 on t2.address_id = t3.address_id order by t3.address_details
select customer_phone from customers union select supplier_phone from suppliers
select customer_phone from customers union select supplier_phone from suppliers
select product_id from order_items group by product_id having count ( * ) > 3 union select product_id from product_suppliers group by product_id having sum ( total_amount_purchased ) > 80000
select product_id from order_items group by product_id having count ( * ) > 3 union select product_id from product_suppliers group by product_id having sum ( total_amount_purchased ) > 80000
select product_id , product_name from products where product_price < 600 or product_price > 900
select product_id , product_name from products where product_price < 600 or product_price > 900
select supplier_id from product_suppliers group by supplier_id having avg ( total_amount_purchased ) > 50000 or avg ( total_amount_purchased ) < 30000
select supplier_id from product_suppliers group by supplier_id having avg ( total_amount_purchased ) > 50000 or avg ( total_amount_purchased ) < 30000
select avg ( total_amount_purchased ) , avg ( total_value_purchased ) from product_suppliers where supplier_id = ( select supplier_id from product_suppliers group by supplier_id order by count ( * ) desc limit 1 )
select avg ( total_amount_purchased ) , avg ( total_value_purchased ) from product_suppliers where supplier_id = ( select supplier_id from product_suppliers group by supplier_id order by count ( * ) desc limit 1 )
select max ( customer_code ) , min ( customer_code ) from customers
select max ( customer_code ) , min ( customer_code ) from customers
select distinct t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_name = `` keyboard ''
select distinct t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_name = `` keyboard ''
select distinct t1.supplier_name , t1.supplier_phone from suppliers as t1 join product_suppliers as t2 on t1.supplier_id = t2.supplier_id join products as t3 on t2.product_id = t3.product_id where t3.product_name = `` red jeans ''
select distinct t1.supplier_name , t1.supplier_phone from suppliers as t1 join product_suppliers as t2 on t1.supplier_id = t2.supplier_id join products as t3 on t2.product_id = t3.product_id where t3.product_name = `` red jeans ''
select max ( product_price ) , min ( product_price ) , product_type_code from products group by product_type_code order by product_type_code
select max ( product_price ) , min ( product_price ) , product_type_code from products group by product_type_code order by product_type_code
select order_id , customer_id from customer_orders where order_status_code = `` cancelled '' order by order_date
select order_id , customer_id from customer_orders where order_status_code = `` cancelled '' order by order_date
select distinct t3.product_name from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id join products as t3 on t2.product_id = t3.product_id group by t3.product_id having count ( distinct t1.customer_id ) > = 2
select distinct t3.product_name from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id join products as t3 on t2.product_id = t3.product_id group by t3.product_id having count ( distinct t1.customer_id ) > = 2
select distinct t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_id having count ( distinct t3.product_id ) > = 3
select distinct t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_id having count ( distinct t3.product_id ) > = 3
select t1.staff_name , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.job_title_code = `` sales person '' except select t1.staff_name , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.job_title_code = `` clerical staff ''
select t1.staff_name , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.job_title_code = `` sales person '' except select t1.staff_name , t1.staff_gender from staff as t1 join staff_department_assignments as t2 on t1.staff_id = t2.staff_id where t2.job_title_code = `` clerical staff ''
select customer_id , customer_name from customers where customer_address like `` % wy % '' and payment_method_code ! = `` credit card ''
select customer_id , customer_name from customers where customer_address like `` % wy % '' and payment_method_code ! = `` credit card ''
select avg ( product_price ) from products where product_type_code = 'clothes '
select avg ( product_price ) from products where product_type_code = 'clothes '
select product_name from products where product_type_code = 'hardware ' order by product_price desc limit 1
select product_name from products where product_type_code = 'hardware ' order by product_price desc limit 1
select count ( * ) from aircraft
select count ( * ) from aircraft
select description from aircraft
select description from aircraft
select avg ( international_passengers ) from airport
select avg ( international_passengers ) from airport
select international_passengers , domestic_passengers from airport where airport_name = `` london heathrow ''
select international_passengers , domestic_passengers from airport where airport_name = `` london heathrow ''
select sum ( domestic_passengers ) from airport where airport_name like `` % london % ''
select sum ( domestic_passengers ) from airport where airport_name like `` % london % ''
select max ( transit_passengers ) , min ( transit_passengers ) from airport
select max ( transit_passengers ) , min ( transit_passengers ) from airport
select name from pilot where age > = 25
select name from pilot where age > = 25
select name from pilot order by name asc
select name from pilot order by name asc
select name from pilot where age < = 30 order by name desc
select name from pilot where age < = 30 order by name desc
select t1.aircraft from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.airport_name = `` london gatwick ''
select t1.aircraft from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.airport_name = `` london gatwick ''
select t1.aircraft , t1.description from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.total_passengers > 10000000
select t1.aircraft , t1.description from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.total_passengers > 10000000
select avg ( t3.total_passengers ) from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t1.aircraft = `` robinson r-22 ''
select avg ( t3.total_passengers ) from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t1.aircraft = `` robinson r-22 ''
select t2.location , t1.aircraft from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft
select t2.location , t1.aircraft from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft
select t1.aircraft from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft group by t2.winning_aircraft order by count ( * ) desc limit 1
select t1.aircraft from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft group by t2.winning_aircraft order by count ( * ) desc limit 1
select t1.aircraft , count ( * ) from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft group by t2.winning_aircraft
select t1.aircraft , count ( * ) from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft group by t2.winning_aircraft
select name from pilot order by age desc
select name from pilot order by age desc
select t1.aircraft from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft group by t2.winning_aircraft having count ( * ) > = 2
select t1.aircraft from aircraft as t1 join match as t2 on t1.aircraft_id = t2.winning_aircraft group by t2.winning_aircraft having count ( * ) > = 2
select aircraft from aircraft where aircraft_id not in ( select winning_aircraft from match )
select aircraft from aircraft where aircraft_id not in ( select winning_aircraft from match )
select t1.aircraft from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.airport_name = `` london heathrow '' intersect select t1.aircraft from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.airport_name = `` london gatwick ''
select t1.aircraft from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.airport_name = `` london heathrow '' intersect select t1.aircraft from aircraft as t1 join airport_aircraft as t2 on t1.aircraft_id = t2.aircraft_id join airport as t3 on t2.airport_id = t3.airport_id where t3.airport_name = `` london gatwick ''
select * from airport order by international_passengers desc limit 1
select * from airport order by international_passengers desc limit 1
select t1.name , t1.age from pilot as t1 join match as t2 on t1.pilot_id = t2.winning_pilot where t1.age < 30 group by t2.winning_pilot order by count ( * ) desc limit 1
select t1.name , t1.age from pilot as t1 join match as t2 on t1.pilot_id = t2.winning_pilot where t1.age < 30 group by t2.winning_pilot order by count ( * ) desc limit 1
select t1.name , t1.age from pilot as t1 join match as t2 on t1.pilot_id = t2.winning_pilot order by t1.age limit 1
select t1.name , t1.age from pilot as t1 join match as t2 on t1.pilot_id = t2.winning_pilot order by t1.age limit 1
select name from pilot where pilot_id not in ( select winning_pilot from match where country = 'australia ' )
select name from pilot where pilot_id not in ( select winning_pilot from match where country = 'australia ' )
select t1.property_id , count ( * ) from properties as t1 join residents as t2 on t1.property_id = t2.property_id group by t1.property_id
select distinct t1.service_type_code from services as t1 join organizations as t2 on t1.organization_id = t2.organization_id where t2.organization_details = 'denesik and sons party '
select t1.resident_id , t1.other_details , count ( * ) from residents as t1 join residents_services as t2 on t1.resident_id = t2.resident_id group by t1.resident_id order by count ( * ) desc
select t1.service_id , t1.service_details , count ( * ) from services as t1 join residents_services as t2 on t1.service_id = t2.service_id group by t1.service_id order by count ( * ) desc limit 1
select t1.thing_id , t1.type_of_thing_code , t2.organization_details from things as t1 join organizations as t2 on t1.organization_id = t2.organization_id
select t1.customer_id , t1.customer_details from customers as t1 join customer_events as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > = 3
select t2.date_moved_in , t1.customer_id , t1.customer_details from customers as t1 join customer_events as t2 on t1.customer_id = t2.customer_id
select t1.customer_event_id , t1.property_id from customer_events as t1 join customer_event_notes as t2 on t1.customer_event_id = t2.customer_event_id group by t1.customer_event_id having count ( * ) between 1 and 3
select distinct t2.thing_id , t2.type_of_thing_code from timed_status_of_things as t1 join things as t2 on t1.thing_id = t2.thing_id where t1.status_of_thing_code = 'close ' or t1.date_and_date < '2017-06-19 02:59:21 '
select count ( distinct t2.location_code ) from things as t1 join timed_locations_of_things as t2 on t1.thing_id = t2.thing_id where t1.service_details = 'unsatisfied '
select count ( distinct status_of_thing_code ) from timed_status_of_things
select organization_id from organizations except select parent_organization_id from organizations
select max ( date_moved_in ) from residents
select other_details from residents where other_details like ' % miss % '
select customer_event_id , date_moved_in , property_id from customer_events
select count ( * ) from customers where customer_id not in ( select customer_id from customer_events )
select distinct date_moved_in from residents
select count ( * ) from school
select count ( * ) from school
select location from school order by enrollment asc
select location from school order by enrollment asc
select location from school order by founded desc
select location from school order by founded desc
select enrollment from school where denomination ! = `` catholic ''
select enrollment from school where denomination ! = `` catholic ''
select avg ( enrollment ) from school
select avg ( enrollment ) from school
select team from player order by team asc
select team from player order by team asc
select count ( distinct position ) from player
select count ( distinct position ) from player
select team from player order by age desc limit 1
select team from player order by age desc limit 1
select team from player order by age desc limit 5
select team from player order by age desc limit 5
select t1.team , t2.location from player as t1 join school as t2 on t1.school_id = t2.school_id
select t1.team , t2.location from player as t1 join school as t2 on t1.school_id = t2.school_id
select t2.location from player as t1 join school as t2 on t1.school_id = t2.school_id group by t1.school_id having count ( * ) > 1
select t2.location from player as t1 join school as t2 on t1.school_id = t2.school_id group by t1.school_id having count ( * ) > 1
select t2.denomination from player as t1 join school as t2 on t1.school_id = t2.school_id group by t1.school_id order by count ( * ) desc limit 1
select t2.denomination from player as t1 join school as t2 on t1.school_id = t2.school_id group by t1.school_id order by count ( * ) desc limit 1
select t1.location , t2.nickname from school as t1 join school_details as t2 on t1.school_id = t2.school_id
select t1.location , t2.nickname from school as t1 join school_details as t2 on t1.school_id = t2.school_id
select denomination , count ( * ) from school group by denomination
select denomination , count ( * ) from school group by denomination
select denomination , count ( * ) from school group by denomination order by count ( * ) desc
select denomination , count ( * ) from school group by denomination order by count ( * ) desc
select school_colors from school order by enrollment desc limit 1
select school_colors from school order by enrollment desc limit 1
select location from school where school_id not in ( select school_id from player )
select location from school where school_id not in ( select school_id from player )
select denomination from school where founded < 1890 intersect select denomination from school where founded > 1900
select denomination from school where founded < 1890 intersect select denomination from school where founded > 1900
select nickname from school_details where division ! = `` division 1 ''
select nickname from school_details where division ! = `` division 1 ''
select denomination from school group by denomination having count ( * ) > 1
select denomination from school group by denomination having count ( * ) > 1
select distinct district_name from district order by city_area desc
select distinct district_name from district order by city_area desc
select max_page_size from product group by max_page_size having count ( * ) > 3
select max_page_size from product group by max_page_size having count ( * ) > 3
select district_name , city_population from district where city_population between 200000 and 2000000
select district_name , city_population from district where city_population between 200000 and 2000000
select district_name from district where city_area > 10 or city_population > 100000
select district_name from district where city_area > 10 or city_population > 100000
select district_name from district order by city_population desc limit 1
select district_name from district order by city_population desc limit 1
select district_name from district order by city_area asc limit 1
select district_name from district order by city_area asc limit 1
select sum ( city_population ) from district order by city_area desc limit 3
select sum ( city_population ) from district order by city_area desc limit 3
select type , count ( * ) from store group by type
select type , count ( * ) from store group by type
select t1.store_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t3.district_name = `` khanewal district ''
select t1.store_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t3.district_name = `` khanewal district ''
select t1.store_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id where district_id = ( select district_id from district order by city_population desc limit 1 )
select t1.store_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id where district_id = ( select district_id from district order by city_population desc limit 1 )
select t3.headquartered_city from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t1.store_name = `` blackville ''
select t3.headquartered_city from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t1.store_name = `` blackville ''
select t3.headquartered_city , count ( * ) from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id group by t3.headquartered_city
select t3.headquartered_city , count ( * ) from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id group by t3.headquartered_city
select t3.headquartered_city from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id group by t3.headquartered_city order by count ( * ) desc limit 1
select t3.headquartered_city from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id group by t3.headquartered_city order by count ( * ) desc limit 1
select avg ( pages_per_minute_color ) from product
select avg ( pages_per_minute_color ) from product
select t1.product from product as t1 join store_product as t2 on t1.product_id = t2.product_id join store as t3 on t2.store_id = t3.store_id where t3.store_name = `` miramichi ''
select t1.product from product as t1 join store_product as t2 on t1.product_id = t2.product_id join store as t3 on t2.store_id = t3.store_id where t3.store_name = `` miramichi ''
select product from product where max_page_size = `` a4 '' and pages_per_minute_color < 5
select product from product where max_page_size = `` a4 '' and pages_per_minute_color < 5
select product from product where max_page_size = `` a4 '' or pages_per_minute_color < 5
select product from product where max_page_size = `` a4 '' or pages_per_minute_color < 5
select product from product where product like `` % scanner % ''
select product from product where product like `` % scanner % ''
select max_page_size from product group by max_page_size order by count ( * ) desc limit 1
select max_page_size from product group by max_page_size order by count ( * ) desc limit 1
select product from product where product ! = ( select max_page_size from product group by max_page_size order by count ( * ) desc limit 1 )
select product from product where product ! = ( select max_page_size from product group by max_page_size order by count ( * ) desc limit 1 )
select sum ( city_population ) from district where city_area > ( select avg ( city_area ) from district )
select sum ( city_population ) from district where city_area > ( select avg ( city_area ) from district )
select t3.district_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t1.type = `` city mall '' intersect select t3.district_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t1.type = `` village store ''
select t3.district_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t1.type = `` city mall '' intersect select t3.district_name from store as t1 join store_district as t2 on t1.store_id = t2.store_id join district as t3 on t2.district_id = t3.district_id where t1.type = `` village store ''
select sum ( enr ) from college
select sum ( enr ) from college
select avg ( enr ) from college
select avg ( enr ) from college
select count ( * ) from college
select count ( * ) from college
select count ( * ) from player where hs > 1000
select count ( * ) from player where hs > 1000
select count ( * ) from college where enr > 15000
select count ( * ) from college where enr > 15000
select avg ( hs ) from player
select avg ( hs ) from player
select pname , hs from player where hs < 1500
select pname , hs from player where hs < 1500
select count ( distinct cname ) from tryout
select count ( distinct cname ) from tryout
select count ( distinct ppos ) from tryout
select count ( distinct ppos ) from tryout
select count ( * ) from tryout where decision = 'yes '
select count ( * ) from tryout where decision = 'yes '
select count ( * ) from tryout where ppos = 'goalie '
select count ( * ) from tryout where ppos = 'goalie '
select avg ( hs ) , max ( hs ) , min ( hs ) from player
select avg ( hs ) , max ( hs ) , min ( hs ) from player
select avg ( enr ) from college where state = 'fl '
select avg ( enr ) from college where state = 'fl '
select pname from player where hs between 500 and 1500
select pname from player where hs between 500 and 1500
select distinct pname from player where pname like ' % a % '
select distinct pname from player where pname like ' % a % '
select cname , enr from college where enr > 10000 and state = `` la ''
select cname , enr from college where enr > 10000 and state = `` la ''
select * from college order by enr
select * from college order by enr
select cname from college where enr > 18000 order by cname
select cname from college where enr > 18000 order by cname
select pname from player where ycard = 'yes ' order by hs desc
select pname from player where ycard = 'yes ' order by hs desc
select distinct cname from tryout order by cname
select distinct cname from tryout order by cname
select ppos from tryout group by ppos order by count ( * ) desc limit 1
select ppos from tryout group by ppos order by count ( * ) desc limit 1
select count ( * ) , cname from tryout group by cname order by count ( * ) desc
select count ( * ) , cname from tryout group by cname order by count ( * ) desc
select min ( t2.hs ) , t1.ppos from tryout as t1 join player as t2 on t1.pid = t2.pid group by t1.ppos
select min ( t2.hs ) , t1.ppos from tryout as t1 join player as t2 on t1.pid = t2.pid group by t1.ppos
select cname from college order by enr desc limit 3
select cname from college order by enr desc limit 3
select cname , state , min ( enr ) from college group by state
select cname , state , min ( enr ) from college group by state
select distinct state from college as t1 join tryout as t2 on t1.cname = t2.cname
select distinct state from college as t1 join tryout as t2 on t1.cname = t2.cname
select distinct t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.decision = 'yes '
select distinct t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.decision = 'yes '
select t1.pname , t2.cname from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes '
select t1.pname , t2.cname from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes '
select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid order by t1.pname
select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid order by t1.pname
select t1.pname , t1.hs from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes '
select t1.pname , t1.hs from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'striker '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'striker '
select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes ' and t2.ppos = 'striker '
select t1.pname from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes ' and t2.ppos = 'striker '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname join player as t3 on t2.pid = t3.pid where t3.pname = 'charles '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname join player as t3 on t2.pid = t3.pid where t3.pname = 'charles '
select avg ( t1.hs ) , max ( t1.hs ) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes '
select avg ( t1.hs ) , max ( t1.hs ) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'yes '
select avg ( t1.hs ) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'no '
select avg ( t1.hs ) from player as t1 join tryout as t2 on t1.pid = t2.pid where t2.decision = 'no '
select max ( t1.hs ) , ppos from player as t1 join tryout as t2 on t1.pid = t2.pid where t1.hs > 1000 group by t2.ppos
select max ( t1.hs ) , ppos from player as t1 join tryout as t2 on t1.pid = t2.pid where t1.hs > 1000 group by t2.ppos
select t1.cname from tryout as t1 join player as t2 on t1.pid = t2.pid where t2.pname like 'd % '
select t1.cname from tryout as t1 join player as t2 on t1.pid = t2.pid where t2.pname like 'd % '
select cname from tryout where decision = 'yes ' and ppos = 'goalie '
select cname from tryout where decision = 'yes ' and ppos = 'goalie '
select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = ( select cname from college order by enr desc limit 1 )
select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = ( select cname from college order by enr desc limit 1 )
select distinct t1.state , t1.enr from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.decision = 'yes '
select distinct t1.state , t1.enr from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.decision = 'yes '
select cname from college where enr < 13000 and state = `` az '' union select cname from college where enr > 15000 and state = `` la ''
select cname from college where enr < 13000 and state = `` az '' union select cname from college where enr > 15000 and state = `` la ''
select cname from tryout where ppos = 'goalie ' intersect select cname from tryout where ppos = 'mid '
select cname from tryout where ppos = 'goalie ' intersect select cname from tryout where ppos = 'mid '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie ' intersect select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'mid '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie ' intersect select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'mid '
select count ( * ) from ( select cname from tryout where ppos = 'goalie ' intersect select cname from tryout where ppos = 'mid ' )
select count ( * ) from ( select cname from tryout where ppos = 'goalie ' intersect select cname from tryout where ppos = 'mid ' )
select cname from tryout where ppos = 'mid ' except select cname from tryout where ppos = 'goalie '
select cname from tryout where ppos = 'mid ' except select cname from tryout where ppos = 'goalie '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'mid ' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie '
select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'mid ' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie '
select count ( * ) from ( select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'mid ' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie ' )
select count ( * ) from ( select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'mid ' except select t1.state from college as t1 join tryout as t2 on t1.cname = t2.cname where t2.ppos = 'goalie ' )
select distinct state from college where enr < ( select max ( enr ) from college )
select distinct state from college where enr < ( select max ( enr ) from college )
select distinct cname from college where enr > ( select min ( enr ) from college where state = 'fl ' )
select distinct cname from college where enr > ( select min ( enr ) from college where state = 'fl ' )
select cname from college where enr > ( select max ( enr ) from college where state = 'fl ' )
select cname from college where enr > ( select max ( enr ) from college where state = 'fl ' )
select sum ( enr ) from college where cname not in ( select cname from tryout where ppos = `` goalie '' )
select sum ( enr ) from college where cname not in ( select cname from tryout where ppos = `` goalie '' )
select count ( distinct state ) from college where enr > ( select avg ( enr ) from college )
select count ( distinct state ) from college where enr > ( select avg ( enr ) from college )
select count ( distinct state ) from college where enr < ( select avg ( enr ) from college )
select count ( distinct state ) from college where enr < ( select avg ( enr ) from college )
select count ( * ) from device
select count ( * ) from device
select carrier from device order by carrier asc
select carrier from device order by carrier asc
select carrier from device where software_platform ! = 'android '
select carrier from device where software_platform ! = 'android '
select shop_name from shop order by open_year asc
select shop_name from shop order by open_year asc
select avg ( quantity ) from stock
select avg ( quantity ) from stock
select shop_name , location from shop order by shop_name asc
select shop_name , location from shop order by shop_name asc
select count ( distinct software_platform ) from device
select count ( distinct software_platform ) from device
select open_date , open_year from shop where shop_name = `` apple ''
select open_date , open_year from shop where shop_name = `` apple ''
select shop_name from shop order by open_year desc limit 1
select shop_name from shop order by open_year desc limit 1
select t3.shop_name , t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id join shop as t3 on t1.shop_id = t3.shop_id
select t3.shop_name , t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id join shop as t3 on t1.shop_id = t3.shop_id
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id having count ( * ) > 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id having count ( * ) > 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count ( * ) desc limit 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by count ( * ) desc limit 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by sum ( t1.quantity ) desc limit 1
select t2.shop_name from stock as t1 join shop as t2 on t1.shop_id = t2.shop_id group by t1.shop_id order by sum ( t1.quantity ) desc limit 1
select software_platform , count ( * ) from device group by software_platform
select software_platform , count ( * ) from device group by software_platform
select software_platform from device group by software_platform order by count ( * ) desc
select software_platform from device group by software_platform order by count ( * ) desc
select software_platform from device group by software_platform order by count ( * ) desc limit 1
select software_platform from device group by software_platform order by count ( * ) desc limit 1
select shop_name from shop where shop_id not in ( select shop_id from stock )
select shop_name from shop where shop_id not in ( select shop_id from stock )
select location from shop where open_year > 2012 intersect select location from shop where open_year < 2008
select location from shop where open_year > 2012 intersect select location from shop where open_year < 2008
select carrier from device where device_id not in ( select device_id from stock )
select carrier from device where device_id not in ( select device_id from stock )
select t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id group by t1.device_id having count ( * ) > 1
select t2.carrier from stock as t1 join device as t2 on t1.device_id = t2.device_id group by t1.device_id having count ( * ) > 1
select count ( * ) from bookings
select count ( * ) from bookings
select order_date from bookings
select order_date from bookings
select planned_delivery_date , actual_delivery_date from bookings
select planned_delivery_date , actual_delivery_date from bookings
select count ( * ) from customers
select count ( * ) from customers
select customer_phone , customer_email_address from customers where customer_name = `` harold ''
select customer_phone , customer_email_address from customers where customer_name = `` harold ''
select store_name from drama_workshop_groups
select store_name from drama_workshop_groups
select min ( order_quantity ) , avg ( order_quantity ) , max ( order_quantity ) from invoices
select min ( order_quantity ) , avg ( order_quantity ) , max ( order_quantity ) from invoices
select distinct payment_method_code from invoices
select distinct payment_method_code from invoices
select marketing_region_descriptrion from marketing_regions where marketing_region_name = `` china ''
select marketing_region_descriptrion from marketing_regions where marketing_region_name = `` china ''
select distinct product_name from products where product_price > ( select avg ( product_price ) from products )
select distinct product_name from products where product_price > ( select avg ( product_price ) from products )
select product_name from products order by product_price desc limit 1
select product_name from products order by product_price desc limit 1
select product_name from products order by product_price asc
select product_name from products order by product_price asc
select customer_phone from performers where customer_name = `` ashley ''
select customer_phone from performers where customer_name = `` ashley ''
select payment_method_code , count ( * ) from invoices group by payment_method_code
select payment_method_code , count ( * ) from invoices group by payment_method_code
select payment_method_code from invoices group by payment_method_code order by count ( * ) desc limit 1
select payment_method_code from invoices group by payment_method_code order by count ( * ) desc limit 1
select t1.city_town from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.store_name = `` fja filming ''
select t1.city_town from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.store_name = `` fja filming ''
select t1.state_county from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.marketing_region_code = `` ca ''
select t1.state_county from addresses as t1 join stores as t2 on t1.address_id = t2.address_id where t2.marketing_region_code = `` ca ''
select t1.marketing_region_name from marketing_regions as t1 join stores as t2 on t1.marketing_region_code = t2.marketing_region_code where t2.store_name = `` rob dinning ''
select t1.marketing_region_name from marketing_regions as t1 join stores as t2 on t1.marketing_region_code = t2.marketing_region_code where t2.store_name = `` rob dinning ''
select t1.service_type_description from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_price > 100
select t1.service_type_description from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_price > 100
select t1.service_type_description , t2.service_type_code , count ( * ) from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t2.service_type_code
select t1.service_type_description , t2.service_type_code , count ( * ) from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t2.service_type_code
select t1.service_type_description , t1.service_type_code from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t1.service_type_code order by count ( * ) desc limit 1
select t1.service_type_description , t1.service_type_code from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code group by t1.service_type_code order by count ( * ) desc limit 1
select t1.store_phone , t1.store_email_address from drama_workshop_groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id
select t1.store_phone , t1.store_email_address from drama_workshop_groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id
select t1.store_phone , t1.store_email_address from drama_workshop_groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id where t2.product_name = `` film ''
select t1.store_phone , t1.store_email_address from drama_workshop_groups as t1 join services as t2 on t1.workshop_group_id = t2.workshop_group_id where t2.product_name = `` film ''
select product_name , avg ( product_price ) from products group by product_name
select product_name , avg ( product_price ) from products group by product_name
select product_name from products group by product_name having avg ( product_price ) < 1000000
select product_name from products group by product_name having avg ( product_price ) < 1000000
select sum ( t1.order_quantity ) from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_name = `` photo ''
select sum ( t1.order_quantity ) from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_name = `` photo ''
select t1.other_item_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_price > 2000
select t1.other_item_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_price > 2000
select t1.actual_delivery_date from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t2.order_quantity = 1
select t1.actual_delivery_date from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t2.order_quantity = 1
select t1.order_date from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id join products as t3 on t2.product_id = t3.product_id where t3.product_price > 1000
select t1.order_date from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id join products as t3 on t2.product_id = t3.product_id where t3.product_price > 1000
select count ( distinct currency_code ) from drama_workshop_groups
select count ( distinct currency_code ) from drama_workshop_groups
select t2.store_name from addresses as t1 join drama_workshop_groups as t2 on t1.address_id = t2.address_id where t1.city_town = `` feliciaberg ''
select t2.store_name from addresses as t1 join drama_workshop_groups as t2 on t1.address_id = t2.address_id where t1.city_town = `` feliciaberg ''
select t2.store_email_address from addresses as t1 join drama_workshop_groups as t2 on t1.address_id = t2.address_id where t1.state_county = `` alaska ''
select t2.store_email_address from addresses as t1 join drama_workshop_groups as t2 on t1.address_id = t2.address_id where t1.state_county = `` alaska ''
select t1.city_town , count ( * ) from addresses as t1 join drama_workshop_groups as t2 on t1.address_id = t2.address_id group by t1.city_town
select t1.city_town , count ( * ) from addresses as t1 join drama_workshop_groups as t2 on t1.address_id = t2.address_id group by t1.city_town
select marketing_region_code from drama_workshop_groups group by marketing_region_code order by count ( * ) desc limit 1
select marketing_region_code from drama_workshop_groups group by marketing_region_code order by count ( * ) desc limit 1
select t1.city_town from addresses as t1 join customers as t2 on t1.address_id = t2.address_id except select t1.city_town from addresses as t1 join performers as t2 on t1.address_id = t2.address_id
select t1.city_town from addresses as t1 join customers as t2 on t1.address_id = t2.address_id except select t1.city_town from addresses as t1 join performers as t2 on t1.address_id = t2.address_id
select status_code from bookings group by status_code order by count ( * ) desc limit 1
select status_code from bookings group by status_code order by count ( * ) desc limit 1
select t2.store_name from bookings as t1 join drama_workshop_groups as t2 on t1.workshop_group_id = t2.workshop_group_id where t1.status_code = `` stop ''
select t2.store_name from bookings as t1 join drama_workshop_groups as t2 on t1.workshop_group_id = t2.workshop_group_id where t1.status_code = `` stop ''
select customer_name from clients except select t2.customer_name from bookings as t1 join clients as t2 on t1.customer_id = t2.client_id
select customer_name from clients except select t2.customer_name from bookings as t1 join clients as t2 on t1.customer_id = t2.client_id
select avg ( order_quantity ) from invoices where payment_method_code = `` mastercard ''
select avg ( order_quantity ) from invoices where payment_method_code = `` mastercard ''
select product_id from invoices group by product_id order by count ( * ) desc limit 1
select product_id from invoices group by product_id order by count ( * ) desc limit 1
select t1.service_type_description from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'photo ' intersect select t1.service_type_description from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'film '
select t1.service_type_description from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'photo ' intersect select t1.service_type_description from ref_service_types as t1 join services as t2 on t1.service_type_code = t2.service_type_code where t2.product_name = 'film '
select count ( * ) from band
select count ( * ) from band
select distinct label from albums
select distinct label from albums
select * from albums where year = 2012
select * from albums where year = 2012
select distinct t1.stageposition from performance as t1 join band as t2 on t1.bandmate = t2.id where firstname = `` solveig ''
select distinct t1.stageposition from performance as t1 join band as t2 on t1.bandmate = t2.id where firstname = `` solveig ''
select count ( * ) from songs
select count ( * ) from songs
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.lastname = `` heilo ''
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.lastname = `` heilo ''
select count ( * ) from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` flash ''
select count ( * ) from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` flash ''
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.firstname = `` marianne ''
select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.firstname = `` marianne ''
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` badlands ''
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` badlands ''
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` badlands '' and t1.stageposition = `` back ''
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` badlands '' and t1.stageposition = `` back ''
select count ( distinct label ) from albums
select count ( distinct label ) from albums
select label from albums group by label order by count ( * ) desc limit 1
select label from albums group by label order by count ( * ) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count ( * ) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count ( * ) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id where stageposition = `` back '' group by lastname order by count ( * ) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id where stageposition = `` back '' group by lastname order by count ( * ) desc limit 1
select title from songs where title like ' % the % '
select title from songs where title like ' % the % '
select distinct instrument from instruments
select distinct instrument from instruments
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = `` heilo '' and t3.title = `` le pop ''
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = `` heilo '' and t3.title = `` le pop ''
select instrument from instruments group by instrument order by count ( * ) desc limit 1
select instrument from instruments group by instrument order by count ( * ) desc limit 1
select count ( * ) from instruments where instrument = `` drums ''
select count ( * ) from instruments where instrument = `` drums ''
select instrument from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select instrument from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select count ( distinct instrument ) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select count ( distinct instrument ) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select count ( distinct instrument ) from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = `` heilo ''
select count ( distinct instrument ) from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = `` heilo ''
select instrument from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = `` heilo ''
select instrument from instruments as t1 join band as t2 on t1.bandmateid = t2.id where t2.lastname = `` heilo ''
select title from vocals as t1 join songs as t2 on t1.songid = t2.songid group by t1.songid order by count ( * ) desc limit 1
select title from vocals as t1 join songs as t2 on t1.songid = t2.songid group by t1.songid order by count ( * ) desc limit 1
select type from vocals group by type order by count ( * ) desc limit 1
select type from vocals group by type order by count ( * ) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where lastname = `` heilo '' group by type order by count ( * ) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where lastname = `` heilo '' group by type order by count ( * ) desc limit 1
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select count ( * ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` demon kitty rag ''
select count ( * ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` demon kitty rag ''
select count ( distinct title ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` lead ''
select count ( distinct title ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` lead ''
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.firstname = `` solveig '' and t2.title = `` a bar in amsterdam ''
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.firstname = `` solveig '' and t2.title = `` a bar in amsterdam ''
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` lead ''
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` lead ''
select distinct type from vocals
select distinct type from vocals
select * from albums where year = 2010
select * from albums where year = 2010
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` le pop ''
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` le pop ''
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count ( * ) desc limit 1
select t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by lastname order by count ( * ) desc limit 1
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = `` heilo '' and t3.title = `` badlands ''
select t4.instrument from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid join instruments as t4 on t4.songid = t3.songid and t4.bandmateid = t2.id where t2.lastname = `` heilo '' and t3.title = `` badlands ''
select count ( distinct instrument ) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = `` badlands ''
select count ( distinct instrument ) from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = `` badlands ''
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` badlands ''
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` badlands ''
select count ( * ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select count ( * ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where title = `` le pop ''
select count ( distinct title ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` shared ''
select count ( distinct title ) from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` shared ''
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` back ''
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` back ''
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = `` solveig '' group by type order by count ( * ) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = `` solveig '' group by type order by count ( * ) desc limit 1
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.lastname = `` heilo '' and t2.title = `` der kapitan ''
select type from vocals as t1 join songs as t2 on t1.songid = t2.songid join band as t3 on t1.bandmate = t3.id where t3.lastname = `` heilo '' and t2.title = `` der kapitan ''
select t2.firstname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by firstname order by count ( * ) desc limit 1
select t2.firstname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid group by firstname order by count ( * ) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = `` marianne '' group by type order by count ( * ) desc limit 1
select type from vocals as t1 join band as t2 on t1.bandmate = t2.id where firstname = `` marianne '' group by type order by count ( * ) desc limit 1
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` der kapitan '' and t1.stageposition = `` back ''
select t2.firstname , t2.lastname from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = `` der kapitan '' and t1.stageposition = `` back ''
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` back ''
select distinct title from vocals as t1 join songs as t2 on t1.songid = t2.songid except select t2.title from vocals as t1 join songs as t2 on t1.songid = t2.songid where type = `` back ''
select t3.title from albums as t1 join tracklists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.title = `` a kiss before you go : live in hamburg ''
select t3.title from albums as t1 join tracklists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.title = `` a kiss before you go : live in hamburg ''
select t3.title from albums as t1 join tracklists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.label = `` universal music group ''
select t3.title from albums as t1 join tracklists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.label = `` universal music group ''
select count ( distinct t3.title ) from albums as t1 join tracklists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.type = `` studio ''
select count ( distinct t3.title ) from albums as t1 join tracklists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.type = `` studio ''
select founder from manufacturers where name = 'sony '
select founder from manufacturers where name = 'sony '
select headquarter from manufacturers where founder = 'james '
select headquarter from manufacturers where founder = 'james '
select name , headquarter from manufacturers order by revenue desc
select name , headquarter from manufacturers order by revenue desc
select avg ( revenue ) , max ( revenue ) , sum ( revenue ) from manufacturers
select avg ( revenue ) , max ( revenue ) , sum ( revenue ) from manufacturers
select count ( * ) from manufacturers where founder = 'andy '
select count ( * ) from manufacturers where founder = 'andy '
select sum ( revenue ) from manufacturers where headquarter = 'austin '
select sum ( revenue ) from manufacturers where headquarter = 'austin '
select distinct headquarter from manufacturers
select distinct headquarter from manufacturers
select count ( * ) from manufacturers where headquarter = 'tokyo ' or headquarter = 'beijing '
select count ( * ) from manufacturers where headquarter = 'tokyo ' or headquarter = 'beijing '
select founder from manufacturers where name like 's % '
select founder from manufacturers where name like 's % '
select name from manufacturers where revenue between 100 and 150
select name from manufacturers where revenue between 100 and 150
select sum ( revenue ) from manufacturers where headquarter = 'tokyo ' or headquarter = 'taiwan '
select sum ( revenue ) from manufacturers where headquarter = 'tokyo ' or headquarter = 'taiwan '
select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'creative labs ' intersect select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'sony '
select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'creative labs ' intersect select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'sony '
select name , headquarter , founder from manufacturers order by revenue desc limit 1
select name , headquarter , founder from manufacturers order by revenue desc limit 1
select name , headquarter , revenue from manufacturers order by revenue desc
select name , headquarter , revenue from manufacturers order by revenue desc
select name from manufacturers where revenue > ( select avg ( revenue ) from manufacturers )
select name from manufacturers where revenue > ( select avg ( revenue ) from manufacturers )
select name from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = 'austin ' )
select name from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = 'austin ' )
select sum ( revenue ) from manufacturers where revenue > ( select min ( revenue ) from manufacturers where headquarter = 'austin ' )
select sum ( revenue ) from manufacturers where revenue > ( select min ( revenue ) from manufacturers where headquarter = 'austin ' )
select sum ( revenue ) , founder from manufacturers group by founder
select sum ( revenue ) , founder from manufacturers group by founder
select name , max ( revenue ) , headquarter from manufacturers group by headquarter
select name , max ( revenue ) , headquarter from manufacturers group by headquarter
select sum ( revenue ) , name from manufacturers group by name
select sum ( revenue ) , name from manufacturers group by name
select avg ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select avg ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select count ( distinct t1.name ) , t2.headquarter from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.headquarter
select count ( distinct t1.name ) , t2.headquarter from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.headquarter
select count ( distinct name ) from products where name not in ( select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'sony ' )
select count ( distinct name ) from products where name not in ( select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'sony ' )
select name from manufacturers except select t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t1.name = 'dvd drive '
select name from manufacturers except select t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t1.name = 'dvd drive '
select count ( * ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select count ( * ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select name from products
select name from products
select name , price from products
select name , price from products
select name from products where price < = 200
select name from products where price < = 200
select * from products where price between 60 and 120
select * from products where price between 60 and 120
select avg ( price ) from products
select avg ( price ) from products
select avg ( price ) from products where manufacturer = 2
select avg ( price ) from products where manufacturer = 2
select count ( * ) from products where price > = 180
select count ( * ) from products where price > = 180
select name , price from products where price > = 180 order by price desc , name asc
select name , price from products where price > = 180 order by price desc , name asc
select * from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code
select * from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code
select avg ( price ) , manufacturer from products group by manufacturer
select avg ( price ) , manufacturer from products group by manufacturer
select avg ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select avg ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select avg ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name having avg ( t1.price ) > = 150
select avg ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name having avg ( t1.price ) > = 150
select name , price from products order by price asc limit 1
select name , price from products order by price asc limit 1
select t1.name , max ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select t1.name , max ( t1.price ) , t2.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code group by t2.name
select code , name , min ( price ) from products group by name
select code , name , min ( price ) from products group by name
select problem_log_id from problem_log order by log_entry_date desc limit 1
select problem_log_id from problem_log order by log_entry_date desc limit 1
select problem_log_id , problem_id from problem_log order by log_entry_date limit 1
select problem_log_id , problem_id from problem_log order by log_entry_date limit 1
select problem_log_id , log_entry_date from problem_log where problem_id = 10
select problem_log_id , log_entry_date from problem_log where problem_id = 10
select problem_log_id , log_entry_description from problem_log
select problem_log_id , log_entry_description from problem_log
select distinct staff_first_name , staff_last_name from staff as t1 join problem_log as t2 on t1.staff_id = t2.assigned_to_staff_id where t2.problem_id = 1
select distinct staff_first_name , staff_last_name from staff as t1 join problem_log as t2 on t1.staff_id = t2.assigned_to_staff_id where t2.problem_id = 1
select distinct t2.problem_id , t2.problem_log_id from staff as t1 join problem_log as t2 on t1.staff_id = t2.assigned_to_staff_id where t1.staff_first_name = `` rylan '' and t1.staff_last_name = `` homenick ''
select distinct t2.problem_id , t2.problem_log_id from staff as t1 join problem_log as t2 on t1.staff_id = t2.assigned_to_staff_id where t1.staff_first_name = `` rylan '' and t1.staff_last_name = `` homenick ''
select count ( * ) from product as t1 join problems as t2 on t1.product_id = t2.product_id where t1.product_name = `` voluptatem ''
select count ( * ) from product as t1 join problems as t2 on t1.product_id = t2.product_id where t1.product_name = `` voluptatem ''
select count ( * ) , t1.product_name from product as t1 join problems as t2 on t1.product_id = t2.product_id group by t1.product_name order by count ( * ) desc limit 1
select count ( * ) , t1.product_name from product as t1 join problems as t2 on t1.product_id = t2.product_id group by t1.product_name order by count ( * ) desc limit 1
select t1.problem_description from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` christop ''
select t1.problem_description from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` christop ''
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_last_name = `` bosco ''
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_last_name = `` bosco ''
select problem_id from problems where date_problem_reported > `` 1978-06-26 ''
select problem_id from problems where date_problem_reported > `` 1978-06-26 ''
select problem_id from problems where date_problem_reported < `` 1978-06-26 ''
select problem_id from problems where date_problem_reported < `` 1978-06-26 ''
select count ( * ) , t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_id
select count ( * ) , t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_id
select count ( * ) , t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t1.date_problem_reported > `` 1986-11-13 '' group by t2.product_id
select count ( * ) , t2.product_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t1.date_problem_reported > `` 1986-11-13 '' group by t2.product_id
select distinct product_name from product order by product_name
select distinct product_name from product order by product_name
select distinct product_name from product order by product_id
select distinct product_name from product order by product_id
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` dameon '' and t2.staff_last_name = `` frami '' union select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` jolie '' and t2.staff_last_name = `` weber ''
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` dameon '' and t2.staff_last_name = `` frami '' union select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` jolie '' and t2.staff_last_name = `` weber ''
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` christop '' and t2.staff_last_name = `` berge '' intersect select product_id from problems as t1 join staff as t2 on t1.closure_authorised_by_staff_id = t2.staff_id where t2.staff_first_name = `` ashley '' and t2.staff_last_name = `` medhurst ''
select product_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where t2.staff_first_name = `` christop '' and t2.staff_last_name = `` berge '' intersect select product_id from problems as t1 join staff as t2 on t1.closure_authorised_by_staff_id = t2.staff_id where t2.staff_first_name = `` ashley '' and t2.staff_last_name = `` medhurst ''
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported < ( select min ( date_problem_reported ) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = `` lysanne '' and t4.staff_last_name = `` turcotte '' )
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported < ( select min ( date_problem_reported ) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = `` lysanne '' and t4.staff_last_name = `` turcotte '' )
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported > ( select max ( date_problem_reported ) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = `` rylan '' and t4.staff_last_name = `` homenick '' )
select t1.problem_id from problems as t1 join staff as t2 on t1.reported_by_staff_id = t2.staff_id where date_problem_reported > ( select max ( date_problem_reported ) from problems as t3 join staff as t4 on t3.reported_by_staff_id = t4.staff_id where t4.staff_first_name = `` rylan '' and t4.staff_last_name = `` homenick '' )
select t2.product_name from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_name order by count ( * ) desc limit 3
select t2.product_name from problems as t1 join product as t2 on t1.product_id = t2.product_id group by t2.product_name order by count ( * ) desc limit 3
select t1.problem_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t2.product_name = `` voluptatem '' and t1.date_problem_reported > `` 1995 ''
select t1.problem_id from problems as t1 join product as t2 on t1.product_id = t2.product_id where t2.product_name = `` voluptatem '' and t1.date_problem_reported > `` 1995 ''
select t3.staff_first_name , t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = `` rem '' except select t3.staff_first_name , t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = `` aut ''
select t3.staff_first_name , t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = `` rem '' except select t3.staff_first_name , t3.staff_last_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t2.product_name = `` aut ''
select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = `` lacey '' and t3.staff_last_name = `` bosco '' intersect select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = `` kenton '' and t3.staff_last_name = `` champlin ''
select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = `` lacey '' and t3.staff_last_name = `` bosco '' intersect select t2.product_name from problems as t1 join product as t2 join staff as t3 on t1.product_id = t2.product_id and t1.reported_by_staff_id = t3.staff_id where t3.staff_first_name = `` kenton '' and t3.staff_last_name = `` champlin ''
select count ( * ) from branch where membership_amount > ( select avg ( membership_amount ) from branch )
select count ( * ) from branch where membership_amount > ( select avg ( membership_amount ) from branch )
select name , address_road , city from branch order by open_year
select name , address_road , city from branch order by open_year
select name from branch order by membership_amount desc limit 3
select name from branch order by membership_amount desc limit 3
select distinct city from branch where membership_amount > = 100
select distinct city from branch where membership_amount > = 100
select open_year from branch group by open_year having count ( * ) > = 2
select open_year from branch group by open_year having count ( * ) > = 2
select min ( membership_amount ) , max ( membership_amount ) from branch where open_year = 2011 or city = 'london '
select min ( membership_amount ) , max ( membership_amount ) from branch where open_year = 2011 or city = 'london '
select city , count ( * ) from branch where open_year < 2010 group by city
select city , count ( * ) from branch where open_year < 2010 group by city
select count ( distinct level ) from member
select count ( distinct level ) from member
select card_number , name , hometown from member order by level desc
select card_number , name , hometown from member order by level desc
select level from member group by level order by count ( * ) desc limit 1
select level from member group by level order by count ( * ) desc limit 1
select t3.name , t2.name from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id order by t1.register_year
select t3.name , t2.name from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id order by t1.register_year
select t2.name , count ( * ) from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year > 2015 group by t2.branch_id
select t2.name , count ( * ) from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year > 2015 group by t2.branch_id
select name from member where member_id not in ( select member_id from membership_register_branch )
select name from member where member_id not in ( select member_id from membership_register_branch )
select name , city from branch where branch_id not in ( select branch_id from membership_register_branch )
select name , city from branch where branch_id not in ( select branch_id from membership_register_branch )
select t2.name , t2.open_year from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year = 2016 group by t2.branch_id order by count ( * ) desc limit 1
select t2.name , t2.open_year from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id where t1.register_year = 2016 group by t2.branch_id order by count ( * ) desc limit 1
select t2.name , t2.hometown from membership_register_branch as t1 join member as t2 on t1.member_id = t2.member_id where t1.register_year = 2016
select t2.name , t2.hometown from membership_register_branch as t1 join member as t2 on t1.member_id = t2.member_id where t1.register_year = 2016
select city from branch where open_year = 2001 and membership_amount > 100
select city from branch where open_year = 2001 and membership_amount > 100
select city from branch except select city from branch where membership_amount > 100
select city from branch except select city from branch where membership_amount > 100
select sum ( total_pounds ) from purchase as t1 join branch as t2 on t1.branch_id = t2.branch_id where t2.city = 'london ' and t1.year = 2018
select sum ( total_pounds ) from purchase as t1 join branch as t2 on t1.branch_id = t2.branch_id where t2.city = 'london ' and t1.year = 2018
select count ( * ) from purchase as t1 join member as t2 on t1.member_id = t2.member_id where t2.level = 6
select count ( * ) from purchase as t1 join member as t2 on t1.member_id = t2.member_id where t2.level = 6
select t2.name from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'louisville , kentucky ' intersect select t2.name from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'hiram , georgia '
select t2.name from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'louisville , kentucky ' intersect select t2.name from membership_register_branch as t1 join branch as t2 on t1.branch_id = t2.branch_id join member as t3 on t1.member_id = t3.member_id where t3.hometown = 'hiram , georgia '
select card_number from member where hometown like `` % kentucky % ''
select card_number from member where hometown like `` % kentucky % ''
select count ( * ) from student
select count ( * ) from student
select count ( * ) from voting_record
select count ( * ) from voting_record
select count ( distinct president_vote ) from voting_record
select count ( distinct president_vote ) from voting_record
select max ( age ) from student
select max ( age ) from student
select lname from student where major = 50
select lname from student where major = 50
select fname from student where age > 22
select fname from student where age > 22
select major from student where sex = `` m ''
select major from student where sex = `` m ''
select avg ( age ) from student where sex = `` f ''
select avg ( age ) from student where sex = `` f ''
select max ( age ) , min ( age ) from student where major = 600
select max ( age ) , min ( age ) from student where major = 600
select advisor from student where city_code = `` bal ''
select advisor from student where city_code = `` bal ''
select distinct secretary_vote from voting_record where election_cycle = `` fall ''
select distinct secretary_vote from voting_record where election_cycle = `` fall ''
select distinct president_vote from voting_record where registration_date = `` 08/30/2015 ''
select distinct president_vote from voting_record where registration_date = `` 08/30/2015 ''
select distinct registration_date , election_cycle from voting_record
select distinct registration_date , election_cycle from voting_record
select distinct president_vote , vice_president_vote from voting_record
select distinct president_vote , vice_president_vote from voting_record
select distinct t1.lname from student as t1 join voting_record as t2 on t1.stuid = t2.class_president_vote
select distinct t1.lname from student as t1 join voting_record as t2 on t1.stuid = t2.class_president_vote
select distinct t1.fname from student as t1 join voting_record as t2 on t1.stuid = t2.class_senator_vote
select distinct t1.fname from student as t1 join voting_record as t2 on t1.stuid = t2.class_senator_vote
select distinct t1.age from student as t1 join voting_record as t2 on t1.stuid = t2.secretary_vote where t2.election_cycle = `` fall ''
select distinct t1.age from student as t1 join voting_record as t2 on t1.stuid = t2.secretary_vote where t2.election_cycle = `` fall ''
select distinct t1.advisor from student as t1 join voting_record as t2 on t1.stuid = t2.treasurer_vote where t2.election_cycle = `` spring ''
select distinct t1.advisor from student as t1 join voting_record as t2 on t1.stuid = t2.treasurer_vote where t2.election_cycle = `` spring ''
select distinct t1.major from student as t1 join voting_record as t2 on t1.stuid = t2.treasurer_vote
select distinct t1.major from student as t1 join voting_record as t2 on t1.stuid = t2.treasurer_vote
select distinct t1.fname , t1.lname from student as t1 join voting_record as t2 on t1.stuid = t2.president_vote where t1.sex = `` f ''
select distinct t1.fname , t1.lname from student as t1 join voting_record as t2 on t1.stuid = t2.president_vote where t1.sex = `` f ''
select distinct t1.fname , t1.lname from student as t1 join voting_record as t2 on t1.stuid = t2.vice_president_vote where t1.age = 18
select distinct t1.fname , t1.lname from student as t1 join voting_record as t2 on t1.stuid = t2.vice_president_vote where t1.age = 18
select count ( * ) from student as t1 join voting_record as t2 on t1.stuid = class_senator_vote where t1.sex = `` m '' and t2.election_cycle = `` fall ''
select count ( * ) from student as t1 join voting_record as t2 on t1.stuid = class_senator_vote where t1.sex = `` m '' and t2.election_cycle = `` fall ''
select count ( * ) from student as t1 join voting_record as t2 on t1.stuid = class_senator_vote where t1.city_code = `` nyc '' and t2.election_cycle = `` spring ''
select count ( * ) from student as t1 join voting_record as t2 on t1.stuid = class_senator_vote where t1.city_code = `` nyc '' and t2.election_cycle = `` spring ''
select avg ( t1.age ) from student as t1 join voting_record as t2 on t1.stuid = secretary_vote where t1.city_code = `` nyc '' and t2.election_cycle = `` spring ''
select avg ( t1.age ) from student as t1 join voting_record as t2 on t1.stuid = secretary_vote where t1.city_code = `` nyc '' and t2.election_cycle = `` spring ''
select avg ( t1.age ) from student as t1 join voting_record as t2 on t1.stuid = secretary_vote where t1.sex = `` f '' and t2.election_cycle = `` spring ''
select avg ( t1.age ) from student as t1 join voting_record as t2 on t1.stuid = secretary_vote where t1.sex = `` f '' and t2.election_cycle = `` spring ''
select distinct t1.fname from student as t1 join voting_record as t2 on t1.stuid = t2.vice_president_vote except select distinct fname from student where city_code = `` pit ''
select distinct t1.fname from student as t1 join voting_record as t2 on t1.stuid = t2.vice_president_vote except select distinct fname from student where city_code = `` pit ''
select distinct t1.lname from student as t1 join voting_record as t2 on t1.stuid = president_vote except select distinct lname from student where advisor = `` 2192 ''
select distinct t1.lname from student as t1 join voting_record as t2 on t1.stuid = president_vote except select distinct lname from student where advisor = `` 2192 ''
select distinct t1.lname from student as t1 join voting_record as t2 on t1.stuid = president_vote intersect select distinct lname from student where advisor = `` 8741 ''
select distinct t1.lname from student as t1 join voting_record as t2 on t1.stuid = president_vote intersect select distinct lname from student where advisor = `` 8741 ''
select advisor , count ( * ) from student group by advisor
select advisor , count ( * ) from student group by advisor
select advisor from student group by advisor having count ( * ) > 2
select advisor from student group by advisor having count ( * ) > 2
select major from student group by major having count ( * ) < 3
select major from student group by major having count ( * ) < 3
select election_cycle , count ( * ) from voting_record group by election_cycle
select election_cycle , count ( * ) from voting_record group by election_cycle
select major from student group by major order by count ( * ) desc limit 1
select major from student group by major order by count ( * ) desc limit 1
select major from student where sex = `` f '' group by major order by count ( * ) desc limit 1
select major from student where sex = `` f '' group by major order by count ( * ) desc limit 1
select city_code from student group by city_code order by count ( * ) desc limit 1
select city_code from student group by city_code order by count ( * ) desc limit 1
select advisor from student group by advisor having count ( * ) > 2
select advisor from student group by advisor having count ( * ) > 2
select count ( * ) from products
select count ( * ) from products
select count ( * ) from ref_colors
select count ( * ) from ref_colors
select count ( * ) from characteristics
select count ( * ) from characteristics
select product_name , typical_buying_price from products
select product_name , typical_buying_price from products
select color_description from ref_colors
select color_description from ref_colors
select distinct characteristic_name from characteristics
select distinct characteristic_name from characteristics
select product_name from products where product_category_code = `` spices ''
select product_name from products where product_category_code = `` spices ''
select t1.product_name , t2.color_description , t1.product_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where product_category_code = `` herbs ''
select t1.product_name , t2.color_description , t1.product_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where product_category_code = `` herbs ''
select count ( * ) from products where product_category_code = `` seeds ''
select count ( * ) from products where product_category_code = `` seeds ''
select count ( * ) from products where product_category_code = `` spices '' and typical_buying_price > 1000
select count ( * ) from products where product_category_code = `` spices '' and typical_buying_price > 1000
select product_category_code , typical_buying_price from products where product_name = `` cumin ''
select product_category_code , typical_buying_price from products where product_name = `` cumin ''
select product_category_code from products where product_name = `` flax ''
select product_category_code from products where product_name = `` flax ''
select t1.product_name from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t2.color_description = 'yellow '
select t1.product_name from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t2.color_description = 'yellow '
select t1.product_category_description from ref_product_categories as t1 join products as t2 on t1.product_category_code = t2.product_category_code where t2.product_description like ' % t % '
select t1.product_category_description from ref_product_categories as t1 join products as t2 on t1.product_category_code = t2.product_category_code where t2.product_description like ' % t % '
select t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t1.product_name = `` catnip ''
select t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t1.product_name = `` catnip ''
select t1.color_code , t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t1.product_name = `` chervil ''
select t1.color_code , t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t1.product_name = `` chervil ''
select t1.product_id , t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code join product_characteristics as t3 on t1.product_id = t3.product_id group by t1.product_id having count ( * ) > = 2
select t1.product_id , t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code join product_characteristics as t3 on t1.product_id = t3.product_id group by t1.product_id having count ( * ) > = 2
select t1.product_name from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t2.color_description = `` white ''
select t1.product_name from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t2.color_description = `` white ''
select t1.product_name , t1.typical_buying_price , t1.typical_selling_price from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t2.color_description = `` yellow ''
select t1.product_name , t1.typical_buying_price , t1.typical_selling_price from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code where t2.color_description = `` yellow ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id where t1.product_name = `` sesame ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id where t1.product_name = `` sesame ''
select count ( distinct t3.characteristic_name ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` sesame ''
select count ( distinct t3.characteristic_name ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` sesame ''
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` sesame ''
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` sesame ''
select t3.characteristic_name , t3.characteristic_data_type from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` cumin ''
select t3.characteristic_name , t3.characteristic_data_type from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` cumin ''
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` sesame '' and t3.characteristic_type_code = `` grade ''
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` sesame '' and t3.characteristic_type_code = `` grade ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` laurel ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` laurel ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` flax ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = `` flax ''
select product_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join ref_colors as t4 on t1.color_code = t4.color_code where t4.color_description = `` red '' and t3.characteristic_name = `` fast ''
select product_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join ref_colors as t4 on t1.color_code = t4.color_code where t4.color_description = `` red '' and t3.characteristic_name = `` fast ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_name = `` hot ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_name = `` hot ''
select distinct t1.product_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_name = `` warm ''
select distinct t1.product_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t3.characteristic_name = `` warm ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join ref_colors as t4 on t1.color_code = t4.color_code where t4.color_description = `` red '' and t3.characteristic_name = `` slow ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join ref_colors as t4 on t1.color_code = t4.color_code where t4.color_description = `` red '' and t3.characteristic_name = `` slow ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join ref_colors as t4 on t1.color_code = t4.color_code where t4.color_description = `` white '' or t3.characteristic_name = `` hot ''
select count ( * ) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id join ref_colors as t4 on t1.color_code = t4.color_code where t4.color_description = `` white '' or t3.characteristic_name = `` hot ''
select unit_of_measure from ref_product_categories where product_category_code = `` herbs ''
select unit_of_measure from ref_product_categories where product_category_code = `` herbs ''
select product_category_description from ref_product_categories where product_category_code = `` spices ''
select product_category_description from ref_product_categories where product_category_code = `` spices ''
select product_category_description , unit_of_measure from ref_product_categories where product_category_code = `` herbs ''
select product_category_description , unit_of_measure from ref_product_categories where product_category_code = `` herbs ''
select t2.unit_of_measure from products as t1 join ref_product_categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = `` cumin ''
select t2.unit_of_measure from products as t1 join ref_product_categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = `` cumin ''
select t2.unit_of_measure , t2.product_category_code from products as t1 join ref_product_categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = `` chervil ''
select t2.unit_of_measure , t2.product_category_code from products as t1 join ref_product_categories as t2 on t1.product_category_code = t2.product_category_code where t1.product_name = `` chervil ''
select t1.product_name from products as t1 join ref_product_categories as t2 on t1.product_category_code = t2.product_category_code join ref_colors as t3 on t1.color_code = t3.color_code where t3.color_description = `` white '' and t2.unit_of_measure ! = `` handful ''
select t1.product_name from products as t1 join ref_product_categories as t2 on t1.product_category_code = t2.product_category_code join ref_colors as t3 on t1.color_code = t3.color_code where t3.color_description = `` white '' and t2.unit_of_measure ! = `` handful ''
select t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count ( * ) desc limit 1
select t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count ( * ) desc limit 1
select t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count ( * ) asc limit 1
select t2.color_description from products as t1 join ref_colors as t2 on t1.color_code = t2.color_code group by t2.color_description order by count ( * ) asc limit 1
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name order by count ( * ) desc limit 1
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name order by count ( * ) desc limit 1
select characteristic_name , other_characteristic_details , characteristic_data_type from characteristics except select t1.characteristic_name , t1.other_characteristic_details , t1.characteristic_data_type from characteristics as t1 join product_characteristics as t2 on t1.characteristic_id = t2.characteristic_id
select characteristic_name , other_characteristic_details , characteristic_data_type from characteristics except select t1.characteristic_name , t1.other_characteristic_details , t1.characteristic_data_type from characteristics as t1 join product_characteristics as t2 on t1.characteristic_id = t2.characteristic_id
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name having count ( * ) > = 2
select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name having count ( * ) > = 2
select count ( * ) from ref_colors where color_code not in ( select color_code from products )
select count ( * ) from ref_colors where color_code not in ( select color_code from products )
select count ( * ) from event
select name from event order by year desc
select name from event order by year desc limit 1
select count ( * ) from stadium
select name from stadium order by capacity desc limit 1
select name from stadium where capacity < ( select avg ( capacity ) from stadium )
select country from stadium group by country order by count ( * ) desc limit 1
select country from stadium group by country having count ( * ) < = 3
select country from stadium where capacity > 60000 intersect select country from stadium where capacity < 50000
select count ( distinct city ) from stadium where opening_year < 2006
select country , count ( * ) from stadium group by country
select country from stadium except select country from stadium where opening_year > 2006
select count ( * ) from stadium where country ! = 'russia '
select name from swimmer order by meter_100
select count ( distinct nationality ) from swimmer
select nationality , count ( * ) from swimmer group by nationality having count ( * ) > 1
select meter_200 , meter_300 from swimmer where nationality = 'australia '
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'win '
select t1.name from stadium as t1 join event as t2 on t1.id = t2.stadium_id group by t2.stadium_id order by count ( * ) desc limit 1
select t1.name , t1.capacity from stadium as t1 join event as t2 on t1.id = t2.stadium_id where t2.name = 'world junior '
select name from stadium where id not in ( select stadium_id from event )
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id group by t2.swimmer_id order by count ( * ) desc limit 1
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id group by t2.swimmer_id having count ( * ) > = 2
select t1.name , t1.nationality from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'win ' group by t2.swimmer_id having count ( * ) > 1
select name from swimmer where id not in ( select swimmer_id from record )
select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'win ' intersect select t1.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id where result = 'loss '
select t4.name from swimmer as t1 join record as t2 on t1.id = t2.swimmer_id join event as t3 on t2.event_id = t3.id join stadium as t4 on t4.id = t3.stadium_id where t1.nationality = 'australia '
select t3.name from record as t1 join event as t2 on t1.event_id = t2.id join stadium as t3 on t3.id = t2.stadium_id group by t2.stadium_id order by count ( * ) desc limit 1
select * from swimmer
select avg ( capacity ) from stadium where opening_year = 2005
select count ( * ) from railway
select builder from railway order by builder asc
select wheels , location from railway
select max ( level ) from manager where country ! = `` australia ''
select avg ( age ) from manager
select name from manager order by level asc
select name , arrival from train
select name from manager order by age desc limit 1
select t2.name , t1.location from railway as t1 join train as t2 on t1.railway_id = t2.railway_id
select t1.builder from railway as t1 join train as t2 on t1.railway_id = t2.railway_id where t2.name = `` andaman exp ''
select t2.railway_id , t1.location from railway as t1 join train as t2 on t1.railway_id = t2.railway_id group by t2.railway_id having count ( * ) > 1
select t2.railway_id , t1.builder from railway as t1 join train as t2 on t1.railway_id = t2.railway_id group by t2.railway_id order by count ( * ) desc limit 1
select builder , count ( * ) from railway group by builder
select builder from railway group by builder order by count ( * ) desc limit 1
select location , count ( * ) from railway group by location
select location from railway group by location having count ( * ) > 1
select objectnumber from railway where railway_id not in ( select railway_id from train )
select country from manager where age > 50 intersect select country from manager where age < 46
select distinct country from manager
select working_year_starts from manager order by level desc
select country from manager where age > 50 or age < 46
select count ( * ) from addresses where country = 'usa '
select distinct city from addresses
select state_province_county , count ( * ) from addresses group by state_province_county
select customer_name , customer_phone from customers where customer_id not in ( select customer_id from customer_address_history )
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select product_type_code from products group by product_type_code having count ( * ) > = 2
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = 'completed ' intersect select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t2.order_status_code = 'part '
select customer_name , customer_phone , payment_method_code from customers order by customer_number desc
select t1.product_name , sum ( t2.order_quantity ) from products as t1 join order_items as t2 on t1.product_id = t2.product_id group by t1.product_id
select min ( product_price ) , max ( product_price ) , avg ( product_price ) from products
select count ( * ) from products where product_price > ( select avg ( product_price ) from products )
select t2.customer_name , t3.city , t1.date_from , t1.date_to from customer_address_history as t1 join customers as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t1.address_id = t3.address_id
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where t1.payment_method_code = 'credit card ' group by t1.customer_id having count ( * ) > 2
select t1.customer_name , t1.customer_phone from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t3.order_id = t2.order_id group by t1.customer_id order by sum ( t3.order_quantity ) desc limit 1
select product_type_code , product_name from products where product_price > 1000 or product_price < 500
select dorm_name from dorm where gender = 'f '
select dorm_name from dorm where gender = 'f '
select dorm_name from dorm where student_capacity > 300
select dorm_name from dorm where student_capacity > 300
select count ( * ) from student where sex = 'f ' and age < 25
select count ( * ) from student where sex = 'f ' and age < 25
select fname from student where age > 20
select fname from student where age > 20
select fname from student where city_code = 'phl ' and age between 20 and 25
select fname from student where city_code = 'phl ' and age between 20 and 25
select count ( * ) from dorm
select count ( * ) from dorm
select count ( * ) from dorm_amenity
select count ( * ) from dorm_amenity
select sum ( student_capacity ) from dorm
select sum ( student_capacity ) from dorm
select count ( * ) from student
select count ( * ) from student
select avg ( age ) , city_code from student group by city_code
select avg ( age ) , city_code from student group by city_code
select avg ( student_capacity ) , sum ( student_capacity ) from dorm where gender = 'x '
select avg ( student_capacity ) , sum ( student_capacity ) from dorm where gender = 'x '
select count ( distinct dormid ) from has_amenity
select count ( distinct dormid ) from has_amenity
select dorm_name from dorm where dormid not in ( select dormid from has_amenity )
select dorm_name from dorm where dormid not in ( select dormid from has_amenity )
select count ( distinct gender ) from dorm
select count ( distinct gender ) from dorm
select student_capacity , gender from dorm where dorm_name like ' % donor % '
select student_capacity , gender from dorm where dorm_name like ' % donor % '
select dorm_name , gender from dorm where student_capacity > 300 or student_capacity < 100
select dorm_name , gender from dorm where student_capacity > 300 or student_capacity < 100
select count ( distinct major ) , count ( distinct city_code ) from student
select count ( distinct major ) , count ( distinct city_code ) from student
select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'tv lounge ' intersect select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'study room '
select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'tv lounge ' intersect select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'study room '
select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'tv lounge ' except select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'study room '
select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'tv lounge ' except select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'study room '
select lname from student where sex = 'f ' and city_code = 'bal ' union select lname from student where sex = 'm ' and age < 20
select lname from student where sex = 'f ' and city_code = 'bal ' union select lname from student where sex = 'm ' and age < 20
select dorm_name from dorm order by student_capacity desc limit 1
select dorm_name from dorm order by student_capacity desc limit 1
select amenity_name from dorm_amenity order by amenity_name
select amenity_name from dorm_amenity order by amenity_name
select city_code from student group by city_code order by count ( * ) desc limit 1
select city_code from student group by city_code order by count ( * ) desc limit 1
select fname , lname from student where age < ( select avg ( age ) from student )
select fname , lname from student where age < ( select avg ( age ) from student )
select fname , lname from student where city_code ! = 'hkg ' order by age
select fname , lname from student where city_code ! = 'hkg ' order by age
select t1.amenity_name from dorm_amenity as t1 join has_amenity as t2 on t2.amenid = t1.amenid join dorm as t3 on t2.dormid = t3.dormid where t3.dorm_name = 'anonymous donor hall ' order by t1.amenity_name
select t1.amenity_name from dorm_amenity as t1 join has_amenity as t2 on t2.amenid = t1.amenid join dorm as t3 on t2.dormid = t3.dormid where t3.dorm_name = 'anonymous donor hall ' order by t1.amenity_name
select count ( * ) , sum ( student_capacity ) , gender from dorm group by gender
select count ( * ) , sum ( student_capacity ) , gender from dorm group by gender
select avg ( age ) , max ( age ) , sex from student group by sex
select avg ( age ) , max ( age ) , sex from student group by sex
select count ( * ) , major from student group by major
select count ( * ) , major from student group by major
select count ( * ) , avg ( age ) , city_code from student group by city_code
select count ( * ) , avg ( age ) , city_code from student group by city_code
select count ( * ) , avg ( age ) , city_code from student where sex = 'm ' group by city_code
select count ( * ) , avg ( age ) , city_code from student where sex = 'm ' group by city_code
select count ( * ) , city_code from student group by city_code having count ( * ) > 1
select count ( * ) , city_code from student group by city_code having count ( * ) > 1
select fname , lname from student where major ! = ( select major from student group by major order by count ( * ) desc limit 1 )
select fname , lname from student where major ! = ( select major from student group by major order by count ( * ) desc limit 1 )
select count ( * ) , sex from student where age > ( select avg ( age ) from student ) group by sex
select count ( * ) , sex from student where age > ( select avg ( age ) from student ) group by sex
select avg ( t1.age ) , t3.dorm_name from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid group by t3.dorm_name
select avg ( t1.age ) , t3.dorm_name from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid group by t3.dorm_name
select count ( * ) , t1.dormid from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid where t1.student_capacity > 100 group by t1.dormid
select count ( * ) , t1.dormid from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid where t1.student_capacity > 100 group by t1.dormid
select count ( * ) , t3.dorm_name from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t1.age > 20 group by t3.dorm_name
select count ( * ) , t3.dorm_name from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t1.age > 20 group by t3.dorm_name
select t1.fname from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.dorm_name = 'smith hall '
select t1.fname from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.dorm_name = 'smith hall '
select avg ( t1.age ) from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.student_capacity = ( select max ( student_capacity ) from dorm )
select avg ( t1.age ) from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.student_capacity = ( select max ( student_capacity ) from dorm )
select count ( * ) from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.gender = 'm '
select count ( * ) from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.gender = 'm '
select count ( * ) from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.dorm_name = 'smith hall ' and t1.sex = 'f '
select count ( * ) from student as t1 join lives_in as t2 on t1.stuid = t2.stuid join dorm as t3 on t3.dormid = t2.dormid where t3.dorm_name = 'smith hall ' and t1.sex = 'f '
select t3.amenity_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t1.dorm_name = 'smith hall '
select t3.amenity_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t1.dorm_name = 'smith hall '
select t3.amenity_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t1.dorm_name = 'smith hall ' order by t3.amenity_name
select t3.amenity_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t1.dorm_name = 'smith hall ' order by t3.amenity_name
select t1.amenity_name from dorm_amenity as t1 join has_amenity as t2 on t1.amenid = t2.amenid group by t2.amenid order by count ( * ) desc limit 1
select t1.amenity_name from dorm_amenity as t1 join has_amenity as t2 on t1.amenid = t2.amenid group by t2.amenid order by count ( * ) desc limit 1
select t1.fname from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid in ( select t2.dormid from dorm as t3 join has_amenity as t4 on t3.dormid = t4.dormid join dorm_amenity as t5 on t4.amenid = t5.amenid group by t3.dormid order by count ( * ) desc limit 1 )
select t1.fname from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid in ( select t2.dormid from dorm as t3 join has_amenity as t4 on t3.dormid = t4.dormid join dorm_amenity as t5 on t4.amenid = t5.amenid group by t3.dormid order by count ( * ) desc limit 1 )
select t1.dorm_name , t1.student_capacity from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid group by t2.dormid order by count ( * ) limit 1
select t1.dorm_name , t1.student_capacity from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid group by t2.dormid order by count ( * ) limit 1
select dorm_name from dorm except select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'tv lounge '
select dorm_name from dorm except select t1.dorm_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid where t3.amenity_name = 'tv lounge '
select t1.fname , t1.lname from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid in ( select t3.dormid from has_amenity as t3 join dorm_amenity as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'tv lounge ' )
select t1.fname , t1.lname from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid in ( select t3.dormid from has_amenity as t3 join dorm_amenity as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'tv lounge ' )
select t1.fname , t1.age from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid not in ( select t3.dormid from has_amenity as t3 join dorm_amenity as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'tv lounge ' )
select t1.fname , t1.age from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid not in ( select t3.dormid from has_amenity as t3 join dorm_amenity as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'tv lounge ' )
select t3.amenity_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid join lives_in as t4 on t4.dormid = t1.dormid join student as t5 on t5.stuid = t4.stuid where t5.lname = 'smith '
select t3.amenity_name from dorm as t1 join has_amenity as t2 on t1.dormid = t2.dormid join dorm_amenity as t3 on t2.amenid = t3.amenid join lives_in as t4 on t4.dormid = t1.dormid join student as t5 on t5.stuid = t4.stuid where t5.lname = 'smith '
select count ( * ) from customers
select count ( * ) from customers
select email_address , phone_number from customers order by email_address , phone_number
select email_address , phone_number from customers order by email_address , phone_number
select town_city from customers where customer_type_code = `` good credit rating '' group by town_city order by count ( * ) limit 1
select town_city from customers where customer_type_code = `` good credit rating '' group by town_city order by count ( * ) limit 1
select t1.product_name , count ( * ) from products as t1 join complaints as t2 on t1.product_id = t2.product_id group by t1.product_name
select t1.product_name , count ( * ) from products as t1 join complaints as t2 on t1.product_id = t2.product_id group by t1.product_name
select t1.email_address from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) limit 1
select t1.email_address from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) limit 1
select distinct t1.product_name from products as t1 join complaints as t2 on t1.product_id = t2.product_id join customers as t3 group by t3.customer_id order by count ( * ) limit 1
select distinct t1.product_name from products as t1 join complaints as t2 on t1.product_id = t2.product_id join customers as t3 group by t3.customer_id order by count ( * ) limit 1
select t1.phone_number from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id order by t2.date_complaint_raised desc limit 1
select t1.phone_number from customers as t1 join complaints as t2 on t1.customer_id = t2.customer_id order by t2.date_complaint_raised desc limit 1
select email_address , phone_number from customers where customer_id not in ( select customer_id from complaints )
select email_address , phone_number from customers where customer_id not in ( select customer_id from complaints )
select phone_number from customers union select phone_number from staff
select phone_number from customers union select phone_number from staff
select product_description from products where product_name = `` chocolate ''
select product_description from products where product_name = `` chocolate ''
select product_name , product_category_code from products order by product_price desc limit 1
select product_name , product_category_code from products order by product_price desc limit 1
select product_price from products where product_id not in ( select product_id from complaints )
select product_price from products where product_id not in ( select product_id from complaints )
select avg ( product_price ) , product_category_code from products group by product_category_code
select avg ( product_price ) , product_category_code from products group by product_category_code
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id join products as t3 on t2.product_id = t3.product_id order by t3.product_price limit 1
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id join products as t3 on t2.product_id = t3.product_id order by t3.product_price limit 1
select complaint_status_code from complaints group by complaint_status_code having count ( * ) > 3
select complaint_status_code from complaints group by complaint_status_code having count ( * ) > 3
select last_name from staff where email_address like `` % wrau % ''
select last_name from staff where email_address like `` % wrau % ''
select count ( * ) from customers group by customer_type_code order by count ( * ) desc limit 1
select count ( * ) from customers group by customer_type_code order by count ( * ) desc limit 1
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id order by t2.date_complaint_raised limit 1
select t1.last_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id order by t2.date_complaint_raised limit 1
select count ( distinct complaint_type_code ) from complaints
select count ( distinct complaint_type_code ) from complaints
select address_line_1 , address_line_2 from customers where email_address = `` vbogisich @ example.org ''
select address_line_1 , address_line_2 from customers where email_address = `` vbogisich @ example.org ''
select complaint_status_code , count ( * ) from complaints where complaint_type_code = `` product failure '' group by complaint_status_code
select complaint_status_code , count ( * ) from complaints where complaint_type_code = `` product failure '' group by complaint_status_code
select t1.first_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id group by t2.staff_id order by count ( * ) limit 5
select t1.first_name from staff as t1 join complaints as t2 on t1.staff_id = t2.staff_id group by t2.staff_id order by count ( * ) limit 5
select state from customers group by state order by count ( * ) limit 1
select state from customers group by state order by count ( * ) limit 1
select count ( * ) from submission
select count ( * ) from submission
select author from submission order by scores asc
select author from submission order by scores asc
select author , college from submission
select author , college from submission
select author from submission where college = `` florida '' or college = `` temple ''
select author from submission where college = `` florida '' or college = `` temple ''
select avg ( scores ) from submission
select avg ( scores ) from submission
select author from submission order by scores desc limit 1
select author from submission order by scores desc limit 1
select college , count ( * ) from submission group by college
select college , count ( * ) from submission group by college
select college from submission group by college order by count ( * ) desc limit 1
select college from submission group by college order by count ( * ) desc limit 1
select college from submission where scores > 90 intersect select college from submission where scores < 80
select college from submission where scores > 90 intersect select college from submission where scores < 80
select t2.author , t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id
select t2.author , t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id
select t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id order by t2.scores desc limit 1
select t1.result from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id order by t2.scores desc limit 1
select t2.author , count ( distinct t1.workshop_id ) from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author
select t2.author , count ( distinct t1.workshop_id ) from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author
select t2.author from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author having count ( distinct t1.workshop_id ) > 1
select t2.author from acceptance as t1 join submission as t2 on t1.submission_id = t2.submission_id group by t2.author having count ( distinct t1.workshop_id ) > 1
select date , venue from workshop order by venue
select date , venue from workshop order by venue
select author from submission where submission_id not in ( select submission_id from acceptance )
select author from submission where submission_id not in ( select submission_id from acceptance )
select count ( * ) from investors
select investor_details from investors
select distinct lot_details from lots
select max ( amount_of_transaction ) from transactions
select date_of_transaction , share_count from transactions
select sum ( share_count ) from transactions
select transaction_id from transactions where transaction_type_code = 'pur '
select date_of_transaction from transactions where transaction_type_code = `` sale ''
select avg ( amount_of_transaction ) from transactions where transaction_type_code = `` sale ''
select transaction_type_description from ref_transaction_types where transaction_type_code = `` pur ''
select min ( amount_of_transaction ) from transactions where transaction_type_code = `` pur '' and share_count > 50
select max ( share_count ) from transactions where amount_of_transaction < 10000
select date_of_transaction from transactions where share_count > 100 or amount_of_transaction > 1000
select t1.transaction_type_description , t2.date_of_transaction from ref_transaction_types as t1 join transactions as t2 on t1.transaction_type_code = t2.transaction_type_code where t2.share_count < 10
select t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id where t2.share_count > 100
select count ( distinct transaction_type_code ) from transactions
select lot_details , investor_id from lots
select t2.lot_details from investors as t1 join lots as t2 on t1.investor_id = t2.investor_id where t1.investor_details = `` l ''
select t1.purchase_details from purchases as t1 join transactions as t2 on t1.purchase_transaction_id = t2.transaction_id where t2.amount_of_transaction > 10000
select t1.sales_details , t2.date_of_transaction from sales as t1 join transactions as t2 on t1.sales_transaction_id = t2.transaction_id where t2.amount_of_transaction < 3000
select t1.lot_details from lots as t1 join transactions_lots as t2 on t1.lot_id = t2.transaction_id join transactions as t3 on t2.transaction_id = t3.transaction_id where t3.share_count < 50
select t1.lot_details from lots as t1 join transactions_lots as t2 on t1.lot_id = t2.transaction_id join transactions as t3 on t2.transaction_id = t3.transaction_id where t3.share_count > 100 and t3.transaction_type_code = `` pur ''
select transaction_type_code , avg ( amount_of_transaction ) from transactions group by transaction_type_code
select transaction_type_code , max ( share_count ) , min ( share_count ) from transactions group by transaction_type_code
select investor_id , avg ( share_count ) from transactions group by investor_id
select investor_id , avg ( share_count ) from transactions group by investor_id order by avg ( share_count )
select investor_id , avg ( amount_of_transaction ) from transactions group by investor_id
select t2.lot_id , avg ( amount_of_transaction ) from transactions as t1 join transactions_lots as t2 on t1.transaction_id = t2.transaction_id group by t2.lot_id
select t2.lot_id , avg ( amount_of_transaction ) from transactions as t1 join transactions_lots as t2 on t1.transaction_id = t2.transaction_id group by t2.lot_id order by avg ( amount_of_transaction )
select investor_id , count ( * ) from transactions where transaction_type_code = `` sale '' group by investor_id
select investor_id , count ( * ) from transactions group by investor_id
select transaction_type_code from transactions group by transaction_type_code order by count ( * ) asc limit 1
select transaction_type_code from transactions group by transaction_type_code order by count ( * ) desc limit 1
select t1.transaction_type_description from ref_transaction_types as t1 join transactions as t2 on t1.transaction_type_code = t2.transaction_type_code group by t1.transaction_type_code order by count ( * ) desc limit 1
select t2.investor_id , t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id group by t2.investor_id order by count ( * ) desc limit 1
select t2.investor_id , t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id group by t2.investor_id order by count ( * ) desc limit 3
select t2.investor_id from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id group by t2.investor_id having count ( * ) > = 2
select t2.investor_id , t1.investor_details from investors as t1 join transactions as t2 on t1.investor_id = t2.investor_id where t2.transaction_type_code = `` sale '' group by t2.investor_id having count ( * ) > = 2
select date_of_transaction from transactions where share_count > = 100 or amount_of_transaction > = 100
select sales_details from sales union select purchase_details from purchases
select lot_details from lots except select t1.lot_details from lots as t1 join transactions_lots as t2 on t1.lot_id = t2.lot_id
select count ( * ) from hotels
select count ( * ) from hotels
select price_range from hotels
select price_range from hotels
select distinct location_name from locations
select distinct location_name from locations
select name , other_details from staff
select name , other_details from staff
select tourist_details from visitors
select tourist_details from visitors
select price_range from hotels where star_rating_code = `` 5 ''
select price_range from hotels where star_rating_code = `` 5 ''
select avg ( price_range ) from hotels where star_rating_code = `` 5 '' and pets_allowed_yn = 1
select avg ( price_range ) from hotels where star_rating_code = `` 5 '' and pets_allowed_yn = 1
select address from locations where location_name = `` uk gallery ''
select address from locations where location_name = `` uk gallery ''
select other_details from locations where location_name = `` uk gallery ''
select other_details from locations where location_name = `` uk gallery ''
select location_name from locations where location_name like `` % film % ''
select location_name from locations where location_name like `` % film % ''
select count ( distinct name ) from photos
select count ( distinct name ) from photos
select distinct visit_date from visits
select distinct visit_date from visits
select name from tourist_attractions where how_to_get_there = `` bus ''
select name from tourist_attractions where how_to_get_there = `` bus ''
select name , opening_hours from tourist_attractions where how_to_get_there = `` bus '' or how_to_get_there = `` walk ''
select name , opening_hours from tourist_attractions where how_to_get_there = `` bus '' or how_to_get_there = `` walk ''
select t2.star_rating_description from hotels as t1 join ref_hotel_star_ratings as t2 on t1.star_rating_code = t2.star_rating_code where t1.price_range > 10000
select t2.star_rating_description from hotels as t1 join ref_hotel_star_ratings as t2 on t1.star_rating_code = t2.star_rating_code where t1.price_range > 10000
select t1.museum_details , t2.opening_hours from museums as t1 join tourist_attractions as t2 on t1.museum_id = t2.tourist_attraction_id
select t1.museum_details , t2.opening_hours from museums as t1 join tourist_attractions as t2 on t1.museum_id = t2.tourist_attraction_id
select t2.name from photos as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t1.name = `` game1 ''
select t2.name from photos as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t1.name = `` game1 ''
select t1.name , t1.description from photos as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = `` film festival ''
select t1.name , t1.description from photos as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = `` film festival ''
select t1.royal_family_details , t2.how_to_get_there from royal_family as t1 join tourist_attractions as t2 on t1.royal_family_id = t2.tourist_attraction_id
select t1.royal_family_details , t2.how_to_get_there from royal_family as t1 join tourist_attractions as t2 on t1.royal_family_id = t2.tourist_attraction_id
select t1.shop_details from shops as t1 join tourist_attractions as t2 on t1.shop_id = t2.tourist_attraction_id where t2.how_to_get_there = `` walk ''
select t1.shop_details from shops as t1 join tourist_attractions as t2 on t1.shop_id = t2.tourist_attraction_id where t2.how_to_get_there = `` walk ''
select t1.name from staff as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = `` us museum ''
select t1.name from staff as t1 join tourist_attractions as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id where t2.name = `` us museum ''
select t1.market_details from street_markets as t1 join tourist_attractions as t2 on t1.market_id = t2.tourist_attraction_id where t2.how_to_get_there = `` walk '' or t2.how_to_get_there = `` bus ''
select t1.market_details from street_markets as t1 join tourist_attractions as t2 on t1.market_id = t2.tourist_attraction_id where t2.how_to_get_there = `` walk '' or t2.how_to_get_there = `` bus ''
select t2.visit_date , t2.visit_details from visitors as t1 join visits as t2 on t1.tourist_id = t2.tourist_id where t1.tourist_details = `` vincent ''
select t2.visit_date , t2.visit_details from visitors as t1 join visits as t2 on t1.tourist_id = t2.tourist_id where t1.tourist_details = `` vincent ''
select t1.name from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join visitors as t3 on t2.tourist_id = t3.tourist_id where t3.tourist_details = `` vincent ''
select t1.name from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join visitors as t3 on t2.tourist_id = t3.tourist_id where t3.tourist_details = `` vincent ''
select t1.name , t3.visit_date from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` vincent '' or t2.tourist_details = `` vivian ''
select t1.name , t3.visit_date from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` vincent '' or t2.tourist_details = `` vivian ''
select star_rating_code , avg ( price_range ) from hotels group by star_rating_code
select star_rating_code , avg ( price_range ) from hotels group by star_rating_code
select pets_allowed_yn , avg ( price_range ) from hotels group by pets_allowed_yn
select pets_allowed_yn , avg ( price_range ) from hotels group by pets_allowed_yn
select hotel_id , star_rating_code from hotels order by price_range asc
select hotel_id , star_rating_code from hotels order by price_range asc
select other_hotel_details from hotels order by price_range desc limit 3
select other_hotel_details from hotels order by price_range desc limit 3
select other_hotel_details , star_rating_code from hotels order by price_range asc limit 3
select other_hotel_details , star_rating_code from hotels order by price_range asc limit 3
select how_to_get_there from tourist_attractions group by how_to_get_there order by count ( * ) desc limit 1
select how_to_get_there from tourist_attractions group by how_to_get_there order by count ( * ) desc limit 1
select t1.attraction_type_description , t2.attraction_type_code from ref_attraction_types as t1 join tourist_attractions as t2 on t1.attraction_type_code = t2.attraction_type_code group by t2.attraction_type_code order by count ( * ) desc limit 1
select t1.attraction_type_description , t2.attraction_type_code from ref_attraction_types as t1 join tourist_attractions as t2 on t1.attraction_type_code = t2.attraction_type_code group by t2.attraction_type_code order by count ( * ) desc limit 1
select how_to_get_there , count ( * ) from tourist_attractions group by how_to_get_there
select how_to_get_there , count ( * ) from tourist_attractions group by how_to_get_there
select t1.name , t2.tourist_attraction_id , count ( * ) from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id
select t1.name , t2.tourist_attraction_id , count ( * ) from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id
select t1.name , t2.tourist_attraction_id from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count ( * ) > = 2
select t1.name , t2.tourist_attraction_id from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count ( * ) > = 2
select t1.name , t1.tourist_attraction_id from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count ( * ) < = 1
select t1.name , t1.tourist_attraction_id from tourist_attractions as t1 join visits as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id group by t2.tourist_attraction_id having count ( * ) < = 1
select t2.name from locations as t1 join tourist_attractions as t2 on t1.location_id = t2.location_id where t1.address = `` 660 shea crescent '' or t2.how_to_get_there = `` walk ''
select t2.name from locations as t1 join tourist_attractions as t2 on t1.location_id = t2.location_id where t1.address = `` 660 shea crescent '' or t2.how_to_get_there = `` walk ''
select t1.name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join features as t3 on t2.feature_id = t3.feature_id where t3.feature_details = 'park ' union select t1.name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join features as t3 on t2.feature_id = t3.feature_id where t3.feature_details = 'shopping '
select t1.name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join features as t3 on t2.feature_id = t3.feature_id where t3.feature_details = 'park ' union select t1.name from tourist_attractions as t1 join tourist_attraction_features as t2 on t1.tourist_attraction_id = t2.tourist_attraction_id join features as t3 on t2.feature_id = t3.feature_id where t3.feature_details = 'shopping '
select t2.name from locations as t1 join tourist_attractions as t2 on t1.location_id = t2.location_id where t1.address = `` 254 ottilie junction '' or t2.how_to_get_there = `` bus ''
select t2.name from locations as t1 join tourist_attractions as t2 on t1.location_id = t2.location_id where t1.address = `` 254 ottilie junction '' or t2.how_to_get_there = `` bus ''
select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` vincent '' intersect select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` marcelle ''
select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` vincent '' intersect select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` marcelle ''
select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` alison '' except select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` rosalind ''
select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` alison '' except select t1.name from tourist_attractions as t1 join visitors as t2 join visits as t3 on t1.tourist_attraction_id = t3.tourist_attraction_id and t2.tourist_id = t3.tourist_id where t2.tourist_details = `` rosalind ''
select count ( * ) from visitors where tourist_id not in ( select tourist_id from visits )
select count ( * ) from visitors where tourist_id not in ( select tourist_id from visits )
select count ( * ) from video_games
select count ( * ) from video_games
select count ( distinct gtype ) from video_games
select count ( distinct gtype ) from video_games
select distinct gtype from video_games
select distinct gtype from video_games
select gname , gtype from video_games order by gname
select gname , gtype from video_games order by gname
select gname from video_games where gtype = `` collectible card game ''
select gname from video_games where gtype = `` collectible card game ''
select gtype from video_games where gname = `` call of destiny ''
select gtype from video_games where gname = `` call of destiny ''
select count ( * ) from video_games where gtype = `` massively multiplayer online game ''
select count ( * ) from video_games where gtype = `` massively multiplayer online game ''
select gtype , count ( * ) from video_games group by gtype
select gtype , count ( * ) from video_games group by gtype
select gtype from video_games group by gtype order by count ( * ) desc limit 1
select gtype from video_games group by gtype order by count ( * ) desc limit 1
select gtype from video_games group by gtype order by count ( * ) limit 1
select gtype from video_games group by gtype order by count ( * ) limit 1
select stuid from student where city_code = `` chi ''
select stuid from student where city_code = `` chi ''
select stuid from student where advisor = 1121
select stuid from student where advisor = 1121
select fname from student where major = 600
select fname from student where major = 600
select major , avg ( age ) , min ( age ) , max ( age ) from student group by major
select major , avg ( age ) , min ( age ) , max ( age ) from student group by major
select advisor from student group by advisor having count ( * ) > = 2
select advisor from student group by advisor having count ( * ) > = 2
select count ( distinct sportname ) from sportsinfo
select count ( distinct sportname ) from sportsinfo
select count ( distinct stuid ) from sportsinfo
select count ( distinct stuid ) from sportsinfo
select stuid from sportsinfo where onscholarship = 'y '
select stuid from sportsinfo where onscholarship = 'y '
select t2.lname from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t1.onscholarship = 'y '
select t2.lname from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t1.onscholarship = 'y '
select sum ( gamesplayed ) from sportsinfo
select sum ( gamesplayed ) from sportsinfo
select sum ( gamesplayed ) from sportsinfo where sportname = `` football '' and onscholarship = 'y '
select sum ( gamesplayed ) from sportsinfo where sportname = `` football '' and onscholarship = 'y '
select sportname , count ( * ) from sportsinfo group by sportname
select sportname , count ( * ) from sportsinfo group by sportname
select stuid , count ( * ) , sum ( gamesplayed ) from sportsinfo group by stuid
select stuid , count ( * ) , sum ( gamesplayed ) from sportsinfo group by stuid
select stuid from sportsinfo group by stuid having sum ( hoursperweek ) > 10
select stuid from sportsinfo group by stuid having sum ( hoursperweek ) > 10
select t2.fname , t2.lname from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid group by t1.stuid order by count ( * ) desc limit 1
select t2.fname , t2.lname from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid group by t1.stuid order by count ( * ) desc limit 1
select sportname from sportsinfo where onscholarship = 'y ' group by sportname order by count ( * ) desc limit 1
select sportname from sportsinfo where onscholarship = 'y ' group by sportname order by count ( * ) desc limit 1
select stuid from student except select stuid from sportsinfo
select stuid from student except select stuid from sportsinfo
select stuid from student where major = 600 intersect select stuid from sportsinfo where onscholarship = 'y '
select stuid from student where major = 600 intersect select stuid from sportsinfo where onscholarship = 'y '
select stuid from student where sex = 'f ' intersect select stuid from sportsinfo where sportname = `` football ''
select stuid from student where sex = 'f ' intersect select stuid from sportsinfo where sportname = `` football ''
select stuid from student where sex = 'm ' except select stuid from sportsinfo where sportname = `` football ''
select stuid from student where sex = 'm ' except select stuid from sportsinfo where sportname = `` football ''
select sum ( hoursperweek ) , sum ( gamesplayed ) from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t2.fname = `` david '' and t2.lname = `` shieber ''
select sum ( hoursperweek ) , sum ( gamesplayed ) from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t2.fname = `` david '' and t2.lname = `` shieber ''
select sum ( hoursperweek ) , sum ( gamesplayed ) from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t2.age < 20
select sum ( hoursperweek ) , sum ( gamesplayed ) from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t2.age < 20
select count ( distinct stuid ) from plays_games
select count ( distinct stuid ) from plays_games
select stuid from student except select stuid from plays_games
select stuid from student except select stuid from plays_games
select stuid from sportsinfo intersect select stuid from plays_games
select stuid from sportsinfo intersect select stuid from plays_games
select gameid , sum ( hours_played ) from plays_games group by gameid
select gameid , sum ( hours_played ) from plays_games group by gameid
select stuid , sum ( hours_played ) from plays_games group by stuid
select stuid , sum ( hours_played ) from plays_games group by stuid
select gname from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid group by t1.gameid order by sum ( hours_played ) desc limit 1
select gname from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid group by t1.gameid order by sum ( hours_played ) desc limit 1
select gname from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid group by t1.gameid having sum ( hours_played ) > = 1000
select gname from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid group by t1.gameid having sum ( hours_played ) > = 1000
select gname from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid join student as t3 on t3.stuid = t1.stuid where t3.lname = `` smith '' and t3.fname = `` linda ''
select gname from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid join student as t3 on t3.stuid = t1.stuid where t3.lname = `` smith '' and t3.fname = `` linda ''
select t2.lname , t2.fname from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t1.sportname = `` football '' or t1.sportname = `` lacrosse ''
select t2.lname , t2.fname from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid where t1.sportname = `` football '' or t1.sportname = `` lacrosse ''
select fname , age from student where stuid in ( select stuid from sportsinfo where sportname = `` football '' intersect select stuid from sportsinfo where sportname = `` lacrosse '' )
select fname , age from student where stuid in ( select stuid from sportsinfo where sportname = `` football '' intersect select stuid from sportsinfo where sportname = `` lacrosse '' )
select lname , sex from student where stuid in ( select t1.stuid from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid where t2.gname = `` call of destiny '' intersect select t1.stuid from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid where t2.gname = `` works of widenius '' )
select lname , sex from student where stuid in ( select t1.stuid from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid where t2.gname = `` call of destiny '' intersect select t1.stuid from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid where t2.gname = `` works of widenius '' )
select customer_name from customers
select customer_name from customers
select count ( * ) from customers
select count ( * ) from customers
select avg ( order_quantity ) from order_items
select avg ( order_quantity ) from order_items
select customer_name from customers where payment_method = `` cash ''
select customer_name from customers where payment_method = `` cash ''
select date_became_customer from customers where customer_id between 10 and 20
select date_became_customer from customers where customer_id between 10 and 20
select payment_method from customers group by payment_method order by count ( * ) desc limit 1
select payment_method from customers group by payment_method order by count ( * ) desc limit 1
select customer_name from customers where payment_method = ( select payment_method from customers group by payment_method order by count ( * ) desc limit 1 )
select customer_name from customers where payment_method = ( select payment_method from customers group by payment_method order by count ( * ) desc limit 1 )
select distinct payment_method from customers
select distinct payment_method from customers
select distinct product_details from products
select distinct product_details from products
select customer_name from customers where customer_name like `` % alex % ''
select customer_name from customers where customer_name like `` % alex % ''
select product_details from products where product_details like `` % latte % '' or product_details like `` % americano % ''
select product_details from products where product_details like `` % latte % '' or product_details like `` % americano % ''
select t3.address_content from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t1.customer_name = `` maudie kertzmann ''
select t3.address_content from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t1.customer_name = `` maudie kertzmann ''
select count ( * ) from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.city = `` lake geovannyton ''
select count ( * ) from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.city = `` lake geovannyton ''
select t1.customer_name from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.state_province_county = `` colorado ''
select t1.customer_name from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id where t3.state_province_county = `` colorado ''
select city from addresses where city not in ( select distinct t3.city from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id )
select city from addresses where city not in ( select distinct t3.city from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id )
select t3.city from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id group by t3.city order by count ( * ) desc limit 1
select t3.city from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id group by t3.city order by count ( * ) desc limit 1
select distinct city from addresses
select distinct city from addresses
select city from addresses where zip_postcode = 255
select city from addresses where zip_postcode = 255
select state_province_county , country from addresses where zip_postcode like `` 4 % ''
select state_province_county , country from addresses where zip_postcode like `` 4 % ''
select country from addresses group by country having count ( address_id ) > 4
select country from addresses group by country having count ( address_id ) > 4
select channel_code from customer_contact_channels group by channel_code having count ( customer_id ) < 5
select channel_code from customer_contact_channels group by channel_code having count ( customer_id ) < 5
select distinct channel_code from customers as t1 join customer_contact_channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` tillman ernser ''
select distinct channel_code from customers as t1 join customer_contact_channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` tillman ernser ''
select max ( t2.active_to_date ) from customers as t1 join customer_contact_channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` tillman ernser ''
select max ( t2.active_to_date ) from customers as t1 join customer_contact_channels as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` tillman ernser ''
select avg ( active_to_date - active_from_date ) from customer_contact_channels
select avg ( active_to_date - active_from_date ) from customer_contact_channels
select channel_code , contact_number from customer_contact_channels where active_to_date - active_from_date = ( select active_to_date - active_from_date from customer_contact_channels order by ( active_to_date - active_from_date ) desc limit 1 )
select channel_code , contact_number from customer_contact_channels where active_to_date - active_from_date = ( select active_to_date - active_from_date from customer_contact_channels order by ( active_to_date - active_from_date ) desc limit 1 )
select t1.customer_name , t2.active_from_date from customers as t1 join customer_contact_channels as t2 on t1.customer_id = t2.customer_id where t2.channel_code = 'email '
select t1.customer_name , t2.active_from_date from customers as t1 join customer_contact_channels as t2 on t1.customer_id = t2.customer_id where t2.channel_code = 'email '
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id where t3.order_quantity = ( select max ( order_quantity ) from order_items )
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id where t3.order_quantity = ( select max ( order_quantity ) from order_items )
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum ( t3.order_quantity ) desc limit 1
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum ( t3.order_quantity ) desc limit 1
select t1.payment_method from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum ( t3.order_quantity ) limit 1
select t1.payment_method from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id group by t1.customer_name order by sum ( t3.order_quantity ) limit 1
select count ( distinct t3.product_id ) from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id where t1.customer_name = `` rodrick heaney ''
select count ( distinct t3.product_id ) from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id where t1.customer_name = `` rodrick heaney ''
select sum ( t3.order_quantity ) from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id where t1.customer_name = `` rodrick heaney ''
select sum ( t3.order_quantity ) from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id where t1.customer_name = `` rodrick heaney ''
select count ( distinct customer_id ) from customer_orders where order_status = `` cancelled ''
select count ( distinct customer_id ) from customer_orders where order_status = `` cancelled ''
select count ( * ) from customer_orders where order_details = `` second time ''
select count ( * ) from customer_orders where order_details = `` second time ''
select t1.customer_name , t2.order_date from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where order_status = `` delivered ''
select t1.customer_name , t2.order_date from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id where order_status = `` delivered ''
select sum ( t2.order_quantity ) from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.order_status = `` cancelled ''
select sum ( t2.order_quantity ) from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.order_status = `` cancelled ''
select sum ( t2.order_quantity ) from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.order_date < `` 2018-03-17 07:13:53 ''
select sum ( t2.order_quantity ) from customer_orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.order_date < `` 2018-03-17 07:13:53 ''
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id order by t2.order_date desc limit 1
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id order by t2.order_date desc limit 1
select t2.product_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by count ( * ) desc limit 1
select t2.product_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by count ( * ) desc limit 1
select t2.product_details , t2.product_id from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by sum ( t1.order_quantity ) limit 1
select t2.product_details , t2.product_id from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by sum ( t1.order_quantity ) limit 1
select address_content from addresses where city = `` east julianaside '' and state_province_county = `` texas '' union select address_content from addresses where city = `` gleasonmouth '' and state_province_county = `` arizona ''
select address_content from addresses where city = `` east julianaside '' and state_province_county = `` texas '' union select address_content from addresses where city = `` gleasonmouth '' and state_province_county = `` arizona ''
select customer_name from customers where payment_method ! = 'cash '
select customer_name from customers where payment_method ! = 'cash '
select customer_name from customers except select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'latte '
select customer_name from customers except select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'latte '
select customer_name from customers except select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id
select customer_name from customers except select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'latte ' intersect select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'americano '
select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'latte ' intersect select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'americano '
select count ( * ) from artist
select count ( * ) from artist
select age from artist
select age from artist
select avg ( age ) from artist
select avg ( age ) from artist
select famous_title from artist where artist = `` triumfall ''
select famous_title from artist where artist = `` triumfall ''
select distinct ( famous_release_date ) from artist
select distinct ( famous_release_date ) from artist
select date_of_ceremony , result from music_festival
select date_of_ceremony , result from music_festival
select category from music_festival where result = `` awarded ''
select category from music_festival where result = `` awarded ''
select max ( weeks_on_top ) , min ( weeks_on_top ) from volume
select max ( weeks_on_top ) , min ( weeks_on_top ) from volume
select song from volume where weeks_on_top > 1
select song from volume where weeks_on_top > 1
select song from volume order by song
select song from volume order by song
select count ( distinct artist_id ) from volume
select count ( distinct artist_id ) from volume
select t1.date_of_ceremony from music_festival as t1 join volume as t2 on t1.volume = t2.volume_id where t2.weeks_on_top > 2
select t1.date_of_ceremony from music_festival as t1 join volume as t2 on t1.volume = t2.volume_id where t2.weeks_on_top > 2
select t2.song from music_festival as t1 join volume as t2 on t1.volume = t2.volume_id where t1.result = `` nominated ''
select t2.song from music_festival as t1 join volume as t2 on t1.volume = t2.volume_id where t1.result = `` nominated ''
select t2.issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.artist = `` gorgoroth ''
select t2.issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.artist = `` gorgoroth ''
select t2.song from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age > = 32
select t2.song from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age > = 32
select avg ( t2.weeks_on_top ) from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age < = 25
select avg ( t2.weeks_on_top ) from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age < = 25
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2
select famous_title , age from artist order by age desc
select famous_title , age from artist order by age desc
select famous_release_date from artist order by age desc limit 1
select famous_release_date from artist order by age desc limit 1
select category , count ( * ) from music_festival group by category
select category , count ( * ) from music_festival group by category
select result from music_festival group by result order by count ( * ) desc limit 1
select result from music_festival group by result order by count ( * ) desc limit 1
select category from music_festival group by category having count ( * ) > 1
select category from music_festival group by category having count ( * ) > 1
select song from volume order by weeks_on_top desc limit 1
select song from volume order by weeks_on_top desc limit 1
select famous_title from artist where artist_id not in ( select artist_id from volume )
select famous_title from artist where artist_id not in ( select artist_id from volume )
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2 intersect select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top < 2
select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top > 2 intersect select t1.famous_title from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t2.weeks_on_top < 2
select date_of_ceremony from music_festival where category = `` best song '' and result = `` awarded ''
select date_of_ceremony from music_festival where category = `` best song '' and result = `` awarded ''
select issue_date from volume order by weeks_on_top asc limit 1
select issue_date from volume order by weeks_on_top asc limit 1
select count ( distinct artist_id ) from volume
select count ( distinct artist_id ) from volume
select result , count ( * ) from music_festival group by result order by count ( * ) desc
select result , count ( * ) from music_festival group by result order by count ( * ) desc
select issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age < = 23
select issue_date from artist as t1 join volume as t2 on t1.artist_id = t2.artist_id where t1.age < = 23
select count ( * ) from roller_coaster
select name from roller_coaster order by length asc
select length , height from roller_coaster
select name from country where languages ! = `` german ''
select status from roller_coaster where length > 3300 or height > 100
select speed from roller_coaster order by length desc limit 1
select avg ( speed ) from roller_coaster
select status , count ( * ) from roller_coaster group by status
select status from roller_coaster group by status order by count ( * ) desc limit 1
select status from roller_coaster group by status having count ( * ) > 2
select park from roller_coaster order by speed desc limit 1
select t2.name , t1.name from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id
select t1.name from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id group by t1.name having count ( * ) > 1
select t1.name , t1.population from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id order by t2.height desc limit 1
select t1.name , avg ( t2.speed ) from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id group by t1.name
select count ( * ) from country where country_id not in ( select country_id from roller_coaster where length > 3000 )
select t1.name , t1.area , t1.population from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id where t2.speed > 60 intersect select t1.name , t1.area , t1.population from country as t1 join roller_coaster as t2 on t1.country_id = t2.country_id where t2.speed < 55
select count ( distinct rank ) from captain
select count ( distinct rank ) from captain
select count ( * ) , rank from captain group by rank
select count ( * ) , rank from captain group by rank
select count ( * ) , rank from captain where age < 50 group by rank
select count ( * ) , rank from captain where age < 50 group by rank
select name from captain order by age desc
select name from captain order by age desc
select name , class , rank from captain
select name , class , rank from captain
select rank from captain group by rank order by count ( * ) desc limit 1
select rank from captain group by rank order by count ( * ) desc limit 1
select class from captain group by class having count ( * ) > 2
select class from captain group by class having count ( * ) > 2
select name from captain where rank = 'midshipman ' or rank = 'lieutenant '
select name from captain where rank = 'midshipman ' or rank = 'lieutenant '
select avg ( age ) , min ( age ) , class from captain group by class
select avg ( age ) , min ( age ) , class from captain group by class
select rank from captain where class = 'cutter ' intersect select rank from captain where class = 'armed schooner '
select rank from captain where class = 'cutter ' intersect select rank from captain where class = 'armed schooner '
select rank from captain except select rank from captain where class = 'third-rate ship of the line '
select rank from captain except select rank from captain where class = 'third-rate ship of the line '
select name from captain order by age limit 1
select name from captain order by age limit 1
select count ( * ) from ship
select count ( * ) from ship
select name , type , flag from ship order by built_year desc limit 1
select name , type , flag from ship order by built_year desc limit 1
select count ( * ) , flag from ship group by flag
select count ( * ) , flag from ship group by flag
select flag from ship group by flag order by count ( * ) desc limit 1
select flag from ship group by flag order by count ( * ) desc limit 1
select name from ship order by built_year , class
select name from ship order by built_year , class
select type from ship where flag = 'panama ' intersect select type from ship where flag = 'malta '
select type from ship where flag = 'panama ' intersect select type from ship where flag = 'malta '
select built_year from ship group by built_year order by count ( * ) desc limit 1
select built_year from ship group by built_year order by count ( * ) desc limit 1
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id group by t2.ship_id having count ( * ) > 1
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id group by t2.ship_id having count ( * ) > 1
select name , class from ship where ship_id not in ( select ship_id from captain )
select name , class from ship where ship_id not in ( select ship_id from captain )
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id order by t2.age limit 1
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id order by t2.age limit 1
select name , flag from ship where ship_id not in ( select ship_id from captain where rank = 'midshipman ' )
select name , flag from ship where ship_id not in ( select ship_id from captain where rank = 'midshipman ' )
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'midshipman ' intersect select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'lieutenant '
select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'midshipman ' intersect select t1.name from ship as t1 join captain as t2 on t1.ship_id = t2.ship_id where t2.rank = 'lieutenant '
select host_city from hosting_city order by year desc limit 1
select host_city from hosting_city order by year desc limit 1
select match_id from match where competition = `` 1994 fifa world cup qualification ''
select match_id from match where competition = `` 1994 fifa world cup qualification ''
select t1.city from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city where t2.year > 2010
select t1.city from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city where t2.year > 2010
select t1.city from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city group by t2.host_city order by count ( * ) desc limit 1
select t1.city from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city group by t2.host_city order by count ( * ) desc limit 1
select t3.venue from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city join match as t3 on t2.match_id = t3.match_id where t1.city = `` nanjing ( jiangsu ) '' and t3.competition = `` 1994 fifa world cup qualification ''
select t3.venue from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city join match as t3 on t2.match_id = t3.match_id where t1.city = `` nanjing ( jiangsu ) '' and t3.competition = `` 1994 fifa world cup qualification ''
select t2.jan from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t1.city = `` shanghai ''
select t2.jan from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t1.city = `` shanghai ''
select t2.year from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city where t1.city = `` taizhou ( zhejiang ) ''
select t2.year from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city where t1.city = `` taizhou ( zhejiang ) ''
select city from city order by regional_population desc limit 3
select city from city order by regional_population desc limit 3
select city , gdp from city order by gdp limit 1
select city , gdp from city order by gdp limit 1
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id order by t2.feb desc limit 1
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id order by t2.feb desc limit 1
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul or t2.mar > t2.oct
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul or t2.mar > t2.oct
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul intersect select t3.city from city as t3 join hosting_city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.jul intersect select t3.city from city as t3 join hosting_city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.dec except select t3.city from city as t3 join hosting_city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.mar < t2.dec except select t3.city from city as t3 join hosting_city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.feb > t2.jun union select t3.city from city as t3 join hosting_city as t4 on t3.city_id = t4.host_city
select t1.city from city as t1 join temperature as t2 on t1.city_id = t2.city_id where t2.feb > t2.jun union select t3.city from city as t3 join hosting_city as t4 on t3.city_id = t4.host_city
select city from city where regional_population > 10000000
select city from city where regional_population > 10000000
select city from city where regional_population > 10000000 union select city from city where regional_population < 5000000
select city from city where regional_population > 10000000 union select city from city where regional_population < 5000000
select count ( * ) , competition from match group by competition
select count ( * ) , competition from match group by competition
select venue from match order by date desc
select venue from match order by date desc
select gdp from city order by regional_population desc limit 1
select gdp from city order by regional_population desc limit 1
select t1.gdp , t1.regional_population from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city group by t2.host_city having count ( * ) > 1
select t1.gdp , t1.regional_population from city as t1 join hosting_city as t2 on t1.city_id = t2.host_city group by t2.host_city having count ( * ) > 1
select individual_first_name , individual_middle_name , individual_last_name from individuals order by individual_last_name
select individual_first_name , individual_middle_name , individual_last_name from individuals order by individual_last_name
select distinct form_type_code from forms
select distinct form_type_code from forms
select t1.form_name from forms as t1 join party_forms as t2 on t1.form_id = t2.form_id group by t2.form_id order by count ( * ) desc limit 1
select t1.form_name from forms as t1 join party_forms as t2 on t1.form_id = t2.form_id group by t2.form_id order by count ( * ) desc limit 1
select payment_method_code , party_phone from parties where party_email = `` enrico09 @ example.com ''
select payment_method_code , party_phone from parties where party_email = `` enrico09 @ example.com ''
select t1.party_email from parties as t1 join party_forms as t2 on t1.party_id = t2.party_id where t2.form_id = ( select form_id from party_forms group by form_id order by count ( * ) desc limit 1 )
select t1.party_email from parties as t1 join party_forms as t2 on t1.party_id = t2.party_id where t2.form_id = ( select form_id from party_forms group by form_id order by count ( * ) desc limit 1 )
select organization_name from organizations order by date_formed asc
select organization_name from organizations order by date_formed asc
select organization_name from organizations order by date_formed desc limit 1
select organization_name from organizations order by date_formed desc limit 1
select t3.individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.organization_name = `` labour party '' order by t2.date_contact_to desc limit 1
select t3.individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.organization_name = `` labour party '' order by t2.date_contact_to desc limit 1
select t3.individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.uk_vat_number = ( select max ( uk_vat_number ) from organizations ) order by t2.date_contact_to asc limit 1
select t3.individual_last_name from organizations as t1 join organization_contact_individuals as t2 on t1.organization_id = t2.organization_id join individuals as t3 on t2.individual_id = t3.individual_id where t1.uk_vat_number = ( select max ( uk_vat_number ) from organizations ) order by t2.date_contact_to asc limit 1
select count ( * ) from services
select count ( * ) from services
select service_name from services except select t1.service_name from services as t1 join party_services as t2 on t1.service_id = t2.service_id
select service_name from services except select t1.service_name from services as t1 join party_services as t2 on t1.service_id = t2.service_id
select town_city from addresses union select state_province_county from addresses
select town_city from addresses union select state_province_county from addresses
select count ( * ) from addresses where state_province_county = `` colorado ''
select count ( * ) from addresses where state_province_county = `` colorado ''
select payment_method_code from parties group by payment_method_code having count ( * ) > 3
select payment_method_code from parties group by payment_method_code having count ( * ) > 3
select organization_name from organizations where organization_name like `` % party % ''
select organization_name from organizations where organization_name like `` % party % ''
select count ( distinct payment_method_code ) from parties
select count ( distinct payment_method_code ) from parties
select t1.party_email from parties as t1 join party_services as t2 on t1.party_id = t2.customer_id group by t1.party_email order by count ( * ) desc limit 1
select t1.party_email from parties as t1 join party_services as t2 on t1.party_id = t2.customer_id group by t1.party_email order by count ( * ) desc limit 1
select state_province_county from addresses where line_1_number_building like `` % 6862 kaitlyn knolls % ''
select state_province_county from addresses where line_1_number_building like `` % 6862 kaitlyn knolls % ''
select t1.organization_name from organizations as t1 join organization_contact_individuals as t2 on t1.organization_id = t2.organization_id group by t1.organization_name order by count ( * ) desc limit 1
select t1.organization_name from organizations as t1 join organization_contact_individuals as t2 on t1.organization_id = t2.organization_id group by t1.organization_name order by count ( * ) desc limit 1
select distinct t1.individual_last_name from individuals as t1 join organization_contact_individuals as t2 on t1.individual_id = t2.individual_id
select distinct t1.individual_last_name from individuals as t1 join organization_contact_individuals as t2 on t1.individual_id = t2.individual_id
select count ( * ) from driver
select name , home_city , age from driver
select party , count ( * ) from driver group by party
select name from driver order by age desc
select distinct home_city from driver
select home_city from driver group by home_city order by count ( * ) desc limit 1
select party from driver where home_city = 'hartford ' and age > 40
select home_city from driver where age > 40 group by home_city having count ( * ) > = 2
select home_city from driver except select home_city from driver where age > 40
select name from driver where driver_id not in ( select driver_id from school_bus )
select type from school group by type having count ( * ) = 2
select t2.school , t3.name from school_bus as t1 join school as t2 on t1.school_id = t2.school_id join driver as t3 on t1.driver_id = t3.driver_id
select max ( years_working ) , min ( years_working ) , avg ( years_working ) from school_bus
select school , type from school where school_id not in ( select school_id from school_bus )
select t2.type , count ( * ) from school_bus as t1 join school as t2 on t1.school_id = t2.school_id group by t2.type
select count ( * ) from driver where home_city = 'hartford ' or age < 40
select name from driver where home_city = 'hartford ' and age < 40
select t1.name from driver as t1 join school_bus as t2 on t1.driver_id = t2.driver_id order by years_working desc limit 1
select count ( * ) from flight where velocity > 200
select vehicle_flight_number , date , pilot from flight order by altitude asc
select id , country , city , name from airport order by name
select max ( group_equity_shareholding ) from operate_company
select avg ( velocity ) from flight where pilot = 'thompson '
select t1.name , t1.type from operate_company as t1 join flight as t2 on t1.id = t2.company_id
select name from airport where country ! = 'iceland '
select distinct t1.type from operate_company as t1 join flight as t2 on t1.id = t2.company_id where t2.velocity < 200
select t1.id , t1.name from operate_company as t1 join flight as t2 on t1.id = t2.company_id group by t1.id having count ( * ) > 1
select t1.id , t1.name , t1.iata from airport as t1 join flight as t2 on t1.id = t2.airport_id group by t2.id order by count ( * ) desc limit 1
select distinct t2.pilot from airport as t1 join flight as t2 on t1.id = t2.airport_id where t1.country = 'united states ' or t1.name = 'billund airport '
select type , count ( * ) from operate_company group by type order by count ( * ) desc limit 1
select count ( * ) from airport where id not in ( select airport_id from flight where pilot = 'thompson ' ) ;
select t2.pilot from operate_company as t1 join flight as t2 on t1.id = t2.company_id where t1.principal_activities = 'cargo ' intersect select t2.pilot from operate_company as t1 join flight as t2 on t1.id = t2.company_id where t1.principal_activities = 'catering services '
select name from airport where name like ' % international % '
select t3.id , count ( * ) from operate_company as t1 join flight as t2 on t1.id = t2.company_id join airport as t3 on t2.airport_id = t3.id group by t3.id
select count ( * ) , country from airport group by country
select country from airport group by country having count ( * ) > 2
select pilot from flight group by pilot order by count ( * ) desc limit 1
select count ( * ) from accounts
select count ( * ) from accounts
select account_id , account_details from accounts
select account_id , account_details from accounts
select count ( * ) from statements
select count ( * ) from statements
select statement_id , statement_details from statements
select statement_id , statement_details from statements
select t1.statement_id , t2.statement_details , t1.account_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id
select t1.statement_id , t2.statement_details , t1.account_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id
select statement_id , count ( * ) from accounts group by statement_id
select statement_id , count ( * ) from accounts group by statement_id
select t1.statement_id , t2.statement_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id group by t1.statement_id order by count ( * ) desc limit 1
select t1.statement_id , t2.statement_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id group by t1.statement_id order by count ( * ) desc limit 1
select count ( * ) from documents
select count ( * ) from documents
select document_type_code , document_name , document_description from documents where document_name = 'noel cv ' or document_name = 'king book '
select document_type_code , document_name , document_description from documents where document_name = 'noel cv ' or document_name = 'king book '
select document_id , document_name from documents
select document_id , document_name from documents
select document_name , document_id from documents where document_type_code = `` bk ''
select document_name , document_id from documents where document_type_code = `` bk ''
select count ( * ) , project_id from documents where document_type_code = `` bk '' group by project_id
select count ( * ) , project_id from documents where document_type_code = `` bk '' group by project_id
select document_name , document_date from documents as t1 join projects as t2 on t1.project_id = t2.project_id where t2.project_details = 'graph database project '
select document_name , document_date from documents as t1 join projects as t2 on t1.project_id = t2.project_id where t2.project_details = 'graph database project '
select project_id , count ( * ) from documents group by project_id
select project_id , count ( * ) from documents group by project_id
select project_id from documents group by project_id order by count ( * ) asc limit 1
select project_id from documents group by project_id order by count ( * ) asc limit 1
select project_id from documents group by project_id having count ( * ) > = 2
select project_id from documents group by project_id having count ( * ) > = 2
select document_type_code , count ( * ) from documents group by document_type_code
select document_type_code , count ( * ) from documents group by document_type_code
select document_type_code from documents group by document_type_code order by count ( * ) desc limit 1
select document_type_code from documents group by document_type_code order by count ( * ) desc limit 1
select document_type_code from documents group by document_type_code having count ( * ) < 3
select document_type_code from documents group by document_type_code having count ( * ) < 3
select t1.statement_details , t2.document_name from statements as t1 join documents as t2 on t1.statement_id = t2.document_id where t1.statement_details = 'private project '
select t1.statement_details , t2.document_name from statements as t1 join documents as t2 on t1.statement_id = t2.document_id where t1.statement_details = 'private project '
select document_type_code , document_type_name , document_type_description from ref_document_types
select document_type_code , document_type_name , document_type_description from ref_document_types
select document_type_description from ref_document_types where document_type_name = `` film ''
select document_type_description from ref_document_types where document_type_name = `` film ''
select t1.document_type_name , t1.document_type_description , t2.document_date from ref_document_types as t1 join documents as t2 on t1.document_type_code = t2.document_type_code
select t1.document_type_name , t1.document_type_description , t2.document_date from ref_document_types as t1 join documents as t2 on t1.document_type_code = t2.document_type_code
select count ( * ) from projects
select count ( * ) from projects
select project_id , project_details from projects
select project_id , project_details from projects
select t1.project_id , t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id group by t1.project_id having count ( * ) > 2
select t1.project_id , t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id group by t1.project_id having count ( * ) > 2
select t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id where t2.document_name = `` king book ''
select t1.project_details from projects as t1 join documents as t2 on t1.project_id = t2.project_id where t2.document_name = `` king book ''
select count ( * ) from ref_budget_codes
select count ( * ) from ref_budget_codes
select budget_type_code , budget_type_description from ref_budget_codes
select budget_type_code , budget_type_description from ref_budget_codes
select budget_type_description from ref_budget_codes where budget_type_code = `` org ''
select budget_type_description from ref_budget_codes where budget_type_code = `` org ''
select count ( * ) from documents_with_expenses
select count ( * ) from documents_with_expenses
select document_id from documents_with_expenses where budget_type_code = 'sf '
select document_id from documents_with_expenses where budget_type_code = 'sf '
select t2.budget_type_code , t2.budget_type_description , t1.document_id from documents_with_expenses as t1 join ref_budget_codes as t2 on t1.budget_type_code = t2.budget_type_code
select t2.budget_type_code , t2.budget_type_description , t1.document_id from documents_with_expenses as t1 join ref_budget_codes as t2 on t1.budget_type_code = t2.budget_type_code
select t1.document_id from documents_with_expenses as t1 join ref_budget_codes as t2 on t1.budget_type_code = t2.budget_type_code where t2.budget_type_description = `` government ''
select t1.document_id from documents_with_expenses as t1 join ref_budget_codes as t2 on t1.budget_type_code = t2.budget_type_code where t2.budget_type_description = `` government ''
select budget_type_code , count ( * ) from documents_with_expenses group by budget_type_code
select budget_type_code , count ( * ) from documents_with_expenses group by budget_type_code
select budget_type_code from documents_with_expenses group by budget_type_code order by count ( * ) desc limit 1
select budget_type_code from documents_with_expenses group by budget_type_code order by count ( * ) desc limit 1
select document_id from documents except select document_id from documents_with_expenses
select document_id from documents except select document_id from documents_with_expenses
select document_id from documents where document_type_code = `` cv '' except select document_id from documents_with_expenses
select document_id from documents where document_type_code = `` cv '' except select document_id from documents_with_expenses
select t1.document_id from documents as t1 join documents_with_expenses as t2 on t1.document_id = t2.document_id where t1.document_name like ' % s % '
select t1.document_id from documents as t1 join documents_with_expenses as t2 on t1.document_id = t2.document_id where t1.document_name like ' % s % '
select count ( * ) from documents where document_id not in ( select document_id from documents_with_expenses )
select count ( * ) from documents where document_id not in ( select document_id from documents_with_expenses )
select t1.document_date from documents as t1 join documents_with_expenses as t2 on t1.document_id = t2.document_id where t2.budget_type_code = 'gv ' intersect select t1.document_date from documents as t1 join documents_with_expenses as t2 on t1.document_id = t2.document_id where t2.budget_type_code = 'sf '
select t1.document_date from documents as t1 join documents_with_expenses as t2 on t1.document_id = t2.document_id where t2.budget_type_code = 'gv ' intersect select t1.document_date from documents as t1 join documents_with_expenses as t2 on t1.document_id = t2.document_id where t2.budget_type_code = 'sf '
select max ( account_details ) from accounts union select account_details from accounts where account_details like `` % 5 % ''
select max ( account_details ) from accounts union select account_details from accounts where account_details like `` % 5 % ''
select count ( * ) from scientists
select count ( * ) from scientists
select sum ( hours ) from projects
select sum ( hours ) from projects
select count ( distinct scientist ) from assignedto
select count ( distinct scientist ) from assignedto
select count ( distinct name ) from projects
select count ( distinct name ) from projects
select avg ( hours ) from projects
select avg ( hours ) from projects
select name from projects order by hours desc limit 1
select name from projects order by hours desc limit 1
select name from projects where hours > ( select avg ( hours ) from projects )
select name from projects where hours > ( select avg ( hours ) from projects )
select t1.name , t1.hours from projects as t1 join assignedto as t2 on t1.code = t2.project group by t2.project order by count ( * ) desc limit 1
select t1.name , t1.hours from projects as t1 join assignedto as t2 on t1.code = t2.project group by t2.project order by count ( * ) desc limit 1
select t2.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name like ' % smith % '
select t2.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name like ' % smith % '
select sum ( t2.hours ) from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name = 'michael rogers ' or t3.name = 'carol smith '
select sum ( t2.hours ) from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t3.name = 'michael rogers ' or t3.name = 'carol smith '
select name from projects where hours between 100 and 300
select name from projects where hours between 100 and 300
select t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'matter of time ' intersect select t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'a puzzling parallax '
select t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'matter of time ' intersect select t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.name = 'a puzzling parallax '
select name from scientists order by name
select name from scientists order by name
select count ( * ) , t1.name from projects as t1 join assignedto as t2 on t1.code = t2.project group by t1.name
select count ( * ) , t1.name from projects as t1 join assignedto as t2 on t1.code = t2.project group by t1.name
select count ( * ) , t1.name from projects as t1 join assignedto as t2 on t1.code = t2.project where t1.hours > 300 group by t1.name
select count ( * ) , t1.name from projects as t1 join assignedto as t2 on t1.code = t2.project where t1.hours > 300 group by t1.name
select count ( * ) , t1.name from scientists as t1 join assignedto as t2 on t1.ssn = t2.scientist group by t1.name
select count ( * ) , t1.name from scientists as t1 join assignedto as t2 on t1.ssn = t2.scientist group by t1.name
select t3.ssn , t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = ( select max ( hours ) from projects )
select t3.ssn , t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = ( select max ( hours ) from projects )
select t2.name from assignedto as t1 join scientists as t2 on t1.scientist = t2.ssn
select t2.name from assignedto as t1 join scientists as t2 on t1.scientist = t2.ssn
select name from projects where code not in ( select project from assignedto )
select name from projects where code not in ( select project from assignedto )
select name from scientists where ssn not in ( select scientist from assignedto )
select name from scientists where ssn not in ( select scientist from assignedto )
select count ( * ) from scientists where ssn not in ( select scientist from assignedto )
select count ( * ) from scientists where ssn not in ( select scientist from assignedto )
select name from scientists except select t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = ( select max ( hours ) from projects )
select name from scientists except select t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = ( select max ( hours ) from projects )
select t1.name , t3.name , t3.hours from scientists as t1 join assignedto as t2 on t1.ssn = t2.scientist join projects as t3 on t2.project = t3.code order by t3.name , t1.name
select t1.name , t3.name , t3.hours from scientists as t1 join assignedto as t2 on t1.ssn = t2.scientist join projects as t3 on t2.project = t3.code order by t3.name , t1.name
select t2.name , t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = ( select min ( hours ) from projects )
select t2.name , t3.name from assignedto as t1 join projects as t2 on t1.project = t2.code join scientists as t3 on t1.scientist = t3.ssn where t2.hours = ( select min ( hours ) from projects )
select name from wine order by score limit 1
select name from wine order by score limit 1
select winery from wine order by score limit 1
select winery from wine order by score limit 1
select name from wine where year = `` 2008 ''
select name from wine where year = `` 2008 ''
select grape , appelation from wine
select grape , appelation from wine
select name , score from wine
select name , score from wine
select area , county from appellations
select area , county from appellations
select price from wine where year < 2010
select price from wine where year < 2010
select name from wine where score > 90
select name from wine where score > 90
select distinct t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` red ''
select distinct t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` red ''
select distinct t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = `` north coast ''
select distinct t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = `` north coast ''
select count ( * ) from wine where winery = `` robert biale ''
select count ( * ) from wine where winery = `` robert biale ''
select count ( * ) from appellations where county = `` napa ''
select count ( * ) from appellations where county = `` napa ''
select avg ( t2.price ) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = `` sonoma ''
select avg ( t2.price ) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = `` sonoma ''
select t2.name , t2.score from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` white ''
select t2.name , t2.score from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` white ''
select max ( t2.price ) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = `` central coast '' and t2.year < 2005
select max ( t2.price ) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = `` central coast '' and t2.year < 2005
select distinct t1.grape from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` white '' and t2.score > 90
select distinct t1.grape from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` white '' and t2.score > 90
select t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` red '' and t2.price > 50
select t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` red '' and t2.price > 50
select t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = `` monterey '' and t2.price < 50
select t2.name from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = `` monterey '' and t2.price < 50
select count ( * ) , grape from wine group by grape
select count ( * ) , grape from wine group by grape
select avg ( price ) , year from wine group by year
select avg ( price ) , year from wine group by year
select distinct name from wine where price > ( select min ( price ) from wine where winery = `` john anthony '' )
select distinct name from wine where price > ( select min ( price ) from wine where winery = `` john anthony '' )
select distinct name from wine order by name
select distinct name from wine order by name
select distinct name from wine order by price
select distinct name from wine order by price
select t1.area from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having t2.year < 2010 order by count ( * ) desc limit 1
select t1.area from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having t2.year < 2010 order by count ( * ) desc limit 1
select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg ( price ) desc limit 1
select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg ( price ) desc limit 1
select distinct name from wine where year < 2000 or year > 2010
select distinct name from wine where year < 2000 or year > 2010
select distinct winery from wine where price between 50 and 100
select distinct winery from wine where price between 50 and 100
select avg ( price ) , avg ( cases ) from wine where year = 2009 and grape = `` zinfandel ''
select avg ( price ) , avg ( cases ) from wine where year = 2009 and grape = `` zinfandel ''
select max ( price ) , max ( score ) from wine where appelation = `` st. helena ''
select max ( price ) , max ( score ) from wine where appelation = `` st. helena ''
select max ( price ) , max ( score ) , year from wine group by year
select max ( price ) , max ( score ) , year from wine group by year
select avg ( price ) , avg ( score ) , appelation from wine group by appelation
select avg ( price ) , avg ( score ) , appelation from wine group by appelation
select winery from wine group by winery having count ( * ) > = 4
select winery from wine group by winery having count ( * ) > = 4
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having count ( * ) < = 3
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having count ( * ) < = 3
select name from wine where year < ( select min ( year ) from wine where winery = `` brander '' )
select name from wine where year < ( select min ( year ) from wine where winery = `` brander '' )
select name from wine where price > ( select max ( price ) from wine where year = 2006 )
select name from wine where price > ( select max ( price ) from wine where year = 2006 )
select t2.winery from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` white '' group by t2.winery order by count ( * ) desc limit 3
select t2.winery from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = `` white '' group by t2.winery order by count ( * ) desc limit 3
select grape , winery , year from wine where price > 100 order by year
select grape , winery , year from wine where price > 100 order by year
select grape , appelation , name from wine where score > 93 order by name
select grape , appelation , name from wine where score > 93 order by name
select appelation from wine where year > 2008 except select appelation from appellations where area = `` central coast ''
select appelation from wine where year > 2008 except select appelation from appellations where area = `` central coast ''
select avg ( price ) from wine where appelation not in ( select t1.appelation from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = 'sonoma ' )
select avg ( price ) from wine where appelation not in ( select t1.appelation from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = 'sonoma ' )
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t2.score > 90 group by t1.county order by count ( * ) desc limit 1
select t1.county from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t2.score > 90 group by t1.county order by count ( * ) desc limit 1
select count ( * ) from station
select name , location , number_of_platforms from station
select distinct location from station
select name , total_passengers from station where location ! = 'london '
select name , main_services from station order by total_passengers desc limit 3
select avg ( total_passengers ) , max ( total_passengers ) from station where location = 'london ' or location = 'glasgow '
select location , sum ( number_of_platforms ) , sum ( total_passengers ) from station group by location
select distinct location from station where number_of_platforms > = 15 and total_passengers > 25
select location from station except select location from station where number_of_platforms > = 15
select location from station group by location order by count ( * ) desc limit 1
select name , time , service from train
select count ( * ) from train
select name , service from train order by time
select t2.name , count ( * ) from train_station as t1 join station as t2 on t1.station_id = t2.station_id group by t1.station_id
select t2.name , t3.name from train_station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id
select t3.name , t3.time from train_station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id where t2.location = 'london ' order by t3.time desc
select t2.name from train_station as t1 join station as t2 on t1.station_id = t2.station_id group by t1.station_id order by count ( * ) desc limit 1
select t2.name from train_station as t1 join station as t2 on t1.station_id = t2.station_id group by t1.station_id having count ( * ) > = 2
select location from station group by location having count ( * ) = 1
select name from station where station_id not in ( select station_id from train_station )
select t2.name from train_station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id where t3.name = `` ananthapuri express '' intersect select t2.name from train_station as t1 join station as t2 on t1.station_id = t2.station_id join train as t3 on t3.train_id = t1.train_id where t3.name = `` guruvayur express ''
select t2.name from train_station as t1 join train as t2 on t1.train_id = t2.train_id where t1.station_id not in ( select t4.station_id from train_station as t3 join station as t4 on t3.station_id = t4.station_id where t4.location = `` london '' )
select name , location from station order by annual_entry_exit , annual_interchanges
select vehicle_id from vehicles ;
select vehicle_id from vehicles ;
select count ( * ) from vehicles ;
select count ( * ) from vehicles ;
select vehicle_details from vehicles where vehicle_id = 1 ;
select vehicle_details from vehicles where vehicle_id = 1 ;
select first_name , middle_name , last_name from staff ;
select first_name , middle_name , last_name from staff ;
select date_of_birth from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select date_of_birth from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select date_joined_staff from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select date_joined_staff from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select date_left_staff from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select date_left_staff from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select count ( * ) from staff where first_name = `` ludie '' ;
select count ( * ) from staff where first_name = `` ludie '' ;
select nickname from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select nickname from staff where first_name = `` janessa '' and last_name = `` sawayn '' ;
select count ( * ) from staff ;
select count ( * ) from staff ;
select t1.city from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select t1.city from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select t1.country , t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select t1.country , t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select sum ( t1.lesson_time ) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` rylan '' and t2.last_name = `` goodwin '' ;
select sum ( t1.lesson_time ) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` rylan '' and t2.last_name = `` goodwin '' ;
select t1.zip_postcode from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select t1.zip_postcode from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select count ( * ) from addresses where state_province_county = `` georgia '' ;
select count ( * ) from addresses where state_province_county = `` georgia '' ;
select t2.first_name , t2.last_name from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t1.city = `` damianfort '' ;
select t2.first_name , t2.last_name from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t1.city = `` damianfort '' ;
select t1.city , count ( * ) from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.city order by count ( * ) desc limit 1 ;
select t1.city , count ( * ) from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.city order by count ( * ) desc limit 1 ;
select t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.state_province_county having count ( * ) between 2 and 4 ;
select t1.state_province_county from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id group by t1.state_province_county having count ( * ) between 2 and 4 ;
select first_name , last_name from customers ;
select first_name , last_name from customers ;
select email_address , date_of_birth from customers where first_name = `` carole ''
select email_address , date_of_birth from customers where first_name = `` carole ''
select phone_number , email_address from customers where amount_outstanding > 2000 ;
select phone_number , email_address from customers where amount_outstanding > 2000 ;
select customer_status_code , cell_mobile_phone_number , email_address from customers where first_name = `` marina '' or last_name = `` kohler ''
select customer_status_code , cell_mobile_phone_number , email_address from customers where first_name = `` marina '' or last_name = `` kohler ''
select date_of_birth from customers where customer_status_code = 'good customer '
select date_of_birth from customers where customer_status_code = 'good customer '
select date_became_customer from customers where first_name = `` carole '' and last_name = `` bernhard '' ;
select date_became_customer from customers where first_name = `` carole '' and last_name = `` bernhard '' ;
select count ( * ) from customers ;
select count ( * ) from customers ;
select customer_status_code , count ( * ) from customers group by customer_status_code ;
select customer_status_code , count ( * ) from customers group by customer_status_code ;
select customer_status_code from customers group by customer_status_code order by count ( * ) asc limit 1 ;
select customer_status_code from customers group by customer_status_code order by count ( * ) asc limit 1 ;
select count ( * ) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` rylan '' and t2.last_name = `` goodwin '' and t1.lesson_status_code = `` completed '' ;
select count ( * ) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` rylan '' and t2.last_name = `` goodwin '' and t1.lesson_status_code = `` completed '' ;
select max ( amount_outstanding ) , min ( amount_outstanding ) , avg ( amount_outstanding ) from customers ;
select max ( amount_outstanding ) , min ( amount_outstanding ) , avg ( amount_outstanding ) from customers ;
select first_name , last_name from customers where amount_outstanding between 1000 and 3000 ;
select first_name , last_name from customers where amount_outstanding between 1000 and 3000 ;
select t1.first_name , t1.last_name from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t2.city = `` lockmanfurt '' ;
select t1.first_name , t1.last_name from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t2.city = `` lockmanfurt '' ;
select t2.country from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = `` carole '' and t1.last_name = `` bernhard ''
select t2.country from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = `` carole '' and t1.last_name = `` bernhard ''
select t2.zip_postcode from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = `` carole '' and t1.last_name = `` bernhard ''
select t2.zip_postcode from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id where t1.first_name = `` carole '' and t1.last_name = `` bernhard ''
select t2.city from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id group by t2.city order by count ( * ) desc limit 1 ;
select t2.city from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id group by t2.city order by count ( * ) desc limit 1 ;
select sum ( t1.amount_payment ) from customer_payments as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` carole '' and t2.last_name = `` bernhard ''
select sum ( t1.amount_payment ) from customer_payments as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` carole '' and t2.last_name = `` bernhard ''
select count ( * ) from customers where customer_id not in ( select customer_id from customer_payments ) ;
select count ( * ) from customers where customer_id not in ( select customer_id from customer_payments ) ;
select t2.first_name , t2.last_name from customer_payments as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > 2 ;
select t2.first_name , t2.last_name from customer_payments as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count ( * ) > 2 ;
select payment_method_code , count ( * ) from customer_payments group by payment_method_code ;
select payment_method_code , count ( * ) from customer_payments group by payment_method_code ;
select count ( * ) from lessons where lesson_status_code = `` cancelled '' ;
select count ( * ) from lessons where lesson_status_code = `` cancelled '' ;
select t1.lesson_id from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' and nickname like `` % s % '' ;
select t1.lesson_id from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' and nickname like `` % s % '' ;
select count ( * ) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name like `` % a % ''
select count ( * ) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name like `` % a % ''
select sum ( lesson_time ) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select sum ( lesson_time ) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select avg ( price ) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select avg ( price ) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name = `` janessa '' and t2.last_name = `` sawayn '' ;
select count ( * ) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` ray ''
select count ( * ) from lessons as t1 join customers as t2 on t1.customer_id = t2.customer_id where t2.first_name = `` ray ''
select last_name from customers intersect select last_name from staff
select last_name from customers intersect select last_name from staff
select first_name from staff except select t2.first_name from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id
select first_name from staff except select t2.first_name from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id
select t1.vehicle_id , t1.vehicle_details from vehicles as t1 join lessons as t2 on t1.vehicle_id = t2.vehicle_id group by t1.vehicle_id order by count ( * ) desc limit 1
select count ( * ) from faculty
select count ( * ) from faculty
select distinct rank from faculty
select distinct rank from faculty
select distinct building from faculty
select distinct building from faculty
select rank , fname , lname from faculty
select rank , fname , lname from faculty
select fname , lname , phone from faculty where sex = 'f '
select fname , lname , phone from faculty where sex = 'f '
select facid from faculty where sex = 'm '
select facid from faculty where sex = 'm '
select count ( * ) from faculty where sex = 'f ' and rank = `` professor ''
select count ( * ) from faculty where sex = 'f ' and rank = `` professor ''
select phone , room , building from faculty where fname = `` jerry '' and lname = `` prince ''
select phone , room , building from faculty where fname = `` jerry '' and lname = `` prince ''
select count ( * ) from faculty where rank = `` professor '' and building = `` neb ''
select count ( * ) from faculty where rank = `` professor '' and building = `` neb ''
select fname , lname from faculty where rank = `` instructor ''
select fname , lname from faculty where rank = `` instructor ''
select building , count ( * ) from faculty group by building
select building , count ( * ) from faculty group by building
select building from faculty group by building order by count ( * ) desc limit 1
select building from faculty group by building order by count ( * ) desc limit 1
select building from faculty where rank = `` professor '' group by building having count ( * ) > = 10
select building from faculty where rank = `` professor '' group by building having count ( * ) > = 10
select rank , count ( * ) from faculty group by rank
select rank , count ( * ) from faculty group by rank
select rank , sex , count ( * ) from faculty group by rank , sex
select rank , sex , count ( * ) from faculty group by rank , sex
select rank from faculty group by rank order by count ( * ) asc limit 1
select rank from faculty group by rank order by count ( * ) asc limit 1
select sex , count ( * ) from faculty where rank = `` asstprof '' group by sex
select sex , count ( * ) from faculty where rank = `` asstprof '' group by sex
select t1.fname , t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t2.fname = `` linda '' and t2.lname = `` smith ''
select t1.fname , t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t2.fname = `` linda '' and t2.lname = `` smith ''
select t2.stuid from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.rank = `` professor ''
select t2.stuid from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.rank = `` professor ''
select t2.fname , t2.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.fname = `` michael '' and t1.lname = `` goodrich ''
select t2.fname , t2.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor where t1.fname = `` michael '' and t1.lname = `` goodrich ''
select t1.facid , count ( * ) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid
select t1.facid , count ( * ) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid
select t1.rank , count ( * ) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.rank
select t1.rank , count ( * ) from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.rank
select t1.fname , t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid order by count ( * ) desc limit 1
select t1.fname , t1.lname from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid order by count ( * ) desc limit 1
select t1.facid from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid having count ( * ) > = 2
select t1.facid from faculty as t1 join student as t2 on t1.facid = t2.advisor group by t1.facid having count ( * ) > = 2
select facid from faculty except select advisor from student
select facid from faculty except select advisor from student
select activity_name from activity
select activity_name from activity
select count ( * ) from activity
select count ( * ) from activity
select count ( distinct facid ) from faculty_participates_in
select count ( distinct facid ) from faculty_participates_in
select facid from faculty except select facid from faculty_participates_in
select facid from faculty except select facid from faculty_participates_in
select facid from faculty_participates_in intersect select advisor from student
select facid from faculty_participates_in intersect select advisor from student
select count ( * ) from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid where t1.fname = `` mark '' and t1.lname = `` giuliano ''
select count ( * ) from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid where t1.fname = `` mark '' and t1.lname = `` giuliano ''
select t3.activity_name from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t3.actid = t2.actid where t1.fname = `` mark '' and t1.lname = `` giuliano ''
select t3.activity_name from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t3.actid = t2.actid where t1.fname = `` mark '' and t1.lname = `` giuliano ''
select t1.fname , t1.lname , count ( * ) , t1.facid from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid
select t1.fname , t1.lname , count ( * ) , t1.facid from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid
select t1.activity_name , count ( * ) from activity as t1 join faculty_participates_in as t2 on t1.actid = t2.actid group by t1.actid
select t1.activity_name , count ( * ) from activity as t1 join faculty_participates_in as t2 on t1.actid = t2.actid group by t1.actid
select t1.fname , t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid order by count ( * ) desc limit 1
select t1.fname , t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid order by count ( * ) desc limit 1
select t1.activity_name from activity as t1 join faculty_participates_in as t2 on t1.actid = t2.actid group by t1.actid order by count ( * ) desc limit 1
select t1.activity_name from activity as t1 join faculty_participates_in as t2 on t1.actid = t2.actid group by t1.actid order by count ( * ) desc limit 1
select stuid from student except select stuid from participates_in
select stuid from student except select stuid from participates_in
select stuid from participates_in intersect select stuid from student where age < 20
select stuid from participates_in intersect select stuid from student where age < 20
select t1.fname , t1.lname from student as t1 join participates_in as t2 on t1.stuid = t2.stuid group by t1.stuid order by count ( * ) desc limit 1
select t1.fname , t1.lname from student as t1 join participates_in as t2 on t1.stuid = t2.stuid group by t1.stuid order by count ( * ) desc limit 1
select t1.activity_name from activity as t1 join participates_in as t2 on t1.actid = t2.actid group by t1.actid order by count ( * ) desc limit 1
select t1.activity_name from activity as t1 join participates_in as t2 on t1.actid = t2.actid group by t1.actid order by count ( * ) desc limit 1
select distinct t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing ' or t3.activity_name = 'kayaking '
select distinct t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing ' or t3.activity_name = 'kayaking '
select lname from faculty where rank = 'professor ' except select distinct t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing ' or t3.activity_name = 'kayaking '
select lname from faculty where rank = 'professor ' except select distinct t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing ' or t3.activity_name = 'kayaking '
select t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing ' intersect select t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'kayaking '
select t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing ' intersect select t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'kayaking '
select t1.stuid from participates_in as t1 join activity as t2 on t2.actid = t2.actid where t2.activity_name = 'canoeing ' intersect select t1.stuid from participates_in as t1 join activity as t2 on t2.actid = t2.actid where t2.activity_name = 'kayaking '
select t1.stuid from participates_in as t1 join activity as t2 on t2.actid = t2.actid where t2.activity_name = 'canoeing ' intersect select t1.stuid from participates_in as t1 join activity as t2 on t2.actid = t2.actid where t2.activity_name = 'kayaking '
select name from airports where city = 'goroka '
select name from airports where city = 'goroka '
select name , city , country , elevation from airports where city = 'new york '
select name , city , country , elevation from airports where city = 'new york '
select count ( * ) from airlines
select count ( * ) from airlines
select count ( * ) from airlines where country = 'russia '
select count ( * ) from airlines where country = 'russia '
select max ( elevation ) from airports where country = 'iceland '
select max ( elevation ) from airports where country = 'iceland '
select name from airports where country = 'cuba ' or country = 'argentina '
select name from airports where country = 'cuba ' or country = 'argentina '
select country from airlines where name like 'orbit % '
select country from airlines where name like 'orbit % '
select name from airports where elevation between -50 and 50
select name from airports where elevation between -50 and 50
select country from airports order by elevation desc limit 1
select country from airports order by elevation desc limit 1
select count ( * ) from airports where name like ' % international % '
select count ( * ) from airports where name like ' % international % '
select count ( distinct city ) from airports where country = 'greenland '
select count ( distinct city ) from airports where country = 'greenland '
select count ( * ) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'american airlines '
select count ( * ) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'american airlines '
select count ( * ) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where country = 'canada '
select count ( * ) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where country = 'canada '
select name , city , country from airports order by elevation limit 1
select name , city , country from airports order by elevation limit 1
select name , city , country from airports order by elevation desc limit 1
select name , city , country from airports order by elevation desc limit 1
select t1.name , t1.city , t2.dst_apid from airports as t1 join routes as t2 on t1.apid = t2.dst_apid group by t2.dst_apid order by count ( * ) desc limit 1
select t1.name , t1.city , t2.dst_apid from airports as t1 join routes as t2 on t1.apid = t2.dst_apid group by t2.dst_apid order by count ( * ) desc limit 1
select t1.name , t2.alid from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t2.alid order by count ( * ) desc limit 10
select t1.name , t2.alid from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t2.alid order by count ( * ) desc limit 10
select t1.name , t1.city , t2.src_apid from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t2.src_apid order by count ( * ) desc limit 1
select t1.name , t1.city , t2.src_apid from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t2.src_apid order by count ( * ) desc limit 1
select count ( distinct dst_apid ) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'american airlines '
select count ( distinct dst_apid ) from airlines as t1 join routes as t2 on t1.alid = t2.alid where t1.name = 'american airlines '
select country from airlines group by country order by count ( * ) desc limit 1
select country from airlines group by country order by count ( * ) desc limit 1
select country from airlines where active = 'y ' group by country order by count ( * ) desc limit 1
select country from airlines where active = 'y ' group by country order by count ( * ) desc limit 1
select country , count ( * ) from airlines group by country order by count ( * ) desc
select country , count ( * ) from airlines group by country order by count ( * ) desc
select count ( * ) , country from airports group by country order by count ( * ) desc
select count ( * ) , country from airports group by country order by count ( * ) desc
select count ( * ) , city from airports where country = 'united states ' group by city order by count ( * ) desc
select count ( * ) , city from airports where country = 'united states ' group by city order by count ( * ) desc
select city from airports where country = 'united states ' group by city having count ( * ) > 3
select city from airports where country = 'united states ' group by city having count ( * ) > 3
select count ( * ) from ( select city from airports group by city having count ( * ) > 3 )
select count ( * ) from ( select city from airports group by city having count ( * ) > 3 )
select city , count ( * ) from airports group by city having count ( * ) > 1
select city , count ( * ) from airports group by city having count ( * ) > 1
select city from airports group by city having count ( * ) > 2 order by count ( * )
select city from airports group by city having count ( * ) > 2 order by count ( * )
select count ( * ) , t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name
select count ( * ) , t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name
select count ( * ) , t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name order by count ( * ) desc
select count ( * ) , t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t1.name order by count ( * ) desc
select avg ( elevation ) , country from airports group by country
select avg ( elevation ) , country from airports group by country
select city from airports group by city having count ( * ) = 2
select city from airports group by city having count ( * ) = 2
select t1.country , t1.name , count ( * ) from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.country , t1.name
select t1.country , t1.name , count ( * ) from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.country , t1.name
select count ( * ) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid where t2.country = 'italy '
select count ( * ) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid where t2.country = 'italy '
select count ( * ) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid join airlines as t3 on t1.alid = t3.alid where t2.country = 'italy ' and t3.name = 'american airlines '
select count ( * ) from routes as t1 join airports as t2 on t1.dst_apid = t2.apid join airlines as t3 on t1.alid = t3.alid where t2.country = 'italy ' and t3.name = 'american airlines '
select count ( * ) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.name = 'john f kennedy international airport '
select count ( * ) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.name = 'john f kennedy international airport '
select count ( * ) from routes where dst_apid in ( select apid from airports where country = 'canada ' ) and src_apid in ( select apid from airports where country = 'united states ' )
select count ( * ) from routes where dst_apid in ( select apid from airports where country = 'canada ' ) and src_apid in ( select apid from airports where country = 'united states ' )
select rid from routes where dst_apid in ( select apid from airports where country = 'united states ' ) and src_apid in ( select apid from airports where country = 'united states ' )
select rid from routes where dst_apid in ( select apid from airports where country = 'united states ' ) and src_apid in ( select apid from airports where country = 'united states ' )
select t1.name from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.name order by count ( * ) desc limit 1
select t1.name from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.name order by count ( * ) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.country = 'china ' group by t1.name order by count ( * ) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.country = 'china ' group by t1.name order by count ( * ) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'china ' group by t1.name order by count ( * ) desc limit 1
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'china ' group by t1.name order by count ( * ) desc limit 1
select order_id from orders order by date_order_placed desc limit 1
select order_id from orders order by date_order_placed desc limit 1
select order_id , customer_id from orders order by date_order_placed limit 1
select order_id , customer_id from orders order by date_order_placed limit 1
select order_id from shipments where shipment_tracking_number = `` 3452 ''
select order_id from shipments where shipment_tracking_number = `` 3452 ''
select order_item_id from order_items where product_id = 11
select order_item_id from order_items where product_id = 11
select distinct t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` packing ''
select distinct t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` packing ''
select distinct t1.customer_details from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` on road ''
select distinct t1.customer_details from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` on road ''
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t2.order_id , t2.order_status from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` jeramie ''
select t2.order_id , t2.order_status from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` jeramie ''
select t2.date_order_placed from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` jeramie ''
select t2.date_order_placed from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t1.customer_name = `` jeramie ''
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.date_order_placed > = `` 2009-01-01 '' and t2.date_order_placed < = `` 2010-01-01 ''
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.date_order_placed > = `` 2009-01-01 '' and t2.date_order_placed < = `` 2010-01-01 ''
select distinct t2.product_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.date_order_placed > = `` 1975-01-01 '' and t1.date_order_placed < = `` 1976-01-01 ''
select distinct t2.product_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id where t1.date_order_placed > = `` 1975-01-01 '' and t1.date_order_placed < = `` 1976-01-01 ''
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` on road '' intersect select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` shipped ''
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` on road '' intersect select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` shipped ''
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` on road '' intersect select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` shipped ''
select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` on road '' intersect select t1.customer_id from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id where t2.order_status = `` shipped ''
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.shipment_tracking_number = 3452
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.shipment_tracking_number = 3452
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.invoice_number = 10
select t1.date_order_placed from orders as t1 join shipments as t2 on t1.order_id = t2.order_id where t2.invoice_number = 10
select count ( * ) , t3.product_id from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select count ( * ) , t3.product_id from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select t3.product_name , count ( * ) from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select t3.product_name , count ( * ) from orders as t1 join order_items as t2 join products as t3 on t1.order_id = t2.order_id and t2.product_id = t3.product_id group by t3.product_id
select order_id from shipments where shipment_date > `` 2000-01-01 ''
select order_id from shipments where shipment_date > `` 2000-01-01 ''
select order_id from shipments where shipment_date = ( select max ( shipment_date ) from shipments )
select order_id from shipments where shipment_date = ( select max ( shipment_date ) from shipments )
select distinct product_name from products order by product_name
select distinct product_name from products order by product_name
select distinct order_id from orders order by date_order_placed
select distinct order_id from orders order by date_order_placed
select t1.order_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id group by t1.order_id order by count ( * ) desc limit 1
select t1.order_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id group by t1.order_id order by count ( * ) desc limit 1
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count ( * ) desc limit 1
select invoice_number from invoices where invoice_date < `` 1989-09-03 '' or invoice_date > `` 2007-12-25 ''
select invoice_number from invoices where invoice_date < `` 1989-09-03 '' or invoice_date > `` 2007-12-25 ''
select distinct invoice_details from invoices where invoice_date < `` 1989-09-03 '' or invoice_date > `` 2007-12-25 ''
select distinct invoice_details from invoices where invoice_date < `` 1989-09-03 '' or invoice_date > `` 2007-12-25 ''
select t2.customer_name , count ( * ) from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count ( * ) > = 2
select t2.customer_name , count ( * ) from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count ( * ) > = 2
select t2.customer_name from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count ( * ) < = 2
select t2.customer_name from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t2.customer_id having count ( * ) < = 2
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t4.product_name = `` food '' group by t1.customer_id having count ( * ) > = 1
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t4.product_name = `` food '' group by t1.customer_id having count ( * ) > = 1
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t3.order_item_status = `` cancel '' and t4.product_name = `` food '' group by t1.customer_id having count ( * ) > = 1
select t1.customer_name from customers as t1 join orders as t2 join order_items as t3 join products as t4 on t1.customer_id = t2.customer_id and t2.order_id = t3.order_id and t3.product_id = t4.product_id where t3.order_item_status = `` cancel '' and t4.product_name = `` food '' group by t1.customer_id having count ( * ) > = 1
select count ( * ) from architect where gender = 'female '
select name , nationality , id from architect where gender = 'male ' order by name
select max ( t1.length_meters ) , t2.name from bridge as t1 join architect as t2 on t1.architect_id = t2.id
select avg ( length_feet ) from bridge
select name , built_year from mill where type = 'grondzeiler '
select distinct t1.name , t1.nationality from architect as t1 join mill as t2 on t1.id = t2.architect_id
select name from mill where location ! = 'donceel '
select distinct t1.type from mill as t1 join architect as t2 on t1.architect_id = t2.id where t2.nationality = 'american ' or t2.nationality = 'canadian '
select t1.id , t1.name from architect as t1 join bridge as t2 on t1.id = t2.architect_id group by t1.id having count ( * ) > = 3
select t1.id , t1.name , t1.nationality from architect as t1 join mill as t2 on t1.id = t2.architect_id group by t1.id order by count ( * ) desc limit 1
select t1.id , t1.name , t1.gender from architect as t1 join bridge as t2 on t1.id = t2.architect_id group by t1.id having count ( * ) = 2 union select t1.id , t1.name , t1.gender from architect as t1 join mill as t2 on t1.id = t2.architect_id group by t1.id having count ( * ) = 1
select location from bridge where name = 'kolob arch ' or name = 'rainbow bridge '
select name from mill where name like ' % moulin % '
select distinct t1.name from mill as t1 join architect as t2 on t1.architect_id = t2.id join bridge as t3 on t3.architect_id = t2.id where t3.length_meters > 80
select type , count ( * ) from mill group by type order by count ( * ) desc limit 1
select count ( * ) from architect where id not in ( select architect_id from mill where built_year < 1850 ) ;
select t1.name from bridge as t1 join architect as t2 on t1.architect_id = t2.id where t2.nationality = 'american ' order by t1.length_feet
select count ( * ) from book_club
select count ( * ) from book_club
select book_title , author_or_editor from book_club where year > 1989
select book_title , author_or_editor from book_club where year > 1989
select distinct publisher from book_club
select distinct publisher from book_club
select year , book_title , publisher from book_club order by year desc
select year , book_title , publisher from book_club order by year desc
select publisher , count ( * ) from book_club group by publisher
select publisher , count ( * ) from book_club group by publisher
select publisher from book_club group by publisher order by count ( * ) desc limit 1
select publisher from book_club group by publisher order by count ( * ) desc limit 1
select category , count ( * ) from book_club group by category
select category , count ( * ) from book_club group by category
select category from book_club where year > 1989 group by category having count ( * ) > = 2
select category from book_club where year > 1989 group by category having count ( * ) > = 2
select publisher from book_club where year = 1989 intersect select publisher from book_club where year = 1990
select publisher from book_club where year = 1989 intersect select publisher from book_club where year = 1990
select publisher from book_club except select publisher from book_club where year = 1989
select publisher from book_club except select publisher from book_club where year = 1989
select title , year , director from movie order by budget_million
select title , year , director from movie order by budget_million
select count ( distinct director ) from movie
select count ( distinct director ) from movie
select title , director from movie where year < = 2000 order by gross_worldwide desc limit 1
select title , director from movie where year < = 2000 order by gross_worldwide desc limit 1
select director from movie where year = 2000 intersect select director from movie where year = 1999
select director from movie where year = 2000 intersect select director from movie where year = 1999
select director from movie where year = 1999 or year = 2000
select director from movie where year = 1999 or year = 2000
select avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) from movie where year < 2000
select avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) from movie where year < 2000
select t1.company_name from culture_company as t1 join book_club as t2 on t1.book_club_id = t2.book_club_id where t2.publisher = 'alyson '
select t1.company_name from culture_company as t1 join book_club as t2 on t1.book_club_id = t2.book_club_id where t2.publisher = 'alyson '
select t1.title , t3.book_title from movie as t1 join culture_company as t2 on t1.movie_id = t2.movie_id join book_club as t3 on t3.book_club_id = t2.book_club_id where t2.incorporated_in = 'china '
select t1.title , t3.book_title from movie as t1 join culture_company as t2 on t1.movie_id = t2.movie_id join book_club as t3 on t3.book_club_id = t2.book_club_id where t2.incorporated_in = 'china '
select t2.company_name from movie as t1 join culture_company as t2 on t1.movie_id = t2.movie_id where t1.year = 1999
select t2.company_name from movie as t1 join culture_company as t2 on t1.movie_id = t2.movie_id where t1.year = 1999
